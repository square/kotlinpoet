[{"name":"DEFAULT","description":"com.squareup.kotlinpoet.metadata.specs.JvmMethodModifier.DEFAULT","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-jvm-method-modifier/-d-e-f-a-u-l-t/index.html","searchKeys":["DEFAULT","DEFAULT","com.squareup.kotlinpoet.metadata.specs.JvmMethodModifier.DEFAULT"]},{"name":"STATIC","description":"com.squareup.kotlinpoet.metadata.specs.JvmFieldModifier.STATIC","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-jvm-field-modifier/-s-t-a-t-i-c/index.html","searchKeys":["STATIC","STATIC","com.squareup.kotlinpoet.metadata.specs.JvmFieldModifier.STATIC"]},{"name":"STATIC","description":"com.squareup.kotlinpoet.metadata.specs.JvmMethodModifier.STATIC","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-jvm-method-modifier/-s-t-a-t-i-c/index.html","searchKeys":["STATIC","STATIC","com.squareup.kotlinpoet.metadata.specs.JvmMethodModifier.STATIC"]},{"name":"SYNCHRONIZED","description":"com.squareup.kotlinpoet.metadata.specs.JvmMethodModifier.SYNCHRONIZED","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-jvm-method-modifier/-s-y-n-c-h-r-o-n-i-z-e-d/index.html","searchKeys":["SYNCHRONIZED","SYNCHRONIZED","com.squareup.kotlinpoet.metadata.specs.JvmMethodModifier.SYNCHRONIZED"]},{"name":"TRANSIENT","description":"com.squareup.kotlinpoet.metadata.specs.JvmFieldModifier.TRANSIENT","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-jvm-field-modifier/-t-r-a-n-s-i-e-n-t/index.html","searchKeys":["TRANSIENT","TRANSIENT","com.squareup.kotlinpoet.metadata.specs.JvmFieldModifier.TRANSIENT"]},{"name":"VOLATILE","description":"com.squareup.kotlinpoet.metadata.specs.JvmFieldModifier.VOLATILE","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-jvm-field-modifier/-v-o-l-a-t-i-l-e/index.html","searchKeys":["VOLATILE","VOLATILE","com.squareup.kotlinpoet.metadata.specs.JvmFieldModifier.VOLATILE"]},{"name":"abstract fun containerData(declarationContainer: KmDeclarationContainer, className: ClassName, parentClassName: ClassName?): ContainerData","description":"com.squareup.kotlinpoet.metadata.specs.ClassInspector.containerData","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-class-inspector/container-data.html","searchKeys":["containerData","abstract fun containerData(declarationContainer: KmDeclarationContainer, className: ClassName, parentClassName: ClassName?): ContainerData","com.squareup.kotlinpoet.metadata.specs.ClassInspector.containerData"]},{"name":"abstract fun declarationContainerFor(className: ClassName): KmDeclarationContainer","description":"com.squareup.kotlinpoet.metadata.specs.ClassInspector.declarationContainerFor","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-class-inspector/declaration-container-for.html","searchKeys":["declarationContainerFor","abstract fun declarationContainerFor(className: ClassName): KmDeclarationContainer","com.squareup.kotlinpoet.metadata.specs.ClassInspector.declarationContainerFor"]},{"name":"abstract fun enumEntry(enumClassName: ClassName, memberName: String): EnumEntryData","description":"com.squareup.kotlinpoet.metadata.specs.ClassInspector.enumEntry","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-class-inspector/enum-entry.html","searchKeys":["enumEntry","abstract fun enumEntry(enumClassName: ClassName, memberName: String): EnumEntryData","com.squareup.kotlinpoet.metadata.specs.ClassInspector.enumEntry"]},{"name":"abstract fun isInterface(className: ClassName): Boolean","description":"com.squareup.kotlinpoet.metadata.specs.ClassInspector.isInterface","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-class-inspector/is-interface.html","searchKeys":["isInterface","abstract fun isInterface(className: ClassName): Boolean","com.squareup.kotlinpoet.metadata.specs.ClassInspector.isInterface"]},{"name":"abstract fun methodExists(className: ClassName, methodSignature: JvmMethodSignature): Boolean","description":"com.squareup.kotlinpoet.metadata.specs.ClassInspector.methodExists","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-class-inspector/method-exists.html","searchKeys":["methodExists","abstract fun methodExists(className: ClassName, methodSignature: JvmMethodSignature): Boolean","com.squareup.kotlinpoet.metadata.specs.ClassInspector.methodExists"]},{"name":"abstract val annotations: Collection<AnnotationSpec>","description":"com.squareup.kotlinpoet.metadata.specs.ContainerData.annotations","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-container-data/annotations.html","searchKeys":["annotations","abstract val annotations: Collection<AnnotationSpec>","com.squareup.kotlinpoet.metadata.specs.ContainerData.annotations"]},{"name":"abstract val declarationContainer: KmDeclarationContainer","description":"com.squareup.kotlinpoet.metadata.specs.ContainerData.declarationContainer","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-container-data/declaration-container.html","searchKeys":["declarationContainer","abstract val declarationContainer: KmDeclarationContainer","com.squareup.kotlinpoet.metadata.specs.ContainerData.declarationContainer"]},{"name":"abstract val methods: Map<KmFunction, MethodData>","description":"com.squareup.kotlinpoet.metadata.specs.ContainerData.methods","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-container-data/methods.html","searchKeys":["methods","abstract val methods: Map<KmFunction, MethodData>","com.squareup.kotlinpoet.metadata.specs.ContainerData.methods"]},{"name":"abstract val properties: Map<KmProperty, PropertyData>","description":"com.squareup.kotlinpoet.metadata.specs.ContainerData.properties","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-container-data/properties.html","searchKeys":["properties","abstract val properties: Map<KmProperty, PropertyData>","com.squareup.kotlinpoet.metadata.specs.ContainerData.properties"]},{"name":"abstract val supportsNonRuntimeRetainedAnnotations: Boolean","description":"com.squareup.kotlinpoet.metadata.specs.ClassInspector.supportsNonRuntimeRetainedAnnotations","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-class-inspector/supports-non-runtime-retained-annotations.html","searchKeys":["supportsNonRuntimeRetainedAnnotations","abstract val supportsNonRuntimeRetainedAnnotations: Boolean","com.squareup.kotlinpoet.metadata.specs.ClassInspector.supportsNonRuntimeRetainedAnnotations"]},{"name":"class ElementsClassInspector : ClassInspector","description":"com.squareup.kotlinpoet.metadata.classinspectors.ElementsClassInspector","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.classinspectors/-elements-class-inspector/index.html","searchKeys":["ElementsClassInspector","class ElementsClassInspector : ClassInspector","com.squareup.kotlinpoet.metadata.classinspectors.ElementsClassInspector"]},{"name":"class ReflectiveClassInspector : ClassInspector","description":"com.squareup.kotlinpoet.metadata.classinspectors.ReflectiveClassInspector","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.classinspectors/-reflective-class-inspector/index.html","searchKeys":["ReflectiveClassInspector","class ReflectiveClassInspector : ClassInspector","com.squareup.kotlinpoet.metadata.classinspectors.ReflectiveClassInspector"]},{"name":"constructor(annotations: List<AnnotationSpec>, fieldData: FieldData?, getterData: MethodData?, setterData: MethodData?, isJvmField: Boolean)","description":"com.squareup.kotlinpoet.metadata.specs.PropertyData.PropertyData","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-property-data/-property-data.html","searchKeys":["PropertyData","constructor(annotations: List<AnnotationSpec>, fieldData: FieldData?, getterData: MethodData?, setterData: MethodData?, isJvmField: Boolean)","com.squareup.kotlinpoet.metadata.specs.PropertyData.PropertyData"]},{"name":"constructor(annotations: List<AnnotationSpec>, isSynthetic: Boolean, jvmModifiers: Set<JvmFieldModifier>, constant: CodeBlock?)","description":"com.squareup.kotlinpoet.metadata.specs.FieldData.FieldData","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-field-data/-field-data.html","searchKeys":["FieldData","constructor(annotations: List<AnnotationSpec>, isSynthetic: Boolean, jvmModifiers: Set<JvmFieldModifier>, constant: CodeBlock?)","com.squareup.kotlinpoet.metadata.specs.FieldData.FieldData"]},{"name":"constructor(annotations: List<AnnotationSpec>, parameterAnnotations: Map<Int, Collection<AnnotationSpec>>, isSynthetic: Boolean, jvmModifiers: Set<JvmMethodModifier>, exceptions: List<TypeName>)","description":"com.squareup.kotlinpoet.metadata.specs.ConstructorData.ConstructorData","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-constructor-data/-constructor-data.html","searchKeys":["ConstructorData","constructor(annotations: List<AnnotationSpec>, parameterAnnotations: Map<Int, Collection<AnnotationSpec>>, isSynthetic: Boolean, jvmModifiers: Set<JvmMethodModifier>, exceptions: List<TypeName>)","com.squareup.kotlinpoet.metadata.specs.ConstructorData.ConstructorData"]},{"name":"constructor(annotations: List<AnnotationSpec>, parameterAnnotations: Map<Int, Collection<AnnotationSpec>>, isSynthetic: Boolean, jvmModifiers: Set<JvmMethodModifier>, isOverride: Boolean, exceptions: List<TypeName>)","description":"com.squareup.kotlinpoet.metadata.specs.MethodData.MethodData","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-method-data/-method-data.html","searchKeys":["MethodData","constructor(annotations: List<AnnotationSpec>, parameterAnnotations: Map<Int, Collection<AnnotationSpec>>, isSynthetic: Boolean, jvmModifiers: Set<JvmMethodModifier>, isOverride: Boolean, exceptions: List<TypeName>)","com.squareup.kotlinpoet.metadata.specs.MethodData.MethodData"]},{"name":"constructor(declarationContainer: KmClass, className: ClassName, annotations: Collection<AnnotationSpec>, properties: Map<KmProperty, PropertyData>, constructors: Map<KmConstructor, ConstructorData>, methods: Map<KmFunction, MethodData>)","description":"com.squareup.kotlinpoet.metadata.specs.ClassData.ClassData","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-class-data/-class-data.html","searchKeys":["ClassData","constructor(declarationContainer: KmClass, className: ClassName, annotations: Collection<AnnotationSpec>, properties: Map<KmProperty, PropertyData>, constructors: Map<KmConstructor, ConstructorData>, methods: Map<KmFunction, MethodData>)","com.squareup.kotlinpoet.metadata.specs.ClassData.ClassData"]},{"name":"constructor(declarationContainer: KmClass?, annotations: Collection<AnnotationSpec>)","description":"com.squareup.kotlinpoet.metadata.specs.EnumEntryData.EnumEntryData","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-enum-entry-data/-enum-entry-data.html","searchKeys":["EnumEntryData","constructor(declarationContainer: KmClass?, annotations: Collection<AnnotationSpec>)","com.squareup.kotlinpoet.metadata.specs.EnumEntryData.EnumEntryData"]},{"name":"constructor(declarationContainer: KmPackage, annotations: Collection<AnnotationSpec>, properties: Map<KmProperty, PropertyData>, methods: Map<KmFunction, MethodData>, className: ClassName, jvmName: String? = if (!className.simpleName.endsWith(\"Kt\")) className.simpleName else null)","description":"com.squareup.kotlinpoet.metadata.specs.FileData.FileData","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-file-data/-file-data.html","searchKeys":["FileData","constructor(declarationContainer: KmPackage, annotations: Collection<AnnotationSpec>, properties: Map<KmProperty, PropertyData>, methods: Map<KmFunction, MethodData>, className: ClassName, jvmName: String? = if (!className.simpleName.endsWith(\"Kt\")) className.simpleName else null)","com.squareup.kotlinpoet.metadata.specs.FileData.FileData"]},{"name":"data class ClassData(val declarationContainer: KmClass, val className: ClassName, val annotations: Collection<AnnotationSpec>, val properties: Map<KmProperty, PropertyData>, val constructors: Map<KmConstructor, ConstructorData>, val methods: Map<KmFunction, MethodData>) : ContainerData","description":"com.squareup.kotlinpoet.metadata.specs.ClassData","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-class-data/index.html","searchKeys":["ClassData","data class ClassData(val declarationContainer: KmClass, val className: ClassName, val annotations: Collection<AnnotationSpec>, val properties: Map<KmProperty, PropertyData>, val constructors: Map<KmConstructor, ConstructorData>, val methods: Map<KmFunction, MethodData>) : ContainerData","com.squareup.kotlinpoet.metadata.specs.ClassData"]},{"name":"data class ConstructorData(annotations: List<AnnotationSpec>, val parameterAnnotations: Map<Int, Collection<AnnotationSpec>>, val isSynthetic: Boolean, val jvmModifiers: Set<JvmMethodModifier>, val exceptions: List<TypeName>)","description":"com.squareup.kotlinpoet.metadata.specs.ConstructorData","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-constructor-data/index.html","searchKeys":["ConstructorData","data class ConstructorData(annotations: List<AnnotationSpec>, val parameterAnnotations: Map<Int, Collection<AnnotationSpec>>, val isSynthetic: Boolean, val jvmModifiers: Set<JvmMethodModifier>, val exceptions: List<TypeName>)","com.squareup.kotlinpoet.metadata.specs.ConstructorData"]},{"name":"data class EnumEntryData(val declarationContainer: KmClass?, val annotations: Collection<AnnotationSpec>)","description":"com.squareup.kotlinpoet.metadata.specs.EnumEntryData","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-enum-entry-data/index.html","searchKeys":["EnumEntryData","data class EnumEntryData(val declarationContainer: KmClass?, val annotations: Collection<AnnotationSpec>)","com.squareup.kotlinpoet.metadata.specs.EnumEntryData"]},{"name":"data class FieldData(annotations: List<AnnotationSpec>, val isSynthetic: Boolean, val jvmModifiers: Set<JvmFieldModifier>, val constant: CodeBlock?)","description":"com.squareup.kotlinpoet.metadata.specs.FieldData","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-field-data/index.html","searchKeys":["FieldData","data class FieldData(annotations: List<AnnotationSpec>, val isSynthetic: Boolean, val jvmModifiers: Set<JvmFieldModifier>, val constant: CodeBlock?)","com.squareup.kotlinpoet.metadata.specs.FieldData"]},{"name":"data class FileData(val declarationContainer: KmPackage, val annotations: Collection<AnnotationSpec>, val properties: Map<KmProperty, PropertyData>, val methods: Map<KmFunction, MethodData>, val className: ClassName, val jvmName: String? = if (!className.simpleName.endsWith(\"Kt\")) className.simpleName else null) : ContainerData","description":"com.squareup.kotlinpoet.metadata.specs.FileData","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-file-data/index.html","searchKeys":["FileData","data class FileData(val declarationContainer: KmPackage, val annotations: Collection<AnnotationSpec>, val properties: Map<KmProperty, PropertyData>, val methods: Map<KmFunction, MethodData>, val className: ClassName, val jvmName: String? = if (!className.simpleName.endsWith(\"Kt\")) className.simpleName else null) : ContainerData","com.squareup.kotlinpoet.metadata.specs.FileData"]},{"name":"data class MethodData(annotations: List<AnnotationSpec>, val parameterAnnotations: Map<Int, Collection<AnnotationSpec>>, val isSynthetic: Boolean, val jvmModifiers: Set<JvmMethodModifier>, val isOverride: Boolean, val exceptions: List<TypeName>)","description":"com.squareup.kotlinpoet.metadata.specs.MethodData","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-method-data/index.html","searchKeys":["MethodData","data class MethodData(annotations: List<AnnotationSpec>, val parameterAnnotations: Map<Int, Collection<AnnotationSpec>>, val isSynthetic: Boolean, val jvmModifiers: Set<JvmMethodModifier>, val isOverride: Boolean, val exceptions: List<TypeName>)","com.squareup.kotlinpoet.metadata.specs.MethodData"]},{"name":"data class PropertyData(annotations: List<AnnotationSpec>, val fieldData: FieldData?, val getterData: MethodData?, val setterData: MethodData?, val isJvmField: Boolean)","description":"com.squareup.kotlinpoet.metadata.specs.PropertyData","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-property-data/index.html","searchKeys":["PropertyData","data class PropertyData(annotations: List<AnnotationSpec>, val fieldData: FieldData?, val getterData: MethodData?, val setterData: MethodData?, val isJvmField: Boolean)","com.squareup.kotlinpoet.metadata.specs.PropertyData"]},{"name":"enum JvmFieldModifier : JvmModifier, Enum<JvmFieldModifier> ","description":"com.squareup.kotlinpoet.metadata.specs.JvmFieldModifier","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-jvm-field-modifier/index.html","searchKeys":["JvmFieldModifier","enum JvmFieldModifier : JvmModifier, Enum<JvmFieldModifier> ","com.squareup.kotlinpoet.metadata.specs.JvmFieldModifier"]},{"name":"enum JvmMethodModifier : JvmModifier, Enum<JvmMethodModifier> ","description":"com.squareup.kotlinpoet.metadata.specs.JvmMethodModifier","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-jvm-method-modifier/index.html","searchKeys":["JvmMethodModifier","enum JvmMethodModifier : JvmModifier, Enum<JvmMethodModifier> ","com.squareup.kotlinpoet.metadata.specs.JvmMethodModifier"]},{"name":"fun Class<*>.toFileSpec(lenient: Boolean, classInspector: ClassInspector? = null): FileSpec","description":"com.squareup.kotlinpoet.metadata.specs.toFileSpec","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/to-file-spec.html","searchKeys":["toFileSpec","fun Class<*>.toFileSpec(lenient: Boolean, classInspector: ClassInspector? = null): FileSpec","com.squareup.kotlinpoet.metadata.specs.toFileSpec"]},{"name":"fun Class<*>.toTypeSpec(lenient: Boolean, classInspector: ClassInspector? = null): TypeSpec","description":"com.squareup.kotlinpoet.metadata.specs.toTypeSpec","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/to-type-spec.html","searchKeys":["toTypeSpec","fun Class<*>.toTypeSpec(lenient: Boolean, classInspector: ClassInspector? = null): TypeSpec","com.squareup.kotlinpoet.metadata.specs.toTypeSpec"]},{"name":"fun ClassInspector.classFor(className: ClassName): KmClass","description":"com.squareup.kotlinpoet.metadata.specs.classFor","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/class-for.html","searchKeys":["classFor","fun ClassInspector.classFor(className: ClassName): KmClass","com.squareup.kotlinpoet.metadata.specs.classFor"]},{"name":"fun ClassInspector.containerData(className: ClassName, parentClassName: ClassName?): ContainerData","description":"com.squareup.kotlinpoet.metadata.specs.containerData","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/container-data.html","searchKeys":["containerData","fun ClassInspector.containerData(className: ClassName, parentClassName: ClassName?): ContainerData","com.squareup.kotlinpoet.metadata.specs.containerData"]},{"name":"fun KClass<*>.toFileSpec(lenient: Boolean, classInspector: ClassInspector? = null): FileSpec","description":"com.squareup.kotlinpoet.metadata.specs.toFileSpec","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/to-file-spec.html","searchKeys":["toFileSpec","fun KClass<*>.toFileSpec(lenient: Boolean, classInspector: ClassInspector? = null): FileSpec","com.squareup.kotlinpoet.metadata.specs.toFileSpec"]},{"name":"fun KClass<*>.toTypeSpec(lenient: Boolean, classInspector: ClassInspector? = null): TypeSpec","description":"com.squareup.kotlinpoet.metadata.specs.toTypeSpec","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/to-type-spec.html","searchKeys":["toTypeSpec","fun KClass<*>.toTypeSpec(lenient: Boolean, classInspector: ClassInspector? = null): TypeSpec","com.squareup.kotlinpoet.metadata.specs.toTypeSpec"]},{"name":"fun KmClass.toFileSpec(classInspector: ClassInspector?, className: ClassName = createClassName(name)): FileSpec","description":"com.squareup.kotlinpoet.metadata.specs.toFileSpec","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/to-file-spec.html","searchKeys":["toFileSpec","fun KmClass.toFileSpec(classInspector: ClassInspector?, className: ClassName = createClassName(name)): FileSpec","com.squareup.kotlinpoet.metadata.specs.toFileSpec"]},{"name":"fun KmClass.toTypeSpec(classInspector: ClassInspector?, className: ClassName = createClassName(name)): TypeSpec","description":"com.squareup.kotlinpoet.metadata.specs.toTypeSpec","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/to-type-spec.html","searchKeys":["toTypeSpec","fun KmClass.toTypeSpec(classInspector: ClassInspector?, className: ClassName = createClassName(name)): TypeSpec","com.squareup.kotlinpoet.metadata.specs.toTypeSpec"]},{"name":"fun KmPackage.toFileSpec(classInspector: ClassInspector?, className: ClassName): FileSpec","description":"com.squareup.kotlinpoet.metadata.specs.toFileSpec","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/to-file-spec.html","searchKeys":["toFileSpec","fun KmPackage.toFileSpec(classInspector: ClassInspector?, className: ClassName): FileSpec","com.squareup.kotlinpoet.metadata.specs.toFileSpec"]},{"name":"fun TypeElement.toFileSpec(lenient: Boolean, classInspector: ClassInspector? = null): FileSpec","description":"com.squareup.kotlinpoet.metadata.specs.toFileSpec","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/to-file-spec.html","searchKeys":["toFileSpec","fun TypeElement.toFileSpec(lenient: Boolean, classInspector: ClassInspector? = null): FileSpec","com.squareup.kotlinpoet.metadata.specs.toFileSpec"]},{"name":"fun TypeElement.toTypeSpec(lenient: Boolean, classInspector: ClassInspector? = null): TypeSpec","description":"com.squareup.kotlinpoet.metadata.specs.toTypeSpec","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/to-type-spec.html","searchKeys":["toTypeSpec","fun TypeElement.toTypeSpec(lenient: Boolean, classInspector: ClassInspector? = null): TypeSpec","com.squareup.kotlinpoet.metadata.specs.toTypeSpec"]},{"name":"fun allAnnotations(useSiteTarget: AnnotationSpec.UseSiteTarget? = null, containsReifiedTypeParameter: Boolean = false): Collection<AnnotationSpec>","description":"com.squareup.kotlinpoet.metadata.specs.MethodData.allAnnotations","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-method-data/all-annotations.html","searchKeys":["allAnnotations","fun allAnnotations(useSiteTarget: AnnotationSpec.UseSiteTarget? = null, containsReifiedTypeParameter: Boolean = false): Collection<AnnotationSpec>","com.squareup.kotlinpoet.metadata.specs.MethodData.allAnnotations"]},{"name":"fun create(lenient: Boolean, classLoader: ClassLoader? = null): ClassInspector","description":"com.squareup.kotlinpoet.metadata.classinspectors.ReflectiveClassInspector.Companion.create","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.classinspectors/-reflective-class-inspector/-companion/create.html","searchKeys":["create","fun create(lenient: Boolean, classLoader: ClassLoader? = null): ClassInspector","com.squareup.kotlinpoet.metadata.classinspectors.ReflectiveClassInspector.Companion.create"]},{"name":"fun create(lenient: Boolean, elements: Elements, types: Types): ClassInspector","description":"com.squareup.kotlinpoet.metadata.classinspectors.ElementsClassInspector.Companion.create","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.classinspectors/-elements-class-inspector/-companion/create.html","searchKeys":["create","fun create(lenient: Boolean, elements: Elements, types: Types): ClassInspector","com.squareup.kotlinpoet.metadata.classinspectors.ElementsClassInspector.Companion.create"]},{"name":"fun valueOf(value: String): JvmFieldModifier","description":"com.squareup.kotlinpoet.metadata.specs.JvmFieldModifier.valueOf","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-jvm-field-modifier/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): JvmFieldModifier","com.squareup.kotlinpoet.metadata.specs.JvmFieldModifier.valueOf"]},{"name":"fun valueOf(value: String): JvmMethodModifier","description":"com.squareup.kotlinpoet.metadata.specs.JvmMethodModifier.valueOf","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-jvm-method-modifier/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): JvmMethodModifier","com.squareup.kotlinpoet.metadata.specs.JvmMethodModifier.valueOf"]},{"name":"fun values(): Array<JvmFieldModifier>","description":"com.squareup.kotlinpoet.metadata.specs.JvmFieldModifier.values","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-jvm-field-modifier/values.html","searchKeys":["values","fun values(): Array<JvmFieldModifier>","com.squareup.kotlinpoet.metadata.specs.JvmFieldModifier.values"]},{"name":"fun values(): Array<JvmMethodModifier>","description":"com.squareup.kotlinpoet.metadata.specs.JvmMethodModifier.values","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-jvm-method-modifier/values.html","searchKeys":["values","fun values(): Array<JvmMethodModifier>","com.squareup.kotlinpoet.metadata.specs.JvmMethodModifier.values"]},{"name":"interface ClassInspector","description":"com.squareup.kotlinpoet.metadata.specs.ClassInspector","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-class-inspector/index.html","searchKeys":["ClassInspector","interface ClassInspector","com.squareup.kotlinpoet.metadata.specs.ClassInspector"]},{"name":"interface ContainerData","description":"com.squareup.kotlinpoet.metadata.specs.ContainerData","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-container-data/index.html","searchKeys":["ContainerData","interface ContainerData","com.squareup.kotlinpoet.metadata.specs.ContainerData"]},{"name":"interface JvmModifier","description":"com.squareup.kotlinpoet.metadata.specs.JvmModifier","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-jvm-modifier/index.html","searchKeys":["JvmModifier","interface JvmModifier","com.squareup.kotlinpoet.metadata.specs.JvmModifier"]},{"name":"object Companion","description":"com.squareup.kotlinpoet.metadata.classinspectors.ElementsClassInspector.Companion","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.classinspectors/-elements-class-inspector/-companion/index.html","searchKeys":["Companion","object Companion","com.squareup.kotlinpoet.metadata.classinspectors.ElementsClassInspector.Companion"]},{"name":"object Companion","description":"com.squareup.kotlinpoet.metadata.classinspectors.ReflectiveClassInspector.Companion","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.classinspectors/-reflective-class-inspector/-companion/index.html","searchKeys":["Companion","object Companion","com.squareup.kotlinpoet.metadata.classinspectors.ReflectiveClassInspector.Companion"]},{"name":"object Companion","description":"com.squareup.kotlinpoet.metadata.specs.ConstructorData.Companion","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-constructor-data/-companion/index.html","searchKeys":["Companion","object Companion","com.squareup.kotlinpoet.metadata.specs.ConstructorData.Companion"]},{"name":"object Companion","description":"com.squareup.kotlinpoet.metadata.specs.FieldData.Companion","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-field-data/-companion/index.html","searchKeys":["Companion","object Companion","com.squareup.kotlinpoet.metadata.specs.FieldData.Companion"]},{"name":"object Companion","description":"com.squareup.kotlinpoet.metadata.specs.MethodData.Companion","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-method-data/-companion/index.html","searchKeys":["Companion","object Companion","com.squareup.kotlinpoet.metadata.specs.MethodData.Companion"]},{"name":"open fun annotationSpec(): AnnotationSpec?","description":"com.squareup.kotlinpoet.metadata.specs.JvmModifier.annotationSpec","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-jvm-modifier/annotation-spec.html","searchKeys":["annotationSpec","open fun annotationSpec(): AnnotationSpec?","com.squareup.kotlinpoet.metadata.specs.JvmModifier.annotationSpec"]},{"name":"open override fun containerData(declarationContainer: KmDeclarationContainer, className: ClassName, parentClassName: ClassName?): ContainerData","description":"com.squareup.kotlinpoet.metadata.classinspectors.ElementsClassInspector.containerData","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.classinspectors/-elements-class-inspector/container-data.html","searchKeys":["containerData","open override fun containerData(declarationContainer: KmDeclarationContainer, className: ClassName, parentClassName: ClassName?): ContainerData","com.squareup.kotlinpoet.metadata.classinspectors.ElementsClassInspector.containerData"]},{"name":"open override fun containerData(declarationContainer: KmDeclarationContainer, className: ClassName, parentClassName: ClassName?): ContainerData","description":"com.squareup.kotlinpoet.metadata.classinspectors.ReflectiveClassInspector.containerData","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.classinspectors/-reflective-class-inspector/container-data.html","searchKeys":["containerData","open override fun containerData(declarationContainer: KmDeclarationContainer, className: ClassName, parentClassName: ClassName?): ContainerData","com.squareup.kotlinpoet.metadata.classinspectors.ReflectiveClassInspector.containerData"]},{"name":"open override fun declarationContainerFor(className: ClassName): KmDeclarationContainer","description":"com.squareup.kotlinpoet.metadata.classinspectors.ElementsClassInspector.declarationContainerFor","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.classinspectors/-elements-class-inspector/declaration-container-for.html","searchKeys":["declarationContainerFor","open override fun declarationContainerFor(className: ClassName): KmDeclarationContainer","com.squareup.kotlinpoet.metadata.classinspectors.ElementsClassInspector.declarationContainerFor"]},{"name":"open override fun declarationContainerFor(className: ClassName): KmDeclarationContainer","description":"com.squareup.kotlinpoet.metadata.classinspectors.ReflectiveClassInspector.declarationContainerFor","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.classinspectors/-reflective-class-inspector/declaration-container-for.html","searchKeys":["declarationContainerFor","open override fun declarationContainerFor(className: ClassName): KmDeclarationContainer","com.squareup.kotlinpoet.metadata.classinspectors.ReflectiveClassInspector.declarationContainerFor"]},{"name":"open override fun enumEntry(enumClassName: ClassName, memberName: String): EnumEntryData","description":"com.squareup.kotlinpoet.metadata.classinspectors.ElementsClassInspector.enumEntry","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.classinspectors/-elements-class-inspector/enum-entry.html","searchKeys":["enumEntry","open override fun enumEntry(enumClassName: ClassName, memberName: String): EnumEntryData","com.squareup.kotlinpoet.metadata.classinspectors.ElementsClassInspector.enumEntry"]},{"name":"open override fun enumEntry(enumClassName: ClassName, memberName: String): EnumEntryData","description":"com.squareup.kotlinpoet.metadata.classinspectors.ReflectiveClassInspector.enumEntry","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.classinspectors/-reflective-class-inspector/enum-entry.html","searchKeys":["enumEntry","open override fun enumEntry(enumClassName: ClassName, memberName: String): EnumEntryData","com.squareup.kotlinpoet.metadata.classinspectors.ReflectiveClassInspector.enumEntry"]},{"name":"open override fun isInterface(className: ClassName): Boolean","description":"com.squareup.kotlinpoet.metadata.classinspectors.ElementsClassInspector.isInterface","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.classinspectors/-elements-class-inspector/is-interface.html","searchKeys":["isInterface","open override fun isInterface(className: ClassName): Boolean","com.squareup.kotlinpoet.metadata.classinspectors.ElementsClassInspector.isInterface"]},{"name":"open override fun isInterface(className: ClassName): Boolean","description":"com.squareup.kotlinpoet.metadata.classinspectors.ReflectiveClassInspector.isInterface","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.classinspectors/-reflective-class-inspector/is-interface.html","searchKeys":["isInterface","open override fun isInterface(className: ClassName): Boolean","com.squareup.kotlinpoet.metadata.classinspectors.ReflectiveClassInspector.isInterface"]},{"name":"open override fun methodExists(className: ClassName, methodSignature: JvmMethodSignature): Boolean","description":"com.squareup.kotlinpoet.metadata.classinspectors.ElementsClassInspector.methodExists","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.classinspectors/-elements-class-inspector/method-exists.html","searchKeys":["methodExists","open override fun methodExists(className: ClassName, methodSignature: JvmMethodSignature): Boolean","com.squareup.kotlinpoet.metadata.classinspectors.ElementsClassInspector.methodExists"]},{"name":"open override fun methodExists(className: ClassName, methodSignature: JvmMethodSignature): Boolean","description":"com.squareup.kotlinpoet.metadata.classinspectors.ReflectiveClassInspector.methodExists","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.classinspectors/-reflective-class-inspector/method-exists.html","searchKeys":["methodExists","open override fun methodExists(className: ClassName, methodSignature: JvmMethodSignature): Boolean","com.squareup.kotlinpoet.metadata.classinspectors.ReflectiveClassInspector.methodExists"]},{"name":"open override val annotations: Collection<AnnotationSpec>","description":"com.squareup.kotlinpoet.metadata.specs.ClassData.annotations","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-class-data/annotations.html","searchKeys":["annotations","open override val annotations: Collection<AnnotationSpec>","com.squareup.kotlinpoet.metadata.specs.ClassData.annotations"]},{"name":"open override val annotations: Collection<AnnotationSpec>","description":"com.squareup.kotlinpoet.metadata.specs.FileData.annotations","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-file-data/annotations.html","searchKeys":["annotations","open override val annotations: Collection<AnnotationSpec>","com.squareup.kotlinpoet.metadata.specs.FileData.annotations"]},{"name":"open override val declarationContainer: KmClass","description":"com.squareup.kotlinpoet.metadata.specs.ClassData.declarationContainer","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-class-data/declaration-container.html","searchKeys":["declarationContainer","open override val declarationContainer: KmClass","com.squareup.kotlinpoet.metadata.specs.ClassData.declarationContainer"]},{"name":"open override val declarationContainer: KmPackage","description":"com.squareup.kotlinpoet.metadata.specs.FileData.declarationContainer","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-file-data/declaration-container.html","searchKeys":["declarationContainer","open override val declarationContainer: KmPackage","com.squareup.kotlinpoet.metadata.specs.FileData.declarationContainer"]},{"name":"open override val methods: Map<KmFunction, MethodData>","description":"com.squareup.kotlinpoet.metadata.specs.ClassData.methods","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-class-data/methods.html","searchKeys":["methods","open override val methods: Map<KmFunction, MethodData>","com.squareup.kotlinpoet.metadata.specs.ClassData.methods"]},{"name":"open override val methods: Map<KmFunction, MethodData>","description":"com.squareup.kotlinpoet.metadata.specs.FileData.methods","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-file-data/methods.html","searchKeys":["methods","open override val methods: Map<KmFunction, MethodData>","com.squareup.kotlinpoet.metadata.specs.FileData.methods"]},{"name":"open override val properties: Map<KmProperty, PropertyData>","description":"com.squareup.kotlinpoet.metadata.specs.ClassData.properties","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-class-data/properties.html","searchKeys":["properties","open override val properties: Map<KmProperty, PropertyData>","com.squareup.kotlinpoet.metadata.specs.ClassData.properties"]},{"name":"open override val properties: Map<KmProperty, PropertyData>","description":"com.squareup.kotlinpoet.metadata.specs.FileData.properties","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-file-data/properties.html","searchKeys":["properties","open override val properties: Map<KmProperty, PropertyData>","com.squareup.kotlinpoet.metadata.specs.FileData.properties"]},{"name":"open override val supportsNonRuntimeRetainedAnnotations: Boolean = false","description":"com.squareup.kotlinpoet.metadata.classinspectors.ReflectiveClassInspector.supportsNonRuntimeRetainedAnnotations","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.classinspectors/-reflective-class-inspector/supports-non-runtime-retained-annotations.html","searchKeys":["supportsNonRuntimeRetainedAnnotations","open override val supportsNonRuntimeRetainedAnnotations: Boolean = false","com.squareup.kotlinpoet.metadata.classinspectors.ReflectiveClassInspector.supportsNonRuntimeRetainedAnnotations"]},{"name":"open override val supportsNonRuntimeRetainedAnnotations: Boolean = true","description":"com.squareup.kotlinpoet.metadata.classinspectors.ElementsClassInspector.supportsNonRuntimeRetainedAnnotations","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.classinspectors/-elements-class-inspector/supports-non-runtime-retained-annotations.html","searchKeys":["supportsNonRuntimeRetainedAnnotations","open override val supportsNonRuntimeRetainedAnnotations: Boolean = true","com.squareup.kotlinpoet.metadata.classinspectors.ElementsClassInspector.supportsNonRuntimeRetainedAnnotations"]},{"name":"val EMPTY: ConstructorData","description":"com.squareup.kotlinpoet.metadata.specs.ConstructorData.Companion.EMPTY","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-constructor-data/-companion/-e-m-p-t-y.html","searchKeys":["EMPTY","val EMPTY: ConstructorData","com.squareup.kotlinpoet.metadata.specs.ConstructorData.Companion.EMPTY"]},{"name":"val EMPTY: MethodData","description":"com.squareup.kotlinpoet.metadata.specs.MethodData.Companion.EMPTY","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-method-data/-companion/-e-m-p-t-y.html","searchKeys":["EMPTY","val EMPTY: MethodData","com.squareup.kotlinpoet.metadata.specs.MethodData.Companion.EMPTY"]},{"name":"val KmType.isExtensionType: Boolean","description":"com.squareup.kotlinpoet.metadata.specs.isExtensionType","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/is-extension-type.html","searchKeys":["isExtensionType","val KmType.isExtensionType: Boolean","com.squareup.kotlinpoet.metadata.specs.isExtensionType"]},{"name":"val SYNTHETIC: FieldData","description":"com.squareup.kotlinpoet.metadata.specs.FieldData.Companion.SYNTHETIC","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-field-data/-companion/-s-y-n-t-h-e-t-i-c.html","searchKeys":["SYNTHETIC","val SYNTHETIC: FieldData","com.squareup.kotlinpoet.metadata.specs.FieldData.Companion.SYNTHETIC"]},{"name":"val SYNTHETIC: MethodData","description":"com.squareup.kotlinpoet.metadata.specs.MethodData.Companion.SYNTHETIC","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-method-data/-companion/-s-y-n-t-h-e-t-i-c.html","searchKeys":["SYNTHETIC","val SYNTHETIC: MethodData","com.squareup.kotlinpoet.metadata.specs.MethodData.Companion.SYNTHETIC"]},{"name":"val allAnnotations: Collection<AnnotationSpec>","description":"com.squareup.kotlinpoet.metadata.specs.ConstructorData.allAnnotations","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-constructor-data/all-annotations.html","searchKeys":["allAnnotations","val allAnnotations: Collection<AnnotationSpec>","com.squareup.kotlinpoet.metadata.specs.ConstructorData.allAnnotations"]},{"name":"val allAnnotations: Collection<AnnotationSpec>","description":"com.squareup.kotlinpoet.metadata.specs.FieldData.allAnnotations","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-field-data/all-annotations.html","searchKeys":["allAnnotations","val allAnnotations: Collection<AnnotationSpec>","com.squareup.kotlinpoet.metadata.specs.FieldData.allAnnotations"]},{"name":"val allAnnotations: Collection<AnnotationSpec>","description":"com.squareup.kotlinpoet.metadata.specs.PropertyData.allAnnotations","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-property-data/all-annotations.html","searchKeys":["allAnnotations","val allAnnotations: Collection<AnnotationSpec>","com.squareup.kotlinpoet.metadata.specs.PropertyData.allAnnotations"]},{"name":"val annotations: Collection<AnnotationSpec>","description":"com.squareup.kotlinpoet.metadata.specs.EnumEntryData.annotations","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-enum-entry-data/annotations.html","searchKeys":["annotations","val annotations: Collection<AnnotationSpec>","com.squareup.kotlinpoet.metadata.specs.EnumEntryData.annotations"]},{"name":"val className: ClassName","description":"com.squareup.kotlinpoet.metadata.specs.ClassData.className","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-class-data/class-name.html","searchKeys":["className","val className: ClassName","com.squareup.kotlinpoet.metadata.specs.ClassData.className"]},{"name":"val className: ClassName","description":"com.squareup.kotlinpoet.metadata.specs.FileData.className","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-file-data/class-name.html","searchKeys":["className","val className: ClassName","com.squareup.kotlinpoet.metadata.specs.FileData.className"]},{"name":"val constant: CodeBlock?","description":"com.squareup.kotlinpoet.metadata.specs.FieldData.constant","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-field-data/constant.html","searchKeys":["constant","val constant: CodeBlock?","com.squareup.kotlinpoet.metadata.specs.FieldData.constant"]},{"name":"val constructors: Map<KmConstructor, ConstructorData>","description":"com.squareup.kotlinpoet.metadata.specs.ClassData.constructors","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-class-data/constructors.html","searchKeys":["constructors","val constructors: Map<KmConstructor, ConstructorData>","com.squareup.kotlinpoet.metadata.specs.ClassData.constructors"]},{"name":"val declarationContainer: KmClass?","description":"com.squareup.kotlinpoet.metadata.specs.EnumEntryData.declarationContainer","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-enum-entry-data/declaration-container.html","searchKeys":["declarationContainer","val declarationContainer: KmClass?","com.squareup.kotlinpoet.metadata.specs.EnumEntryData.declarationContainer"]},{"name":"val entries: EnumEntries<JvmFieldModifier>","description":"com.squareup.kotlinpoet.metadata.specs.JvmFieldModifier.entries","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-jvm-field-modifier/entries.html","searchKeys":["entries","val entries: EnumEntries<JvmFieldModifier>","com.squareup.kotlinpoet.metadata.specs.JvmFieldModifier.entries"]},{"name":"val entries: EnumEntries<JvmMethodModifier>","description":"com.squareup.kotlinpoet.metadata.specs.JvmMethodModifier.entries","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-jvm-method-modifier/entries.html","searchKeys":["entries","val entries: EnumEntries<JvmMethodModifier>","com.squareup.kotlinpoet.metadata.specs.JvmMethodModifier.entries"]},{"name":"val exceptions: List<TypeName>","description":"com.squareup.kotlinpoet.metadata.specs.ConstructorData.exceptions","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-constructor-data/exceptions.html","searchKeys":["exceptions","val exceptions: List<TypeName>","com.squareup.kotlinpoet.metadata.specs.ConstructorData.exceptions"]},{"name":"val exceptions: List<TypeName>","description":"com.squareup.kotlinpoet.metadata.specs.MethodData.exceptions","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-method-data/exceptions.html","searchKeys":["exceptions","val exceptions: List<TypeName>","com.squareup.kotlinpoet.metadata.specs.MethodData.exceptions"]},{"name":"val fieldData: FieldData?","description":"com.squareup.kotlinpoet.metadata.specs.PropertyData.fieldData","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-property-data/field-data.html","searchKeys":["fieldData","val fieldData: FieldData?","com.squareup.kotlinpoet.metadata.specs.PropertyData.fieldData"]},{"name":"val fileName: String","description":"com.squareup.kotlinpoet.metadata.specs.FileData.fileName","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-file-data/file-name.html","searchKeys":["fileName","val fileName: String","com.squareup.kotlinpoet.metadata.specs.FileData.fileName"]},{"name":"val getterData: MethodData?","description":"com.squareup.kotlinpoet.metadata.specs.PropertyData.getterData","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-property-data/getter-data.html","searchKeys":["getterData","val getterData: MethodData?","com.squareup.kotlinpoet.metadata.specs.PropertyData.getterData"]},{"name":"val isJvmField: Boolean","description":"com.squareup.kotlinpoet.metadata.specs.PropertyData.isJvmField","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-property-data/is-jvm-field.html","searchKeys":["isJvmField","val isJvmField: Boolean","com.squareup.kotlinpoet.metadata.specs.PropertyData.isJvmField"]},{"name":"val isOverride: Boolean","description":"com.squareup.kotlinpoet.metadata.specs.MethodData.isOverride","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-method-data/is-override.html","searchKeys":["isOverride","val isOverride: Boolean","com.squareup.kotlinpoet.metadata.specs.MethodData.isOverride"]},{"name":"val isOverride: Boolean","description":"com.squareup.kotlinpoet.metadata.specs.PropertyData.isOverride","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-property-data/is-override.html","searchKeys":["isOverride","val isOverride: Boolean","com.squareup.kotlinpoet.metadata.specs.PropertyData.isOverride"]},{"name":"val isSynthetic: Boolean","description":"com.squareup.kotlinpoet.metadata.specs.ConstructorData.isSynthetic","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-constructor-data/is-synthetic.html","searchKeys":["isSynthetic","val isSynthetic: Boolean","com.squareup.kotlinpoet.metadata.specs.ConstructorData.isSynthetic"]},{"name":"val isSynthetic: Boolean","description":"com.squareup.kotlinpoet.metadata.specs.FieldData.isSynthetic","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-field-data/is-synthetic.html","searchKeys":["isSynthetic","val isSynthetic: Boolean","com.squareup.kotlinpoet.metadata.specs.FieldData.isSynthetic"]},{"name":"val isSynthetic: Boolean","description":"com.squareup.kotlinpoet.metadata.specs.MethodData.isSynthetic","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-method-data/is-synthetic.html","searchKeys":["isSynthetic","val isSynthetic: Boolean","com.squareup.kotlinpoet.metadata.specs.MethodData.isSynthetic"]},{"name":"val jvmModifiers: Set<JvmFieldModifier>","description":"com.squareup.kotlinpoet.metadata.specs.FieldData.jvmModifiers","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-field-data/jvm-modifiers.html","searchKeys":["jvmModifiers","val jvmModifiers: Set<JvmFieldModifier>","com.squareup.kotlinpoet.metadata.specs.FieldData.jvmModifiers"]},{"name":"val jvmModifiers: Set<JvmMethodModifier>","description":"com.squareup.kotlinpoet.metadata.specs.ConstructorData.jvmModifiers","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-constructor-data/jvm-modifiers.html","searchKeys":["jvmModifiers","val jvmModifiers: Set<JvmMethodModifier>","com.squareup.kotlinpoet.metadata.specs.ConstructorData.jvmModifiers"]},{"name":"val jvmModifiers: Set<JvmMethodModifier>","description":"com.squareup.kotlinpoet.metadata.specs.MethodData.jvmModifiers","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-method-data/jvm-modifiers.html","searchKeys":["jvmModifiers","val jvmModifiers: Set<JvmMethodModifier>","com.squareup.kotlinpoet.metadata.specs.MethodData.jvmModifiers"]},{"name":"val jvmName: String?","description":"com.squareup.kotlinpoet.metadata.specs.FileData.jvmName","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-file-data/jvm-name.html","searchKeys":["jvmName","val jvmName: String?","com.squareup.kotlinpoet.metadata.specs.FileData.jvmName"]},{"name":"val parameterAnnotations: Map<Int, Collection<AnnotationSpec>>","description":"com.squareup.kotlinpoet.metadata.specs.ConstructorData.parameterAnnotations","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-constructor-data/parameter-annotations.html","searchKeys":["parameterAnnotations","val parameterAnnotations: Map<Int, Collection<AnnotationSpec>>","com.squareup.kotlinpoet.metadata.specs.ConstructorData.parameterAnnotations"]},{"name":"val parameterAnnotations: Map<Int, Collection<AnnotationSpec>>","description":"com.squareup.kotlinpoet.metadata.specs.MethodData.parameterAnnotations","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-method-data/parameter-annotations.html","searchKeys":["parameterAnnotations","val parameterAnnotations: Map<Int, Collection<AnnotationSpec>>","com.squareup.kotlinpoet.metadata.specs.MethodData.parameterAnnotations"]},{"name":"val setterData: MethodData?","description":"com.squareup.kotlinpoet.metadata.specs.PropertyData.setterData","location":"kotlin-metadata/com.squareup.kotlinpoet.metadata.specs/-property-data/setter-data.html","searchKeys":["setterData","val setterData: MethodData?","com.squareup.kotlinpoet.metadata.specs.PropertyData.setterData"]}]