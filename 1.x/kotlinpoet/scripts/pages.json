[{"name":"ABSTRACT","description":"com.squareup.kotlinpoet.KModifier.ABSTRACT","location":"kotlinpoet/com.squareup.kotlinpoet/-k-modifier/-a-b-s-t-r-a-c-t/index.html","searchKeys":["ABSTRACT","ABSTRACT","com.squareup.kotlinpoet.KModifier.ABSTRACT"]},{"name":"ACTUAL","description":"com.squareup.kotlinpoet.KModifier.ACTUAL","location":"kotlinpoet/com.squareup.kotlinpoet/-k-modifier/-a-c-t-u-a-l/index.html","searchKeys":["ACTUAL","ACTUAL","com.squareup.kotlinpoet.KModifier.ACTUAL"]},{"name":"ALL","description":"com.squareup.kotlinpoet.AnnotationSpec.UseSiteTarget.ALL","location":"kotlinpoet/com.squareup.kotlinpoet/-annotation-spec/-use-site-target/-a-l-l/index.html","searchKeys":["ALL","ALL","com.squareup.kotlinpoet.AnnotationSpec.UseSiteTarget.ALL"]},{"name":"ANNOTATION","description":"com.squareup.kotlinpoet.KModifier.ANNOTATION","location":"kotlinpoet/com.squareup.kotlinpoet/-k-modifier/-a-n-n-o-t-a-t-i-o-n/index.html","searchKeys":["ANNOTATION","ANNOTATION","com.squareup.kotlinpoet.KModifier.ANNOTATION"]},{"name":"CLASS","description":"com.squareup.kotlinpoet.TypeSpec.Kind.CLASS","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-kind/-c-l-a-s-s/index.html","searchKeys":["CLASS","CLASS","com.squareup.kotlinpoet.TypeSpec.Kind.CLASS"]},{"name":"COMPANION","description":"com.squareup.kotlinpoet.KModifier.COMPANION","location":"kotlinpoet/com.squareup.kotlinpoet/-k-modifier/-c-o-m-p-a-n-i-o-n/index.html","searchKeys":["COMPANION","COMPANION","com.squareup.kotlinpoet.KModifier.COMPANION"]},{"name":"CONST","description":"com.squareup.kotlinpoet.KModifier.CONST","location":"kotlinpoet/com.squareup.kotlinpoet/-k-modifier/-c-o-n-s-t/index.html","searchKeys":["CONST","CONST","com.squareup.kotlinpoet.KModifier.CONST"]},{"name":"CONTAINS","description":"com.squareup.kotlinpoet.KOperator.CONTAINS","location":"kotlinpoet/com.squareup.kotlinpoet/-k-operator/-c-o-n-t-a-i-n-s/index.html","searchKeys":["CONTAINS","CONTAINS","com.squareup.kotlinpoet.KOperator.CONTAINS"]},{"name":"CROSSINLINE","description":"com.squareup.kotlinpoet.KModifier.CROSSINLINE","location":"kotlinpoet/com.squareup.kotlinpoet/-k-modifier/-c-r-o-s-s-i-n-l-i-n-e/index.html","searchKeys":["CROSSINLINE","CROSSINLINE","com.squareup.kotlinpoet.KModifier.CROSSINLINE"]},{"name":"DATA","description":"com.squareup.kotlinpoet.KModifier.DATA","location":"kotlinpoet/com.squareup.kotlinpoet/-k-modifier/-d-a-t-a/index.html","searchKeys":["DATA","DATA","com.squareup.kotlinpoet.KModifier.DATA"]},{"name":"DEC","description":"com.squareup.kotlinpoet.KOperator.DEC","location":"kotlinpoet/com.squareup.kotlinpoet/-k-operator/-d-e-c/index.html","searchKeys":["DEC","DEC","com.squareup.kotlinpoet.KOperator.DEC"]},{"name":"DELEGATE","description":"com.squareup.kotlinpoet.AnnotationSpec.UseSiteTarget.DELEGATE","location":"kotlinpoet/com.squareup.kotlinpoet/-annotation-spec/-use-site-target/-d-e-l-e-g-a-t-e/index.html","searchKeys":["DELEGATE","DELEGATE","com.squareup.kotlinpoet.AnnotationSpec.UseSiteTarget.DELEGATE"]},{"name":"DIV","description":"com.squareup.kotlinpoet.KOperator.DIV","location":"kotlinpoet/com.squareup.kotlinpoet/-k-operator/-d-i-v/index.html","searchKeys":["DIV","DIV","com.squareup.kotlinpoet.KOperator.DIV"]},{"name":"DIV_ASSIGN","description":"com.squareup.kotlinpoet.KOperator.DIV_ASSIGN","location":"kotlinpoet/com.squareup.kotlinpoet/-k-operator/-d-i-v_-a-s-s-i-g-n/index.html","searchKeys":["DIV_ASSIGN","DIV_ASSIGN","com.squareup.kotlinpoet.KOperator.DIV_ASSIGN"]},{"name":"ENUM","description":"com.squareup.kotlinpoet.KModifier.ENUM","location":"kotlinpoet/com.squareup.kotlinpoet/-k-modifier/-e-n-u-m/index.html","searchKeys":["ENUM","ENUM","com.squareup.kotlinpoet.KModifier.ENUM"]},{"name":"EQUALS","description":"com.squareup.kotlinpoet.KOperator.EQUALS","location":"kotlinpoet/com.squareup.kotlinpoet/-k-operator/-e-q-u-a-l-s/index.html","searchKeys":["EQUALS","EQUALS","com.squareup.kotlinpoet.KOperator.EQUALS"]},{"name":"EXPECT","description":"com.squareup.kotlinpoet.KModifier.EXPECT","location":"kotlinpoet/com.squareup.kotlinpoet/-k-modifier/-e-x-p-e-c-t/index.html","searchKeys":["EXPECT","EXPECT","com.squareup.kotlinpoet.KModifier.EXPECT"]},{"name":"EXTERNAL","description":"com.squareup.kotlinpoet.KModifier.EXTERNAL","location":"kotlinpoet/com.squareup.kotlinpoet/-k-modifier/-e-x-t-e-r-n-a-l/index.html","searchKeys":["EXTERNAL","EXTERNAL","com.squareup.kotlinpoet.KModifier.EXTERNAL"]},{"name":"FIELD","description":"com.squareup.kotlinpoet.AnnotationSpec.UseSiteTarget.FIELD","location":"kotlinpoet/com.squareup.kotlinpoet/-annotation-spec/-use-site-target/-f-i-e-l-d/index.html","searchKeys":["FIELD","FIELD","com.squareup.kotlinpoet.AnnotationSpec.UseSiteTarget.FIELD"]},{"name":"FILE","description":"com.squareup.kotlinpoet.AnnotationSpec.UseSiteTarget.FILE","location":"kotlinpoet/com.squareup.kotlinpoet/-annotation-spec/-use-site-target/-f-i-l-e/index.html","searchKeys":["FILE","FILE","com.squareup.kotlinpoet.AnnotationSpec.UseSiteTarget.FILE"]},{"name":"FINAL","description":"com.squareup.kotlinpoet.KModifier.FINAL","location":"kotlinpoet/com.squareup.kotlinpoet/-k-modifier/-f-i-n-a-l/index.html","searchKeys":["FINAL","FINAL","com.squareup.kotlinpoet.KModifier.FINAL"]},{"name":"FUN","description":"com.squareup.kotlinpoet.KModifier.FUN","location":"kotlinpoet/com.squareup.kotlinpoet/-k-modifier/-f-u-n/index.html","searchKeys":["FUN","FUN","com.squareup.kotlinpoet.KModifier.FUN"]},{"name":"GE","description":"com.squareup.kotlinpoet.KOperator.GE","location":"kotlinpoet/com.squareup.kotlinpoet/-k-operator/-g-e/index.html","searchKeys":["GE","GE","com.squareup.kotlinpoet.KOperator.GE"]},{"name":"GET","description":"com.squareup.kotlinpoet.AnnotationSpec.UseSiteTarget.GET","location":"kotlinpoet/com.squareup.kotlinpoet/-annotation-spec/-use-site-target/-g-e-t/index.html","searchKeys":["GET","GET","com.squareup.kotlinpoet.AnnotationSpec.UseSiteTarget.GET"]},{"name":"GT","description":"com.squareup.kotlinpoet.KOperator.GT","location":"kotlinpoet/com.squareup.kotlinpoet/-k-operator/-g-t/index.html","searchKeys":["GT","GT","com.squareup.kotlinpoet.KOperator.GT"]},{"name":"IN","description":"com.squareup.kotlinpoet.KModifier.IN","location":"kotlinpoet/com.squareup.kotlinpoet/-k-modifier/-i-n/index.html","searchKeys":["IN","IN","com.squareup.kotlinpoet.KModifier.IN"]},{"name":"INC","description":"com.squareup.kotlinpoet.KOperator.INC","location":"kotlinpoet/com.squareup.kotlinpoet/-k-operator/-i-n-c/index.html","searchKeys":["INC","INC","com.squareup.kotlinpoet.KOperator.INC"]},{"name":"INFIX","description":"com.squareup.kotlinpoet.KModifier.INFIX","location":"kotlinpoet/com.squareup.kotlinpoet/-k-modifier/-i-n-f-i-x/index.html","searchKeys":["INFIX","INFIX","com.squareup.kotlinpoet.KModifier.INFIX"]},{"name":"INLINE","description":"com.squareup.kotlinpoet.KModifier.INLINE","location":"kotlinpoet/com.squareup.kotlinpoet/-k-modifier/-i-n-l-i-n-e/index.html","searchKeys":["INLINE","INLINE","com.squareup.kotlinpoet.KModifier.INLINE"]},{"name":"INNER","description":"com.squareup.kotlinpoet.KModifier.INNER","location":"kotlinpoet/com.squareup.kotlinpoet/-k-modifier/-i-n-n-e-r/index.html","searchKeys":["INNER","INNER","com.squareup.kotlinpoet.KModifier.INNER"]},{"name":"INTERFACE","description":"com.squareup.kotlinpoet.TypeSpec.Kind.INTERFACE","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-kind/-i-n-t-e-r-f-a-c-e/index.html","searchKeys":["INTERFACE","INTERFACE","com.squareup.kotlinpoet.TypeSpec.Kind.INTERFACE"]},{"name":"INTERNAL","description":"com.squareup.kotlinpoet.KModifier.INTERNAL","location":"kotlinpoet/com.squareup.kotlinpoet/-k-modifier/-i-n-t-e-r-n-a-l/index.html","searchKeys":["INTERNAL","INTERNAL","com.squareup.kotlinpoet.KModifier.INTERNAL"]},{"name":"ITERATOR","description":"com.squareup.kotlinpoet.KOperator.ITERATOR","location":"kotlinpoet/com.squareup.kotlinpoet/-k-operator/-i-t-e-r-a-t-o-r/index.html","searchKeys":["ITERATOR","ITERATOR","com.squareup.kotlinpoet.KOperator.ITERATOR"]},{"name":"LATEINIT","description":"com.squareup.kotlinpoet.KModifier.LATEINIT","location":"kotlinpoet/com.squareup.kotlinpoet/-k-modifier/-l-a-t-e-i-n-i-t/index.html","searchKeys":["LATEINIT","LATEINIT","com.squareup.kotlinpoet.KModifier.LATEINIT"]},{"name":"LE","description":"com.squareup.kotlinpoet.KOperator.LE","location":"kotlinpoet/com.squareup.kotlinpoet/-k-operator/-l-e/index.html","searchKeys":["LE","LE","com.squareup.kotlinpoet.KOperator.LE"]},{"name":"LT","description":"com.squareup.kotlinpoet.KOperator.LT","location":"kotlinpoet/com.squareup.kotlinpoet/-k-operator/-l-t/index.html","searchKeys":["LT","LT","com.squareup.kotlinpoet.KOperator.LT"]},{"name":"MINUS","description":"com.squareup.kotlinpoet.KOperator.MINUS","location":"kotlinpoet/com.squareup.kotlinpoet/-k-operator/-m-i-n-u-s/index.html","searchKeys":["MINUS","MINUS","com.squareup.kotlinpoet.KOperator.MINUS"]},{"name":"MINUS_ASSIGN","description":"com.squareup.kotlinpoet.KOperator.MINUS_ASSIGN","location":"kotlinpoet/com.squareup.kotlinpoet/-k-operator/-m-i-n-u-s_-a-s-s-i-g-n/index.html","searchKeys":["MINUS_ASSIGN","MINUS_ASSIGN","com.squareup.kotlinpoet.KOperator.MINUS_ASSIGN"]},{"name":"NOINLINE","description":"com.squareup.kotlinpoet.KModifier.NOINLINE","location":"kotlinpoet/com.squareup.kotlinpoet/-k-modifier/-n-o-i-n-l-i-n-e/index.html","searchKeys":["NOINLINE","NOINLINE","com.squareup.kotlinpoet.KModifier.NOINLINE"]},{"name":"NOT","description":"com.squareup.kotlinpoet.KOperator.NOT","location":"kotlinpoet/com.squareup.kotlinpoet/-k-operator/-n-o-t/index.html","searchKeys":["NOT","NOT","com.squareup.kotlinpoet.KOperator.NOT"]},{"name":"NOT_CONTAINS","description":"com.squareup.kotlinpoet.KOperator.NOT_CONTAINS","location":"kotlinpoet/com.squareup.kotlinpoet/-k-operator/-n-o-t_-c-o-n-t-a-i-n-s/index.html","searchKeys":["NOT_CONTAINS","NOT_CONTAINS","com.squareup.kotlinpoet.KOperator.NOT_CONTAINS"]},{"name":"NOT_EQUALS","description":"com.squareup.kotlinpoet.KOperator.NOT_EQUALS","location":"kotlinpoet/com.squareup.kotlinpoet/-k-operator/-n-o-t_-e-q-u-a-l-s/index.html","searchKeys":["NOT_EQUALS","NOT_EQUALS","com.squareup.kotlinpoet.KOperator.NOT_EQUALS"]},{"name":"OBJECT","description":"com.squareup.kotlinpoet.TypeSpec.Kind.OBJECT","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-kind/-o-b-j-e-c-t/index.html","searchKeys":["OBJECT","OBJECT","com.squareup.kotlinpoet.TypeSpec.Kind.OBJECT"]},{"name":"OPEN","description":"com.squareup.kotlinpoet.KModifier.OPEN","location":"kotlinpoet/com.squareup.kotlinpoet/-k-modifier/-o-p-e-n/index.html","searchKeys":["OPEN","OPEN","com.squareup.kotlinpoet.KModifier.OPEN"]},{"name":"OPERATOR","description":"com.squareup.kotlinpoet.KModifier.OPERATOR","location":"kotlinpoet/com.squareup.kotlinpoet/-k-modifier/-o-p-e-r-a-t-o-r/index.html","searchKeys":["OPERATOR","OPERATOR","com.squareup.kotlinpoet.KModifier.OPERATOR"]},{"name":"OUT","description":"com.squareup.kotlinpoet.KModifier.OUT","location":"kotlinpoet/com.squareup.kotlinpoet/-k-modifier/-o-u-t/index.html","searchKeys":["OUT","OUT","com.squareup.kotlinpoet.KModifier.OUT"]},{"name":"OVERRIDE","description":"com.squareup.kotlinpoet.KModifier.OVERRIDE","location":"kotlinpoet/com.squareup.kotlinpoet/-k-modifier/-o-v-e-r-r-i-d-e/index.html","searchKeys":["OVERRIDE","OVERRIDE","com.squareup.kotlinpoet.KModifier.OVERRIDE"]},{"name":"PARAM","description":"com.squareup.kotlinpoet.AnnotationSpec.UseSiteTarget.PARAM","location":"kotlinpoet/com.squareup.kotlinpoet/-annotation-spec/-use-site-target/-p-a-r-a-m/index.html","searchKeys":["PARAM","PARAM","com.squareup.kotlinpoet.AnnotationSpec.UseSiteTarget.PARAM"]},{"name":"PLUS","description":"com.squareup.kotlinpoet.KOperator.PLUS","location":"kotlinpoet/com.squareup.kotlinpoet/-k-operator/-p-l-u-s/index.html","searchKeys":["PLUS","PLUS","com.squareup.kotlinpoet.KOperator.PLUS"]},{"name":"PLUS_ASSIGN","description":"com.squareup.kotlinpoet.KOperator.PLUS_ASSIGN","location":"kotlinpoet/com.squareup.kotlinpoet/-k-operator/-p-l-u-s_-a-s-s-i-g-n/index.html","searchKeys":["PLUS_ASSIGN","PLUS_ASSIGN","com.squareup.kotlinpoet.KOperator.PLUS_ASSIGN"]},{"name":"PRIVATE","description":"com.squareup.kotlinpoet.KModifier.PRIVATE","location":"kotlinpoet/com.squareup.kotlinpoet/-k-modifier/-p-r-i-v-a-t-e/index.html","searchKeys":["PRIVATE","PRIVATE","com.squareup.kotlinpoet.KModifier.PRIVATE"]},{"name":"PROPERTY","description":"com.squareup.kotlinpoet.AnnotationSpec.UseSiteTarget.PROPERTY","location":"kotlinpoet/com.squareup.kotlinpoet/-annotation-spec/-use-site-target/-p-r-o-p-e-r-t-y/index.html","searchKeys":["PROPERTY","PROPERTY","com.squareup.kotlinpoet.AnnotationSpec.UseSiteTarget.PROPERTY"]},{"name":"PROTECTED","description":"com.squareup.kotlinpoet.KModifier.PROTECTED","location":"kotlinpoet/com.squareup.kotlinpoet/-k-modifier/-p-r-o-t-e-c-t-e-d/index.html","searchKeys":["PROTECTED","PROTECTED","com.squareup.kotlinpoet.KModifier.PROTECTED"]},{"name":"PUBLIC","description":"com.squareup.kotlinpoet.KModifier.PUBLIC","location":"kotlinpoet/com.squareup.kotlinpoet/-k-modifier/-p-u-b-l-i-c/index.html","searchKeys":["PUBLIC","PUBLIC","com.squareup.kotlinpoet.KModifier.PUBLIC"]},{"name":"RANGE_TO","description":"com.squareup.kotlinpoet.KOperator.RANGE_TO","location":"kotlinpoet/com.squareup.kotlinpoet/-k-operator/-r-a-n-g-e_-t-o/index.html","searchKeys":["RANGE_TO","RANGE_TO","com.squareup.kotlinpoet.KOperator.RANGE_TO"]},{"name":"RECEIVER","description":"com.squareup.kotlinpoet.AnnotationSpec.UseSiteTarget.RECEIVER","location":"kotlinpoet/com.squareup.kotlinpoet/-annotation-spec/-use-site-target/-r-e-c-e-i-v-e-r/index.html","searchKeys":["RECEIVER","RECEIVER","com.squareup.kotlinpoet.AnnotationSpec.UseSiteTarget.RECEIVER"]},{"name":"REIFIED","description":"com.squareup.kotlinpoet.KModifier.REIFIED","location":"kotlinpoet/com.squareup.kotlinpoet/-k-modifier/-r-e-i-f-i-e-d/index.html","searchKeys":["REIFIED","REIFIED","com.squareup.kotlinpoet.KModifier.REIFIED"]},{"name":"REM","description":"com.squareup.kotlinpoet.KOperator.REM","location":"kotlinpoet/com.squareup.kotlinpoet/-k-operator/-r-e-m/index.html","searchKeys":["REM","REM","com.squareup.kotlinpoet.KOperator.REM"]},{"name":"REM_ASSIGN","description":"com.squareup.kotlinpoet.KOperator.REM_ASSIGN","location":"kotlinpoet/com.squareup.kotlinpoet/-k-operator/-r-e-m_-a-s-s-i-g-n/index.html","searchKeys":["REM_ASSIGN","REM_ASSIGN","com.squareup.kotlinpoet.KOperator.REM_ASSIGN"]},{"name":"SEALED","description":"com.squareup.kotlinpoet.KModifier.SEALED","location":"kotlinpoet/com.squareup.kotlinpoet/-k-modifier/-s-e-a-l-e-d/index.html","searchKeys":["SEALED","SEALED","com.squareup.kotlinpoet.KModifier.SEALED"]},{"name":"SET","description":"com.squareup.kotlinpoet.AnnotationSpec.UseSiteTarget.SET","location":"kotlinpoet/com.squareup.kotlinpoet/-annotation-spec/-use-site-target/-s-e-t/index.html","searchKeys":["SET","SET","com.squareup.kotlinpoet.AnnotationSpec.UseSiteTarget.SET"]},{"name":"SETPARAM","description":"com.squareup.kotlinpoet.AnnotationSpec.UseSiteTarget.SETPARAM","location":"kotlinpoet/com.squareup.kotlinpoet/-annotation-spec/-use-site-target/-s-e-t-p-a-r-a-m/index.html","searchKeys":["SETPARAM","SETPARAM","com.squareup.kotlinpoet.AnnotationSpec.UseSiteTarget.SETPARAM"]},{"name":"SUSPEND","description":"com.squareup.kotlinpoet.KModifier.SUSPEND","location":"kotlinpoet/com.squareup.kotlinpoet/-k-modifier/-s-u-s-p-e-n-d/index.html","searchKeys":["SUSPEND","SUSPEND","com.squareup.kotlinpoet.KModifier.SUSPEND"]},{"name":"TAILREC","description":"com.squareup.kotlinpoet.KModifier.TAILREC","location":"kotlinpoet/com.squareup.kotlinpoet/-k-modifier/-t-a-i-l-r-e-c/index.html","searchKeys":["TAILREC","TAILREC","com.squareup.kotlinpoet.KModifier.TAILREC"]},{"name":"TIMES","description":"com.squareup.kotlinpoet.KOperator.TIMES","location":"kotlinpoet/com.squareup.kotlinpoet/-k-operator/-t-i-m-e-s/index.html","searchKeys":["TIMES","TIMES","com.squareup.kotlinpoet.KOperator.TIMES"]},{"name":"TIMES_ASSIGN","description":"com.squareup.kotlinpoet.KOperator.TIMES_ASSIGN","location":"kotlinpoet/com.squareup.kotlinpoet/-k-operator/-t-i-m-e-s_-a-s-s-i-g-n/index.html","searchKeys":["TIMES_ASSIGN","TIMES_ASSIGN","com.squareup.kotlinpoet.KOperator.TIMES_ASSIGN"]},{"name":"UNARY_MINUS","description":"com.squareup.kotlinpoet.KOperator.UNARY_MINUS","location":"kotlinpoet/com.squareup.kotlinpoet/-k-operator/-u-n-a-r-y_-m-i-n-u-s/index.html","searchKeys":["UNARY_MINUS","UNARY_MINUS","com.squareup.kotlinpoet.KOperator.UNARY_MINUS"]},{"name":"UNARY_PLUS","description":"com.squareup.kotlinpoet.KOperator.UNARY_PLUS","location":"kotlinpoet/com.squareup.kotlinpoet/-k-operator/-u-n-a-r-y_-p-l-u-s/index.html","searchKeys":["UNARY_PLUS","UNARY_PLUS","com.squareup.kotlinpoet.KOperator.UNARY_PLUS"]},{"name":"VALUE","description":"com.squareup.kotlinpoet.KModifier.VALUE","location":"kotlinpoet/com.squareup.kotlinpoet/-k-modifier/-v-a-l-u-e/index.html","searchKeys":["VALUE","VALUE","com.squareup.kotlinpoet.KModifier.VALUE"]},{"name":"VARARG","description":"com.squareup.kotlinpoet.KModifier.VARARG","location":"kotlinpoet/com.squareup.kotlinpoet/-k-modifier/-v-a-r-a-r-g/index.html","searchKeys":["VARARG","VARARG","com.squareup.kotlinpoet.KModifier.VARARG"]},{"name":"abstract fun addFunction(funSpec: FunSpec): T","description":"com.squareup.kotlinpoet.MemberSpecHolder.Builder.addFunction","location":"kotlinpoet/com.squareup.kotlinpoet/-member-spec-holder/-builder/add-function.html","searchKeys":["addFunction","abstract fun addFunction(funSpec: FunSpec): T","com.squareup.kotlinpoet.MemberSpecHolder.Builder.addFunction"]},{"name":"abstract fun addProperty(propertySpec: PropertySpec): T","description":"com.squareup.kotlinpoet.MemberSpecHolder.Builder.addProperty","location":"kotlinpoet/com.squareup.kotlinpoet/-member-spec-holder/-builder/add-property.html","searchKeys":["addProperty","abstract fun addProperty(propertySpec: PropertySpec): T","com.squareup.kotlinpoet.MemberSpecHolder.Builder.addProperty"]},{"name":"abstract fun addType(typeSpec: TypeSpec): T","description":"com.squareup.kotlinpoet.TypeSpecHolder.Builder.addType","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec-holder/-builder/add-type.html","searchKeys":["addType","abstract fun addType(typeSpec: TypeSpec): T","com.squareup.kotlinpoet.TypeSpecHolder.Builder.addType"]},{"name":"abstract fun copy(nullable: Boolean = this.isNullable, annotations: List<AnnotationSpec> = this.annotations.toList(), tags: Map<KClass<*>, Any> = this.tags): TypeName","description":"com.squareup.kotlinpoet.TypeName.copy","location":"kotlinpoet/com.squareup.kotlinpoet/-type-name/copy.html","searchKeys":["copy","abstract fun copy(nullable: Boolean = this.isNullable, annotations: List<AnnotationSpec> = this.annotations.toList(), tags: Map<KClass<*>, Any> = this.tags): TypeName","com.squareup.kotlinpoet.TypeName.copy"]},{"name":"abstract val annotations: List<AnnotationSpec>","description":"com.squareup.kotlinpoet.Annotatable.annotations","location":"kotlinpoet/com.squareup.kotlinpoet/-annotatable/annotations.html","searchKeys":["annotations","abstract val annotations: List<AnnotationSpec>","com.squareup.kotlinpoet.Annotatable.annotations"]},{"name":"abstract val annotations: MutableList<AnnotationSpec>","description":"com.squareup.kotlinpoet.Annotatable.Builder.annotations","location":"kotlinpoet/com.squareup.kotlinpoet/-annotatable/-builder/annotations.html","searchKeys":["annotations","abstract val annotations: MutableList<AnnotationSpec>","com.squareup.kotlinpoet.Annotatable.Builder.annotations"]},{"name":"abstract val contextParameters: List<ContextParameter>","description":"com.squareup.kotlinpoet.ContextParameterizable.contextParameters","location":"kotlinpoet/com.squareup.kotlinpoet/-context-parameterizable/context-parameters.html","searchKeys":["contextParameters","abstract val contextParameters: List<ContextParameter>","com.squareup.kotlinpoet.ContextParameterizable.contextParameters"]},{"name":"abstract val contextParameters: MutableList<ContextParameter>","description":"com.squareup.kotlinpoet.ContextParameterizable.Builder.contextParameters","location":"kotlinpoet/com.squareup.kotlinpoet/-context-parameterizable/-builder/context-parameters.html","searchKeys":["contextParameters","abstract val contextParameters: MutableList<ContextParameter>","com.squareup.kotlinpoet.ContextParameterizable.Builder.contextParameters"]},{"name":"abstract val contextReceiverTypes: List<TypeName>","description":"com.squareup.kotlinpoet.ContextReceivable.contextReceiverTypes","location":"kotlinpoet/com.squareup.kotlinpoet/-context-receivable/context-receiver-types.html","searchKeys":["contextReceiverTypes","abstract val contextReceiverTypes: List<TypeName>","com.squareup.kotlinpoet.ContextReceivable.contextReceiverTypes"]},{"name":"abstract val contextReceiverTypes: MutableList<TypeName>","description":"com.squareup.kotlinpoet.ContextReceivable.Builder.contextReceiverTypes","location":"kotlinpoet/com.squareup.kotlinpoet/-context-receivable/-builder/context-receiver-types.html","searchKeys":["contextReceiverTypes","abstract val contextReceiverTypes: MutableList<TypeName>","com.squareup.kotlinpoet.ContextReceivable.Builder.contextReceiverTypes"]},{"name":"abstract val funSpecs: List<FunSpec>","description":"com.squareup.kotlinpoet.MemberSpecHolder.funSpecs","location":"kotlinpoet/com.squareup.kotlinpoet/-member-spec-holder/fun-specs.html","searchKeys":["funSpecs","abstract val funSpecs: List<FunSpec>","com.squareup.kotlinpoet.MemberSpecHolder.funSpecs"]},{"name":"abstract val kdoc: CodeBlock","description":"com.squareup.kotlinpoet.Documentable.kdoc","location":"kotlinpoet/com.squareup.kotlinpoet/-documentable/kdoc.html","searchKeys":["kdoc","abstract val kdoc: CodeBlock","com.squareup.kotlinpoet.Documentable.kdoc"]},{"name":"abstract val kdoc: CodeBlock.Builder","description":"com.squareup.kotlinpoet.Documentable.Builder.kdoc","location":"kotlinpoet/com.squareup.kotlinpoet/-documentable/-builder/kdoc.html","searchKeys":["kdoc","abstract val kdoc: CodeBlock.Builder","com.squareup.kotlinpoet.Documentable.Builder.kdoc"]},{"name":"abstract val originatingElements: List<Element>","description":"com.squareup.kotlinpoet.OriginatingElementsHolder.originatingElements","location":"kotlinpoet/com.squareup.kotlinpoet/-originating-elements-holder/originating-elements.html","searchKeys":["originatingElements","abstract val originatingElements: List<Element>","com.squareup.kotlinpoet.OriginatingElementsHolder.originatingElements"]},{"name":"abstract val originatingElements: MutableList<Element>","description":"com.squareup.kotlinpoet.OriginatingElementsHolder.Builder.originatingElements","location":"kotlinpoet/com.squareup.kotlinpoet/-originating-elements-holder/-builder/originating-elements.html","searchKeys":["originatingElements","abstract val originatingElements: MutableList<Element>","com.squareup.kotlinpoet.OriginatingElementsHolder.Builder.originatingElements"]},{"name":"abstract val propertySpecs: List<PropertySpec>","description":"com.squareup.kotlinpoet.MemberSpecHolder.propertySpecs","location":"kotlinpoet/com.squareup.kotlinpoet/-member-spec-holder/property-specs.html","searchKeys":["propertySpecs","abstract val propertySpecs: List<PropertySpec>","com.squareup.kotlinpoet.MemberSpecHolder.propertySpecs"]},{"name":"abstract val tags: MutableMap<KClass<*>, Any>","description":"com.squareup.kotlinpoet.Taggable.Builder.tags","location":"kotlinpoet/com.squareup.kotlinpoet/-taggable/-builder/tags.html","searchKeys":["tags","abstract val tags: MutableMap<KClass<*>, Any>","com.squareup.kotlinpoet.Taggable.Builder.tags"]},{"name":"abstract val typeSpecs: List<TypeSpec>","description":"com.squareup.kotlinpoet.TypeSpecHolder.typeSpecs","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec-holder/type-specs.html","searchKeys":["typeSpecs","abstract val typeSpecs: List<TypeSpec>","com.squareup.kotlinpoet.TypeSpecHolder.typeSpecs"]},{"name":"annotation class DelicateKotlinPoetApi(val message: String)","description":"com.squareup.kotlinpoet.DelicateKotlinPoetApi","location":"kotlinpoet/com.squareup.kotlinpoet/-delicate-kotlin-poet-api/index.html","searchKeys":["DelicateKotlinPoetApi","annotation class DelicateKotlinPoetApi(val message: String)","com.squareup.kotlinpoet.DelicateKotlinPoetApi"]},{"name":"annotation class ExperimentalKotlinPoetApi","description":"com.squareup.kotlinpoet.ExperimentalKotlinPoetApi","location":"kotlinpoet/com.squareup.kotlinpoet/-experimental-kotlin-poet-api/index.html","searchKeys":["ExperimentalKotlinPoetApi","annotation class ExperimentalKotlinPoetApi","com.squareup.kotlinpoet.ExperimentalKotlinPoetApi"]},{"name":"class AnnotationSpec : Taggable","description":"com.squareup.kotlinpoet.AnnotationSpec","location":"kotlinpoet/com.squareup.kotlinpoet/-annotation-spec/index.html","searchKeys":["AnnotationSpec","class AnnotationSpec : Taggable","com.squareup.kotlinpoet.AnnotationSpec"]},{"name":"class Builder","description":"com.squareup.kotlinpoet.CodeBlock.Builder","location":"kotlinpoet/com.squareup.kotlinpoet/-code-block/-builder/index.html","searchKeys":["Builder","class Builder","com.squareup.kotlinpoet.CodeBlock.Builder"]},{"name":"class Builder : Taggable.Builder<AnnotationSpec.Builder> ","description":"com.squareup.kotlinpoet.AnnotationSpec.Builder","location":"kotlinpoet/com.squareup.kotlinpoet/-annotation-spec/-builder/index.html","searchKeys":["Builder","class Builder : Taggable.Builder<AnnotationSpec.Builder> ","com.squareup.kotlinpoet.AnnotationSpec.Builder"]},{"name":"class Builder : Taggable.Builder<FileSpec.Builder> , Annotatable.Builder<FileSpec.Builder> , TypeSpecHolder.Builder<FileSpec.Builder> , MemberSpecHolder.Builder<FileSpec.Builder> ","description":"com.squareup.kotlinpoet.FileSpec.Builder","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/-builder/index.html","searchKeys":["Builder","class Builder : Taggable.Builder<FileSpec.Builder> , Annotatable.Builder<FileSpec.Builder> , TypeSpecHolder.Builder<FileSpec.Builder> , MemberSpecHolder.Builder<FileSpec.Builder> ","com.squareup.kotlinpoet.FileSpec.Builder"]},{"name":"class Builder : Taggable.Builder<FunSpec.Builder> , OriginatingElementsHolder.Builder<FunSpec.Builder> , ContextReceivable.Builder<FunSpec.Builder> , ContextParameterizable.Builder<FunSpec.Builder> , Annotatable.Builder<FunSpec.Builder> , Documentable.Builder<FunSpec.Builder> ","description":"com.squareup.kotlinpoet.FunSpec.Builder","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/index.html","searchKeys":["Builder","class Builder : Taggable.Builder<FunSpec.Builder> , OriginatingElementsHolder.Builder<FunSpec.Builder> , ContextReceivable.Builder<FunSpec.Builder> , ContextParameterizable.Builder<FunSpec.Builder> , Annotatable.Builder<FunSpec.Builder> , Documentable.Builder<FunSpec.Builder> ","com.squareup.kotlinpoet.FunSpec.Builder"]},{"name":"class Builder : Taggable.Builder<ParameterSpec.Builder> , Annotatable.Builder<ParameterSpec.Builder> , Documentable.Builder<ParameterSpec.Builder> ","description":"com.squareup.kotlinpoet.ParameterSpec.Builder","location":"kotlinpoet/com.squareup.kotlinpoet/-parameter-spec/-builder/index.html","searchKeys":["Builder","class Builder : Taggable.Builder<ParameterSpec.Builder> , Annotatable.Builder<ParameterSpec.Builder> , Documentable.Builder<ParameterSpec.Builder> ","com.squareup.kotlinpoet.ParameterSpec.Builder"]},{"name":"class Builder : Taggable.Builder<PropertySpec.Builder> , OriginatingElementsHolder.Builder<PropertySpec.Builder> , ContextReceivable.Builder<PropertySpec.Builder> , ContextParameterizable.Builder<PropertySpec.Builder> , Annotatable.Builder<PropertySpec.Builder> , Documentable.Builder<PropertySpec.Builder> ","description":"com.squareup.kotlinpoet.PropertySpec.Builder","location":"kotlinpoet/com.squareup.kotlinpoet/-property-spec/-builder/index.html","searchKeys":["Builder","class Builder : Taggable.Builder<PropertySpec.Builder> , OriginatingElementsHolder.Builder<PropertySpec.Builder> , ContextReceivable.Builder<PropertySpec.Builder> , ContextParameterizable.Builder<PropertySpec.Builder> , Annotatable.Builder<PropertySpec.Builder> , Documentable.Builder<PropertySpec.Builder> ","com.squareup.kotlinpoet.PropertySpec.Builder"]},{"name":"class Builder : Taggable.Builder<TypeAliasSpec.Builder> , Annotatable.Builder<TypeAliasSpec.Builder> , Documentable.Builder<TypeAliasSpec.Builder> ","description":"com.squareup.kotlinpoet.TypeAliasSpec.Builder","location":"kotlinpoet/com.squareup.kotlinpoet/-type-alias-spec/-builder/index.html","searchKeys":["Builder","class Builder : Taggable.Builder<TypeAliasSpec.Builder> , Annotatable.Builder<TypeAliasSpec.Builder> , Documentable.Builder<TypeAliasSpec.Builder> ","com.squareup.kotlinpoet.TypeAliasSpec.Builder"]},{"name":"class Builder : Taggable.Builder<TypeSpec.Builder> , OriginatingElementsHolder.Builder<TypeSpec.Builder> , ContextReceivable.Builder<TypeSpec.Builder> , Annotatable.Builder<TypeSpec.Builder> , Documentable.Builder<TypeSpec.Builder> , TypeSpecHolder.Builder<TypeSpec.Builder> , MemberSpecHolder.Builder<TypeSpec.Builder> ","description":"com.squareup.kotlinpoet.TypeSpec.Builder","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-builder/index.html","searchKeys":["Builder","class Builder : Taggable.Builder<TypeSpec.Builder> , OriginatingElementsHolder.Builder<TypeSpec.Builder> , ContextReceivable.Builder<TypeSpec.Builder> , Annotatable.Builder<TypeSpec.Builder> , Documentable.Builder<TypeSpec.Builder> , TypeSpecHolder.Builder<TypeSpec.Builder> , MemberSpecHolder.Builder<TypeSpec.Builder> ","com.squareup.kotlinpoet.TypeSpec.Builder"]},{"name":"class ClassName : TypeName, Comparable<ClassName> ","description":"com.squareup.kotlinpoet.ClassName","location":"kotlinpoet/com.squareup.kotlinpoet/-class-name/index.html","searchKeys":["ClassName","class ClassName : TypeName, Comparable<ClassName> ","com.squareup.kotlinpoet.ClassName"]},{"name":"class CodeBlock","description":"com.squareup.kotlinpoet.CodeBlock","location":"kotlinpoet/com.squareup.kotlinpoet/-code-block/index.html","searchKeys":["CodeBlock","class CodeBlock","com.squareup.kotlinpoet.CodeBlock"]},{"name":"class ContextParameter(val name: String, val type: TypeName)","description":"com.squareup.kotlinpoet.ContextParameter","location":"kotlinpoet/com.squareup.kotlinpoet/-context-parameter/index.html","searchKeys":["ContextParameter","class ContextParameter(val name: String, val type: TypeName)","com.squareup.kotlinpoet.ContextParameter"]},{"name":"class FileSpec : Taggable, Annotatable, TypeSpecHolder, MemberSpecHolder","description":"com.squareup.kotlinpoet.FileSpec","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/index.html","searchKeys":["FileSpec","class FileSpec : Taggable, Annotatable, TypeSpecHolder, MemberSpecHolder","com.squareup.kotlinpoet.FileSpec"]},{"name":"class FunSpec : Taggable, OriginatingElementsHolder, ContextReceivable, ContextParameterizable, Annotatable, Documentable","description":"com.squareup.kotlinpoet.FunSpec","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/index.html","searchKeys":["FunSpec","class FunSpec : Taggable, OriginatingElementsHolder, ContextReceivable, ContextParameterizable, Annotatable, Documentable","com.squareup.kotlinpoet.FunSpec"]},{"name":"class LambdaTypeName : TypeName","description":"com.squareup.kotlinpoet.LambdaTypeName","location":"kotlinpoet/com.squareup.kotlinpoet/-lambda-type-name/index.html","searchKeys":["LambdaTypeName","class LambdaTypeName : TypeName","com.squareup.kotlinpoet.LambdaTypeName"]},{"name":"class NameAllocator","description":"com.squareup.kotlinpoet.NameAllocator","location":"kotlinpoet/com.squareup.kotlinpoet/-name-allocator/index.html","searchKeys":["NameAllocator","class NameAllocator","com.squareup.kotlinpoet.NameAllocator"]},{"name":"class ParameterSpec : Taggable, Annotatable, Documentable","description":"com.squareup.kotlinpoet.ParameterSpec","location":"kotlinpoet/com.squareup.kotlinpoet/-parameter-spec/index.html","searchKeys":["ParameterSpec","class ParameterSpec : Taggable, Annotatable, Documentable","com.squareup.kotlinpoet.ParameterSpec"]},{"name":"class ParameterizedTypeName : TypeName","description":"com.squareup.kotlinpoet.ParameterizedTypeName","location":"kotlinpoet/com.squareup.kotlinpoet/-parameterized-type-name/index.html","searchKeys":["ParameterizedTypeName","class ParameterizedTypeName : TypeName","com.squareup.kotlinpoet.ParameterizedTypeName"]},{"name":"class PropertySpec : Taggable, OriginatingElementsHolder, ContextReceivable, ContextParameterizable, Annotatable, Documentable","description":"com.squareup.kotlinpoet.PropertySpec","location":"kotlinpoet/com.squareup.kotlinpoet/-property-spec/index.html","searchKeys":["PropertySpec","class PropertySpec : Taggable, OriginatingElementsHolder, ContextReceivable, ContextParameterizable, Annotatable, Documentable","com.squareup.kotlinpoet.PropertySpec"]},{"name":"class TypeAliasSpec : Taggable, Annotatable, Documentable","description":"com.squareup.kotlinpoet.TypeAliasSpec","location":"kotlinpoet/com.squareup.kotlinpoet/-type-alias-spec/index.html","searchKeys":["TypeAliasSpec","class TypeAliasSpec : Taggable, Annotatable, Documentable","com.squareup.kotlinpoet.TypeAliasSpec"]},{"name":"class TypeAliasTag(val abbreviatedType: TypeName)","description":"com.squareup.kotlinpoet.tags.TypeAliasTag","location":"kotlinpoet/com.squareup.kotlinpoet.tags/-type-alias-tag/index.html","searchKeys":["TypeAliasTag","class TypeAliasTag(val abbreviatedType: TypeName)","com.squareup.kotlinpoet.tags.TypeAliasTag"]},{"name":"class TypeSpec : Taggable, OriginatingElementsHolder, ContextReceivable, Annotatable, Documentable, TypeSpecHolder, MemberSpecHolder","description":"com.squareup.kotlinpoet.TypeSpec","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/index.html","searchKeys":["TypeSpec","class TypeSpec : Taggable, OriginatingElementsHolder, ContextReceivable, Annotatable, Documentable, TypeSpecHolder, MemberSpecHolder","com.squareup.kotlinpoet.TypeSpec"]},{"name":"class TypeVariableName : TypeName","description":"com.squareup.kotlinpoet.TypeVariableName","location":"kotlinpoet/com.squareup.kotlinpoet/-type-variable-name/index.html","searchKeys":["TypeVariableName","class TypeVariableName : TypeName","com.squareup.kotlinpoet.TypeVariableName"]},{"name":"class WildcardTypeName : TypeName","description":"com.squareup.kotlinpoet.WildcardTypeName","location":"kotlinpoet/com.squareup.kotlinpoet/-wildcard-type-name/index.html","searchKeys":["WildcardTypeName","class WildcardTypeName : TypeName","com.squareup.kotlinpoet.WildcardTypeName"]},{"name":"constructor()","description":"com.squareup.kotlinpoet.CodeBlock.Builder.Builder","location":"kotlinpoet/com.squareup.kotlinpoet/-code-block/-builder/-builder.html","searchKeys":["Builder","constructor()","com.squareup.kotlinpoet.CodeBlock.Builder.Builder"]},{"name":"constructor()","description":"com.squareup.kotlinpoet.NameAllocator.NameAllocator","location":"kotlinpoet/com.squareup.kotlinpoet/-name-allocator/-name-allocator.html","searchKeys":["NameAllocator","constructor()","com.squareup.kotlinpoet.NameAllocator.NameAllocator"]},{"name":"constructor(abbreviatedType: TypeName)","description":"com.squareup.kotlinpoet.tags.TypeAliasTag.TypeAliasTag","location":"kotlinpoet/com.squareup.kotlinpoet.tags/-type-alias-tag/-type-alias-tag.html","searchKeys":["TypeAliasTag","constructor(abbreviatedType: TypeName)","com.squareup.kotlinpoet.tags.TypeAliasTag.TypeAliasTag"]},{"name":"constructor(enclosingClassName: ClassName, operator: KOperator)","description":"com.squareup.kotlinpoet.MemberName.MemberName","location":"kotlinpoet/com.squareup.kotlinpoet/-member-name/-member-name.html","searchKeys":["MemberName","constructor(enclosingClassName: ClassName, operator: KOperator)","com.squareup.kotlinpoet.MemberName.MemberName"]},{"name":"constructor(enclosingClassName: ClassName, simpleName: String)","description":"com.squareup.kotlinpoet.MemberName.MemberName","location":"kotlinpoet/com.squareup.kotlinpoet/-member-name/-member-name.html","searchKeys":["MemberName","constructor(enclosingClassName: ClassName, simpleName: String)","com.squareup.kotlinpoet.MemberName.MemberName"]},{"name":"constructor(enclosingClassName: ClassName, simpleName: String, isExtension: Boolean)","description":"com.squareup.kotlinpoet.MemberName.MemberName","location":"kotlinpoet/com.squareup.kotlinpoet/-member-name/-member-name.html","searchKeys":["MemberName","constructor(enclosingClassName: ClassName, simpleName: String, isExtension: Boolean)","com.squareup.kotlinpoet.MemberName.MemberName"]},{"name":"constructor(name: String, type: TypeName)","description":"com.squareup.kotlinpoet.ContextParameter.ContextParameter","location":"kotlinpoet/com.squareup.kotlinpoet/-context-parameter/-context-parameter.html","searchKeys":["ContextParameter","constructor(name: String, type: TypeName)","com.squareup.kotlinpoet.ContextParameter.ContextParameter"]},{"name":"constructor(name: String, type: TypeName, modifiers: Iterable<KModifier>)","description":"com.squareup.kotlinpoet.ParameterSpec.ParameterSpec","location":"kotlinpoet/com.squareup.kotlinpoet/-parameter-spec/-parameter-spec.html","searchKeys":["ParameterSpec","constructor(name: String, type: TypeName, modifiers: Iterable<KModifier>)","com.squareup.kotlinpoet.ParameterSpec.ParameterSpec"]},{"name":"constructor(name: String, type: TypeName, vararg modifiers: KModifier)","description":"com.squareup.kotlinpoet.ParameterSpec.ParameterSpec","location":"kotlinpoet/com.squareup.kotlinpoet/-parameter-spec/-parameter-spec.html","searchKeys":["ParameterSpec","constructor(name: String, type: TypeName, vararg modifiers: KModifier)","com.squareup.kotlinpoet.ParameterSpec.ParameterSpec"]},{"name":"constructor(packageName: String, operator: KOperator)","description":"com.squareup.kotlinpoet.MemberName.MemberName","location":"kotlinpoet/com.squareup.kotlinpoet/-member-name/-member-name.html","searchKeys":["MemberName","constructor(packageName: String, operator: KOperator)","com.squareup.kotlinpoet.MemberName.MemberName"]},{"name":"constructor(packageName: String, simpleName: String)","description":"com.squareup.kotlinpoet.MemberName.MemberName","location":"kotlinpoet/com.squareup.kotlinpoet/-member-name/-member-name.html","searchKeys":["MemberName","constructor(packageName: String, simpleName: String)","com.squareup.kotlinpoet.MemberName.MemberName"]},{"name":"constructor(packageName: String, simpleName: String, isExtension: Boolean)","description":"com.squareup.kotlinpoet.MemberName.MemberName","location":"kotlinpoet/com.squareup.kotlinpoet/-member-name/-member-name.html","searchKeys":["MemberName","constructor(packageName: String, simpleName: String, isExtension: Boolean)","com.squareup.kotlinpoet.MemberName.MemberName"]},{"name":"constructor(packageName: String, simpleNames: List<String>)","description":"com.squareup.kotlinpoet.ClassName.ClassName","location":"kotlinpoet/com.squareup.kotlinpoet/-class-name/-class-name.html","searchKeys":["ClassName","constructor(packageName: String, simpleNames: List<String>)","com.squareup.kotlinpoet.ClassName.ClassName"]},{"name":"constructor(packageName: String, vararg simpleNames: String)","description":"com.squareup.kotlinpoet.ClassName.ClassName","location":"kotlinpoet/com.squareup.kotlinpoet/-class-name/-class-name.html","searchKeys":["ClassName","constructor(packageName: String, vararg simpleNames: String)","com.squareup.kotlinpoet.ClassName.ClassName"]},{"name":"constructor(preallocateKeywords: Boolean)","description":"com.squareup.kotlinpoet.NameAllocator.NameAllocator","location":"kotlinpoet/com.squareup.kotlinpoet/-name-allocator/-name-allocator.html","searchKeys":["NameAllocator","constructor(preallocateKeywords: Boolean)","com.squareup.kotlinpoet.NameAllocator.NameAllocator"]},{"name":"constructor(type: TypeName)","description":"com.squareup.kotlinpoet.ContextParameter.ContextParameter","location":"kotlinpoet/com.squareup.kotlinpoet/-context-parameter/-context-parameter.html","searchKeys":["ContextParameter","constructor(type: TypeName)","com.squareup.kotlinpoet.ContextParameter.ContextParameter"]},{"name":"data class Import : Comparable<Import> ","description":"com.squareup.kotlinpoet.Import","location":"kotlinpoet/com.squareup.kotlinpoet/-import/index.html","searchKeys":["Import","data class Import : Comparable<Import> ","com.squareup.kotlinpoet.Import"]},{"name":"data class MemberName","description":"com.squareup.kotlinpoet.MemberName","location":"kotlinpoet/com.squareup.kotlinpoet/-member-name/index.html","searchKeys":["MemberName","data class MemberName","com.squareup.kotlinpoet.MemberName"]},{"name":"enum KModifier : Enum<KModifier> ","description":"com.squareup.kotlinpoet.KModifier","location":"kotlinpoet/com.squareup.kotlinpoet/-k-modifier/index.html","searchKeys":["KModifier","enum KModifier : Enum<KModifier> ","com.squareup.kotlinpoet.KModifier"]},{"name":"enum KOperator : Enum<KOperator> ","description":"com.squareup.kotlinpoet.KOperator","location":"kotlinpoet/com.squareup.kotlinpoet/-k-operator/index.html","searchKeys":["KOperator","enum KOperator : Enum<KOperator> ","com.squareup.kotlinpoet.KOperator"]},{"name":"enum Kind : Enum<TypeSpec.Kind> ","description":"com.squareup.kotlinpoet.TypeSpec.Kind","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-kind/index.html","searchKeys":["Kind","enum Kind : Enum<TypeSpec.Kind> ","com.squareup.kotlinpoet.TypeSpec.Kind"]},{"name":"enum UseSiteTarget : Enum<AnnotationSpec.UseSiteTarget> ","description":"com.squareup.kotlinpoet.AnnotationSpec.UseSiteTarget","location":"kotlinpoet/com.squareup.kotlinpoet/-annotation-spec/-use-site-target/index.html","searchKeys":["UseSiteTarget","enum UseSiteTarget : Enum<AnnotationSpec.UseSiteTarget> ","com.squareup.kotlinpoet.AnnotationSpec.UseSiteTarget"]},{"name":"fun <T> Collection<T>.joinToCode(separator: CharSequence = \", \", prefix: CharSequence = \"\", suffix: CharSequence = \"\", transform: (T) -> CodeBlock): CodeBlock","description":"com.squareup.kotlinpoet.joinToCode","location":"kotlinpoet/com.squareup.kotlinpoet/join-to-code.html","searchKeys":["joinToCode","fun <T> Collection<T>.joinToCode(separator: CharSequence = \", \", prefix: CharSequence = \"\", suffix: CharSequence = \"\", transform: (T) -> CodeBlock): CodeBlock","com.squareup.kotlinpoet.joinToCode"]},{"name":"fun Class<*>.asClassName(): ClassName","description":"com.squareup.kotlinpoet.asClassName","location":"kotlinpoet/com.squareup.kotlinpoet/as-class-name.html","searchKeys":["asClassName","fun Class<*>.asClassName(): ClassName","com.squareup.kotlinpoet.asClassName"]},{"name":"fun Class<*>.member(simpleName: String): MemberName","description":"com.squareup.kotlinpoet.MemberName.Companion.member","location":"kotlinpoet/com.squareup.kotlinpoet/-member-name/-companion/member.html","searchKeys":["member","fun Class<*>.member(simpleName: String): MemberName","com.squareup.kotlinpoet.MemberName.Companion.member"]},{"name":"fun Class<*>.parameterizedBy(typeArguments: Iterable<Type>): ParameterizedTypeName","description":"com.squareup.kotlinpoet.ParameterizedTypeName.Companion.parameterizedBy","location":"kotlinpoet/com.squareup.kotlinpoet/-parameterized-type-name/-companion/parameterized-by.html","searchKeys":["parameterizedBy","fun Class<*>.parameterizedBy(typeArguments: Iterable<Type>): ParameterizedTypeName","com.squareup.kotlinpoet.ParameterizedTypeName.Companion.parameterizedBy"]},{"name":"fun Class<*>.parameterizedBy(vararg typeArguments: Type): ParameterizedTypeName","description":"com.squareup.kotlinpoet.ParameterizedTypeName.Companion.parameterizedBy","location":"kotlinpoet/com.squareup.kotlinpoet/-parameterized-type-name/-companion/parameterized-by.html","searchKeys":["parameterizedBy","fun Class<*>.parameterizedBy(vararg typeArguments: Type): ParameterizedTypeName","com.squareup.kotlinpoet.ParameterizedTypeName.Companion.parameterizedBy"]},{"name":"fun Class<*>.plusParameter(typeArgument: Class<*>): ParameterizedTypeName","description":"com.squareup.kotlinpoet.ParameterizedTypeName.Companion.plusParameter","location":"kotlinpoet/com.squareup.kotlinpoet/-parameterized-type-name/-companion/plus-parameter.html","searchKeys":["plusParameter","fun Class<*>.plusParameter(typeArgument: Class<*>): ParameterizedTypeName","com.squareup.kotlinpoet.ParameterizedTypeName.Companion.plusParameter"]},{"name":"fun ClassName.parameterizedBy(typeArguments: List<TypeName>): ParameterizedTypeName","description":"com.squareup.kotlinpoet.ParameterizedTypeName.Companion.parameterizedBy","location":"kotlinpoet/com.squareup.kotlinpoet/-parameterized-type-name/-companion/parameterized-by.html","searchKeys":["parameterizedBy","fun ClassName.parameterizedBy(typeArguments: List<TypeName>): ParameterizedTypeName","com.squareup.kotlinpoet.ParameterizedTypeName.Companion.parameterizedBy"]},{"name":"fun ClassName.parameterizedBy(vararg typeArguments: TypeName): ParameterizedTypeName","description":"com.squareup.kotlinpoet.ParameterizedTypeName.Companion.parameterizedBy","location":"kotlinpoet/com.squareup.kotlinpoet/-parameterized-type-name/-companion/parameterized-by.html","searchKeys":["parameterizedBy","fun ClassName.parameterizedBy(vararg typeArguments: TypeName): ParameterizedTypeName","com.squareup.kotlinpoet.ParameterizedTypeName.Companion.parameterizedBy"]},{"name":"fun ClassName.plusParameter(typeArgument: TypeName): ParameterizedTypeName","description":"com.squareup.kotlinpoet.ParameterizedTypeName.Companion.plusParameter","location":"kotlinpoet/com.squareup.kotlinpoet/-parameterized-type-name/-companion/plus-parameter.html","searchKeys":["plusParameter","fun ClassName.plusParameter(typeArgument: TypeName): ParameterizedTypeName","com.squareup.kotlinpoet.ParameterizedTypeName.Companion.plusParameter"]},{"name":"fun Collection<CodeBlock>.joinToCode(separator: CharSequence = \", \", prefix: CharSequence = \"\", suffix: CharSequence = \"\"): CodeBlock","description":"com.squareup.kotlinpoet.joinToCode","location":"kotlinpoet/com.squareup.kotlinpoet/join-to-code.html","searchKeys":["joinToCode","fun Collection<CodeBlock>.joinToCode(separator: CharSequence = \", \", prefix: CharSequence = \"\", suffix: CharSequence = \"\"): CodeBlock","com.squareup.kotlinpoet.joinToCode"]},{"name":"fun FileSpec.Builder.jvmMultifileClass(): FileSpec.Builder","description":"com.squareup.kotlinpoet.jvm.jvmMultifileClass","location":"kotlinpoet/com.squareup.kotlinpoet.jvm/jvm-multifile-class.html","searchKeys":["jvmMultifileClass","fun FileSpec.Builder.jvmMultifileClass(): FileSpec.Builder","com.squareup.kotlinpoet.jvm.jvmMultifileClass"]},{"name":"fun FileSpec.Builder.jvmName(name: String): FileSpec.Builder","description":"com.squareup.kotlinpoet.jvm.jvmName","location":"kotlinpoet/com.squareup.kotlinpoet.jvm/jvm-name.html","searchKeys":["jvmName","fun FileSpec.Builder.jvmName(name: String): FileSpec.Builder","com.squareup.kotlinpoet.jvm.jvmName"]},{"name":"fun FunSpec.Builder.jvmName(name: String): FunSpec.Builder","description":"com.squareup.kotlinpoet.jvm.jvmName","location":"kotlinpoet/com.squareup.kotlinpoet.jvm/jvm-name.html","searchKeys":["jvmName","fun FunSpec.Builder.jvmName(name: String): FunSpec.Builder","com.squareup.kotlinpoet.jvm.jvmName"]},{"name":"fun FunSpec.Builder.jvmOverloads(): FunSpec.Builder","description":"com.squareup.kotlinpoet.jvm.jvmOverloads","location":"kotlinpoet/com.squareup.kotlinpoet.jvm/jvm-overloads.html","searchKeys":["jvmOverloads","fun FunSpec.Builder.jvmOverloads(): FunSpec.Builder","com.squareup.kotlinpoet.jvm.jvmOverloads"]},{"name":"fun FunSpec.Builder.jvmStatic(): FunSpec.Builder","description":"com.squareup.kotlinpoet.jvm.jvmStatic","location":"kotlinpoet/com.squareup.kotlinpoet.jvm/jvm-static.html","searchKeys":["jvmStatic","fun FunSpec.Builder.jvmStatic(): FunSpec.Builder","com.squareup.kotlinpoet.jvm.jvmStatic"]},{"name":"fun FunSpec.Builder.jvmSuppressWildcards(suppress: Boolean = true): FunSpec.Builder","description":"com.squareup.kotlinpoet.jvm.jvmSuppressWildcards","location":"kotlinpoet/com.squareup.kotlinpoet.jvm/jvm-suppress-wildcards.html","searchKeys":["jvmSuppressWildcards","fun FunSpec.Builder.jvmSuppressWildcards(suppress: Boolean = true): FunSpec.Builder","com.squareup.kotlinpoet.jvm.jvmSuppressWildcards"]},{"name":"fun FunSpec.Builder.strictfp(): FunSpec.Builder","description":"com.squareup.kotlinpoet.jvm.strictfp","location":"kotlinpoet/com.squareup.kotlinpoet.jvm/strictfp.html","searchKeys":["strictfp","fun FunSpec.Builder.strictfp(): FunSpec.Builder","com.squareup.kotlinpoet.jvm.strictfp"]},{"name":"fun FunSpec.Builder.synchronized(): FunSpec.Builder","description":"com.squareup.kotlinpoet.jvm.synchronized","location":"kotlinpoet/com.squareup.kotlinpoet.jvm/synchronized.html","searchKeys":["synchronized","fun FunSpec.Builder.synchronized(): FunSpec.Builder","com.squareup.kotlinpoet.jvm.synchronized"]},{"name":"fun FunSpec.Builder.throws(exceptionClasses: Iterable<TypeName>): FunSpec.Builder","description":"com.squareup.kotlinpoet.jvm.throws","location":"kotlinpoet/com.squareup.kotlinpoet.jvm/throws.html","searchKeys":["throws","fun FunSpec.Builder.throws(exceptionClasses: Iterable<TypeName>): FunSpec.Builder","com.squareup.kotlinpoet.jvm.throws"]},{"name":"fun FunSpec.Builder.throws(vararg exceptionClasses: KClass<out Throwable>): FunSpec.Builder","description":"com.squareup.kotlinpoet.jvm.throws","location":"kotlinpoet/com.squareup.kotlinpoet.jvm/throws.html","searchKeys":["throws","fun FunSpec.Builder.throws(vararg exceptionClasses: KClass<out Throwable>): FunSpec.Builder","com.squareup.kotlinpoet.jvm.throws"]},{"name":"fun FunSpec.Builder.throws(vararg exceptionClasses: Type): FunSpec.Builder","description":"com.squareup.kotlinpoet.jvm.throws","location":"kotlinpoet/com.squareup.kotlinpoet.jvm/throws.html","searchKeys":["throws","fun FunSpec.Builder.throws(vararg exceptionClasses: Type): FunSpec.Builder","com.squareup.kotlinpoet.jvm.throws"]},{"name":"fun FunSpec.Builder.throws(vararg exceptionClasses: TypeName): FunSpec.Builder","description":"com.squareup.kotlinpoet.jvm.throws","location":"kotlinpoet/com.squareup.kotlinpoet.jvm/throws.html","searchKeys":["throws","fun FunSpec.Builder.throws(vararg exceptionClasses: TypeName): FunSpec.Builder","com.squareup.kotlinpoet.jvm.throws"]},{"name":"fun KClass<*>.asClassName(): ClassName","description":"com.squareup.kotlinpoet.asClassName","location":"kotlinpoet/com.squareup.kotlinpoet/as-class-name.html","searchKeys":["asClassName","fun KClass<*>.asClassName(): ClassName","com.squareup.kotlinpoet.asClassName"]},{"name":"fun KClass<*>.asTypeName(): ClassName","description":"com.squareup.kotlinpoet.asTypeName","location":"kotlinpoet/com.squareup.kotlinpoet/as-type-name.html","searchKeys":["asTypeName","fun KClass<*>.asTypeName(): ClassName","com.squareup.kotlinpoet.asTypeName"]},{"name":"fun KClass<*>.member(simpleName: String): MemberName","description":"com.squareup.kotlinpoet.MemberName.Companion.member","location":"kotlinpoet/com.squareup.kotlinpoet/-member-name/-companion/member.html","searchKeys":["member","fun KClass<*>.member(simpleName: String): MemberName","com.squareup.kotlinpoet.MemberName.Companion.member"]},{"name":"fun KClass<*>.parameterizedBy(typeArguments: Iterable<KClass<*>>): ParameterizedTypeName","description":"com.squareup.kotlinpoet.ParameterizedTypeName.Companion.parameterizedBy","location":"kotlinpoet/com.squareup.kotlinpoet/-parameterized-type-name/-companion/parameterized-by.html","searchKeys":["parameterizedBy","fun KClass<*>.parameterizedBy(typeArguments: Iterable<KClass<*>>): ParameterizedTypeName","com.squareup.kotlinpoet.ParameterizedTypeName.Companion.parameterizedBy"]},{"name":"fun KClass<*>.parameterizedBy(vararg typeArguments: KClass<*>): ParameterizedTypeName","description":"com.squareup.kotlinpoet.ParameterizedTypeName.Companion.parameterizedBy","location":"kotlinpoet/com.squareup.kotlinpoet/-parameterized-type-name/-companion/parameterized-by.html","searchKeys":["parameterizedBy","fun KClass<*>.parameterizedBy(vararg typeArguments: KClass<*>): ParameterizedTypeName","com.squareup.kotlinpoet.ParameterizedTypeName.Companion.parameterizedBy"]},{"name":"fun KClass<*>.plusParameter(typeArgument: KClass<*>): ParameterizedTypeName","description":"com.squareup.kotlinpoet.ParameterizedTypeName.Companion.plusParameter","location":"kotlinpoet/com.squareup.kotlinpoet/-parameterized-type-name/-companion/plus-parameter.html","searchKeys":["plusParameter","fun KClass<*>.plusParameter(typeArgument: KClass<*>): ParameterizedTypeName","com.squareup.kotlinpoet.ParameterizedTypeName.Companion.plusParameter"]},{"name":"fun KType.asTypeName(): TypeName","description":"com.squareup.kotlinpoet.asTypeName","location":"kotlinpoet/com.squareup.kotlinpoet/as-type-name.html","searchKeys":["asTypeName","fun KType.asTypeName(): TypeName","com.squareup.kotlinpoet.asTypeName"]},{"name":"fun KTypeParameter.asTypeVariableName(): TypeVariableName","description":"com.squareup.kotlinpoet.asTypeVariableName","location":"kotlinpoet/com.squareup.kotlinpoet/as-type-variable-name.html","searchKeys":["asTypeVariableName","fun KTypeParameter.asTypeVariableName(): TypeVariableName","com.squareup.kotlinpoet.asTypeVariableName"]},{"name":"fun ParameterizedType.asParameterizedTypeName(): ParameterizedTypeName","description":"com.squareup.kotlinpoet.asParameterizedTypeName","location":"kotlinpoet/com.squareup.kotlinpoet/as-parameterized-type-name.html","searchKeys":["asParameterizedTypeName","fun ParameterizedType.asParameterizedTypeName(): ParameterizedTypeName","com.squareup.kotlinpoet.asParameterizedTypeName"]},{"name":"fun PropertySpec.Builder.jvmField(): PropertySpec.Builder","description":"com.squareup.kotlinpoet.jvm.jvmField","location":"kotlinpoet/com.squareup.kotlinpoet.jvm/jvm-field.html","searchKeys":["jvmField","fun PropertySpec.Builder.jvmField(): PropertySpec.Builder","com.squareup.kotlinpoet.jvm.jvmField"]},{"name":"fun PropertySpec.Builder.jvmStatic(): PropertySpec.Builder","description":"com.squareup.kotlinpoet.jvm.jvmStatic","location":"kotlinpoet/com.squareup.kotlinpoet.jvm/jvm-static.html","searchKeys":["jvmStatic","fun PropertySpec.Builder.jvmStatic(): PropertySpec.Builder","com.squareup.kotlinpoet.jvm.jvmStatic"]},{"name":"fun PropertySpec.Builder.jvmSuppressWildcards(suppress: Boolean = true): PropertySpec.Builder","description":"com.squareup.kotlinpoet.jvm.jvmSuppressWildcards","location":"kotlinpoet/com.squareup.kotlinpoet.jvm/jvm-suppress-wildcards.html","searchKeys":["jvmSuppressWildcards","fun PropertySpec.Builder.jvmSuppressWildcards(suppress: Boolean = true): PropertySpec.Builder","com.squareup.kotlinpoet.jvm.jvmSuppressWildcards"]},{"name":"fun PropertySpec.Builder.transient(): PropertySpec.Builder","description":"com.squareup.kotlinpoet.jvm.transient","location":"kotlinpoet/com.squareup.kotlinpoet.jvm/transient.html","searchKeys":["transient","fun PropertySpec.Builder.transient(): PropertySpec.Builder","com.squareup.kotlinpoet.jvm.transient"]},{"name":"fun PropertySpec.Builder.volatile(): PropertySpec.Builder","description":"com.squareup.kotlinpoet.jvm.volatile","location":"kotlinpoet/com.squareup.kotlinpoet.jvm/volatile.html","searchKeys":["volatile","fun PropertySpec.Builder.volatile(): PropertySpec.Builder","com.squareup.kotlinpoet.jvm.volatile"]},{"name":"fun Type.asTypeName(): TypeName","description":"com.squareup.kotlinpoet.asTypeName","location":"kotlinpoet/com.squareup.kotlinpoet/as-type-name.html","searchKeys":["asTypeName","fun Type.asTypeName(): TypeName","com.squareup.kotlinpoet.asTypeName"]},{"name":"fun TypeElement.asClassName(): ClassName","description":"com.squareup.kotlinpoet.asClassName","location":"kotlinpoet/com.squareup.kotlinpoet/as-class-name.html","searchKeys":["asClassName","fun TypeElement.asClassName(): ClassName","com.squareup.kotlinpoet.asClassName"]},{"name":"fun TypeMirror.asTypeName(): TypeName","description":"com.squareup.kotlinpoet.asTypeName","location":"kotlinpoet/com.squareup.kotlinpoet/as-type-name.html","searchKeys":["asTypeName","fun TypeMirror.asTypeName(): TypeName","com.squareup.kotlinpoet.asTypeName"]},{"name":"fun TypeName.jvmSuppressWildcards(suppress: Boolean = true): TypeName","description":"com.squareup.kotlinpoet.jvm.jvmSuppressWildcards","location":"kotlinpoet/com.squareup.kotlinpoet.jvm/jvm-suppress-wildcards.html","searchKeys":["jvmSuppressWildcards","fun TypeName.jvmSuppressWildcards(suppress: Boolean = true): TypeName","com.squareup.kotlinpoet.jvm.jvmSuppressWildcards"]},{"name":"fun TypeName.jvmWildcard(): TypeName","description":"com.squareup.kotlinpoet.jvm.jvmWildcard","location":"kotlinpoet/com.squareup.kotlinpoet.jvm/jvm-wildcard.html","searchKeys":["jvmWildcard","fun TypeName.jvmWildcard(): TypeName","com.squareup.kotlinpoet.jvm.jvmWildcard"]},{"name":"fun TypeParameterElement.asTypeVariableName(): TypeVariableName","description":"com.squareup.kotlinpoet.asTypeVariableName","location":"kotlinpoet/com.squareup.kotlinpoet/as-type-variable-name.html","searchKeys":["asTypeVariableName","fun TypeParameterElement.asTypeVariableName(): TypeVariableName","com.squareup.kotlinpoet.asTypeVariableName"]},{"name":"fun TypeSpec.Builder.jvmInline(): TypeSpec.Builder","description":"com.squareup.kotlinpoet.jvm.jvmInline","location":"kotlinpoet/com.squareup.kotlinpoet.jvm/jvm-inline.html","searchKeys":["jvmInline","fun TypeSpec.Builder.jvmInline(): TypeSpec.Builder","com.squareup.kotlinpoet.jvm.jvmInline"]},{"name":"fun TypeSpec.Builder.jvmRecord(): TypeSpec.Builder","description":"com.squareup.kotlinpoet.jvm.jvmRecord","location":"kotlinpoet/com.squareup.kotlinpoet.jvm/jvm-record.html","searchKeys":["jvmRecord","fun TypeSpec.Builder.jvmRecord(): TypeSpec.Builder","com.squareup.kotlinpoet.jvm.jvmRecord"]},{"name":"fun TypeSpec.Builder.jvmSuppressWildcards(suppress: Boolean = true): TypeSpec.Builder","description":"com.squareup.kotlinpoet.jvm.jvmSuppressWildcards","location":"kotlinpoet/com.squareup.kotlinpoet.jvm/jvm-suppress-wildcards.html","searchKeys":["jvmSuppressWildcards","fun TypeSpec.Builder.jvmSuppressWildcards(suppress: Boolean = true): TypeSpec.Builder","com.squareup.kotlinpoet.jvm.jvmSuppressWildcards"]},{"name":"fun TypeVariable.asTypeVariableName(): TypeVariableName","description":"com.squareup.kotlinpoet.asTypeVariableName","location":"kotlinpoet/com.squareup.kotlinpoet/as-type-variable-name.html","searchKeys":["asTypeVariableName","fun TypeVariable.asTypeVariableName(): TypeVariableName","com.squareup.kotlinpoet.asTypeVariableName"]},{"name":"fun WildcardType.asWildcardTypeName(): TypeName","description":"com.squareup.kotlinpoet.asWildcardTypeName","location":"kotlinpoet/com.squareup.kotlinpoet/as-wildcard-type-name.html","searchKeys":["asWildcardTypeName","fun WildcardType.asWildcardTypeName(): TypeName","com.squareup.kotlinpoet.asWildcardTypeName"]},{"name":"fun WildcardType.asWildcardTypeName(): TypeName","description":"com.squareup.kotlinpoet.asWildcardTypeName","location":"kotlinpoet/com.squareup.kotlinpoet/as-wildcard-type-name.html","searchKeys":["asWildcardTypeName","fun WildcardType.asWildcardTypeName(): TypeName","com.squareup.kotlinpoet.asWildcardTypeName"]},{"name":"fun add(codeBlock: CodeBlock): CodeBlock.Builder","description":"com.squareup.kotlinpoet.CodeBlock.Builder.add","location":"kotlinpoet/com.squareup.kotlinpoet/-code-block/-builder/add.html","searchKeys":["add","fun add(codeBlock: CodeBlock): CodeBlock.Builder","com.squareup.kotlinpoet.CodeBlock.Builder.add"]},{"name":"fun add(format: String, vararg args: Any?): CodeBlock.Builder","description":"com.squareup.kotlinpoet.CodeBlock.Builder.add","location":"kotlinpoet/com.squareup.kotlinpoet/-code-block/-builder/add.html","searchKeys":["add","fun add(format: String, vararg args: Any?): CodeBlock.Builder","com.squareup.kotlinpoet.CodeBlock.Builder.add"]},{"name":"fun addAliasedImport(class: Class<*>, as: String): FileSpec.Builder","description":"com.squareup.kotlinpoet.FileSpec.Builder.addAliasedImport","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/-builder/add-aliased-import.html","searchKeys":["addAliasedImport","fun addAliasedImport(class: Class<*>, as: String): FileSpec.Builder","com.squareup.kotlinpoet.FileSpec.Builder.addAliasedImport"]},{"name":"fun addAliasedImport(class: KClass<*>, as: String): FileSpec.Builder","description":"com.squareup.kotlinpoet.FileSpec.Builder.addAliasedImport","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/-builder/add-aliased-import.html","searchKeys":["addAliasedImport","fun addAliasedImport(class: KClass<*>, as: String): FileSpec.Builder","com.squareup.kotlinpoet.FileSpec.Builder.addAliasedImport"]},{"name":"fun addAliasedImport(className: ClassName, as: String): FileSpec.Builder","description":"com.squareup.kotlinpoet.FileSpec.Builder.addAliasedImport","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/-builder/add-aliased-import.html","searchKeys":["addAliasedImport","fun addAliasedImport(className: ClassName, as: String): FileSpec.Builder","com.squareup.kotlinpoet.FileSpec.Builder.addAliasedImport"]},{"name":"fun addAliasedImport(className: ClassName, memberName: String, as: String): FileSpec.Builder","description":"com.squareup.kotlinpoet.FileSpec.Builder.addAliasedImport","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/-builder/add-aliased-import.html","searchKeys":["addAliasedImport","fun addAliasedImport(className: ClassName, memberName: String, as: String): FileSpec.Builder","com.squareup.kotlinpoet.FileSpec.Builder.addAliasedImport"]},{"name":"fun addAliasedImport(memberName: MemberName, as: String): FileSpec.Builder","description":"com.squareup.kotlinpoet.FileSpec.Builder.addAliasedImport","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/-builder/add-aliased-import.html","searchKeys":["addAliasedImport","fun addAliasedImport(memberName: MemberName, as: String): FileSpec.Builder","com.squareup.kotlinpoet.FileSpec.Builder.addAliasedImport"]},{"name":"fun addBodyComment(format: String, vararg args: Any): FileSpec.Builder","description":"com.squareup.kotlinpoet.FileSpec.Builder.addBodyComment","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/-builder/add-body-comment.html","searchKeys":["addBodyComment","fun addBodyComment(format: String, vararg args: Any): FileSpec.Builder","com.squareup.kotlinpoet.FileSpec.Builder.addBodyComment"]},{"name":"fun addCode(codeBlock: CodeBlock): FileSpec.Builder","description":"com.squareup.kotlinpoet.FileSpec.Builder.addCode","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/-builder/add-code.html","searchKeys":["addCode","fun addCode(codeBlock: CodeBlock): FileSpec.Builder","com.squareup.kotlinpoet.FileSpec.Builder.addCode"]},{"name":"fun addCode(codeBlock: CodeBlock): FunSpec.Builder","description":"com.squareup.kotlinpoet.FunSpec.Builder.addCode","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/add-code.html","searchKeys":["addCode","fun addCode(codeBlock: CodeBlock): FunSpec.Builder","com.squareup.kotlinpoet.FunSpec.Builder.addCode"]},{"name":"fun addCode(format: String, vararg args: Any?): FileSpec.Builder","description":"com.squareup.kotlinpoet.FileSpec.Builder.addCode","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/-builder/add-code.html","searchKeys":["addCode","fun addCode(format: String, vararg args: Any?): FileSpec.Builder","com.squareup.kotlinpoet.FileSpec.Builder.addCode"]},{"name":"fun addCode(format: String, vararg args: Any?): FunSpec.Builder","description":"com.squareup.kotlinpoet.FunSpec.Builder.addCode","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/add-code.html","searchKeys":["addCode","fun addCode(format: String, vararg args: Any?): FunSpec.Builder","com.squareup.kotlinpoet.FunSpec.Builder.addCode"]},{"name":"fun addComment(format: String, vararg args: Any): FunSpec.Builder","description":"com.squareup.kotlinpoet.FunSpec.Builder.addComment","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/add-comment.html","searchKeys":["addComment","fun addComment(format: String, vararg args: Any): FunSpec.Builder","com.squareup.kotlinpoet.FunSpec.Builder.addComment"]},{"name":"fun addDefaultPackageImport(packageName: String): FileSpec.Builder","description":"com.squareup.kotlinpoet.FileSpec.Builder.addDefaultPackageImport","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/-builder/add-default-package-import.html","searchKeys":["addDefaultPackageImport","fun addDefaultPackageImport(packageName: String): FileSpec.Builder","com.squareup.kotlinpoet.FileSpec.Builder.addDefaultPackageImport"]},{"name":"fun addEnumConstant(name: String, typeSpec: TypeSpec = anonymousClassBuilder().build()): TypeSpec.Builder","description":"com.squareup.kotlinpoet.TypeSpec.Builder.addEnumConstant","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-builder/add-enum-constant.html","searchKeys":["addEnumConstant","fun addEnumConstant(name: String, typeSpec: TypeSpec = anonymousClassBuilder().build()): TypeSpec.Builder","com.squareup.kotlinpoet.TypeSpec.Builder.addEnumConstant"]},{"name":"fun addFileComment(format: String, vararg args: Any): FileSpec.Builder","description":"com.squareup.kotlinpoet.FileSpec.Builder.addFileComment","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/-builder/add-file-comment.html","searchKeys":["addFileComment","fun addFileComment(format: String, vararg args: Any): FileSpec.Builder","com.squareup.kotlinpoet.FileSpec.Builder.addFileComment"]},{"name":"fun addImport(class: Class<*>, names: Iterable<String>): FileSpec.Builder","description":"com.squareup.kotlinpoet.FileSpec.Builder.addImport","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/-builder/add-import.html","searchKeys":["addImport","fun addImport(class: Class<*>, names: Iterable<String>): FileSpec.Builder","com.squareup.kotlinpoet.FileSpec.Builder.addImport"]},{"name":"fun addImport(class: Class<*>, vararg names: String): FileSpec.Builder","description":"com.squareup.kotlinpoet.FileSpec.Builder.addImport","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/-builder/add-import.html","searchKeys":["addImport","fun addImport(class: Class<*>, vararg names: String): FileSpec.Builder","com.squareup.kotlinpoet.FileSpec.Builder.addImport"]},{"name":"fun addImport(class: KClass<*>, names: Iterable<String>): FileSpec.Builder","description":"com.squareup.kotlinpoet.FileSpec.Builder.addImport","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/-builder/add-import.html","searchKeys":["addImport","fun addImport(class: KClass<*>, names: Iterable<String>): FileSpec.Builder","com.squareup.kotlinpoet.FileSpec.Builder.addImport"]},{"name":"fun addImport(class: KClass<*>, vararg names: String): FileSpec.Builder","description":"com.squareup.kotlinpoet.FileSpec.Builder.addImport","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/-builder/add-import.html","searchKeys":["addImport","fun addImport(class: KClass<*>, vararg names: String): FileSpec.Builder","com.squareup.kotlinpoet.FileSpec.Builder.addImport"]},{"name":"fun addImport(className: ClassName, names: Iterable<String>): FileSpec.Builder","description":"com.squareup.kotlinpoet.FileSpec.Builder.addImport","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/-builder/add-import.html","searchKeys":["addImport","fun addImport(className: ClassName, names: Iterable<String>): FileSpec.Builder","com.squareup.kotlinpoet.FileSpec.Builder.addImport"]},{"name":"fun addImport(className: ClassName, vararg names: String): FileSpec.Builder","description":"com.squareup.kotlinpoet.FileSpec.Builder.addImport","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/-builder/add-import.html","searchKeys":["addImport","fun addImport(className: ClassName, vararg names: String): FileSpec.Builder","com.squareup.kotlinpoet.FileSpec.Builder.addImport"]},{"name":"fun addImport(constant: Enum<*>): FileSpec.Builder","description":"com.squareup.kotlinpoet.FileSpec.Builder.addImport","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/-builder/add-import.html","searchKeys":["addImport","fun addImport(constant: Enum<*>): FileSpec.Builder","com.squareup.kotlinpoet.FileSpec.Builder.addImport"]},{"name":"fun addImport(import: Import): FileSpec.Builder","description":"com.squareup.kotlinpoet.FileSpec.Builder.addImport","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/-builder/add-import.html","searchKeys":["addImport","fun addImport(import: Import): FileSpec.Builder","com.squareup.kotlinpoet.FileSpec.Builder.addImport"]},{"name":"fun addImport(memberName: MemberName): FileSpec.Builder","description":"com.squareup.kotlinpoet.FileSpec.Builder.addImport","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/-builder/add-import.html","searchKeys":["addImport","fun addImport(memberName: MemberName): FileSpec.Builder","com.squareup.kotlinpoet.FileSpec.Builder.addImport"]},{"name":"fun addImport(packageName: String, names: Iterable<String>): FileSpec.Builder","description":"com.squareup.kotlinpoet.FileSpec.Builder.addImport","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/-builder/add-import.html","searchKeys":["addImport","fun addImport(packageName: String, names: Iterable<String>): FileSpec.Builder","com.squareup.kotlinpoet.FileSpec.Builder.addImport"]},{"name":"fun addImport(packageName: String, vararg names: String): FileSpec.Builder","description":"com.squareup.kotlinpoet.FileSpec.Builder.addImport","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/-builder/add-import.html","searchKeys":["addImport","fun addImport(packageName: String, vararg names: String): FileSpec.Builder","com.squareup.kotlinpoet.FileSpec.Builder.addImport"]},{"name":"fun addInitializerBlock(block: CodeBlock): TypeSpec.Builder","description":"com.squareup.kotlinpoet.TypeSpec.Builder.addInitializerBlock","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-builder/add-initializer-block.html","searchKeys":["addInitializerBlock","fun addInitializerBlock(block: CodeBlock): TypeSpec.Builder","com.squareup.kotlinpoet.TypeSpec.Builder.addInitializerBlock"]},{"name":"fun addKotlinDefaultImports(includeJvm: Boolean = true, includeJs: Boolean = true): FileSpec.Builder","description":"com.squareup.kotlinpoet.FileSpec.Builder.addKotlinDefaultImports","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/-builder/add-kotlin-default-imports.html","searchKeys":["addKotlinDefaultImports","fun addKotlinDefaultImports(includeJvm: Boolean = true, includeJs: Boolean = true): FileSpec.Builder","com.squareup.kotlinpoet.FileSpec.Builder.addKotlinDefaultImports"]},{"name":"fun addMember(codeBlock: CodeBlock): AnnotationSpec.Builder","description":"com.squareup.kotlinpoet.AnnotationSpec.Builder.addMember","location":"kotlinpoet/com.squareup.kotlinpoet/-annotation-spec/-builder/add-member.html","searchKeys":["addMember","fun addMember(codeBlock: CodeBlock): AnnotationSpec.Builder","com.squareup.kotlinpoet.AnnotationSpec.Builder.addMember"]},{"name":"fun addMember(format: String, vararg args: Any): AnnotationSpec.Builder","description":"com.squareup.kotlinpoet.AnnotationSpec.Builder.addMember","location":"kotlinpoet/com.squareup.kotlinpoet/-annotation-spec/-builder/add-member.html","searchKeys":["addMember","fun addMember(format: String, vararg args: Any): AnnotationSpec.Builder","com.squareup.kotlinpoet.AnnotationSpec.Builder.addMember"]},{"name":"fun addModifiers(modifiers: Iterable<KModifier>): FunSpec.Builder","description":"com.squareup.kotlinpoet.FunSpec.Builder.addModifiers","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/add-modifiers.html","searchKeys":["addModifiers","fun addModifiers(modifiers: Iterable<KModifier>): FunSpec.Builder","com.squareup.kotlinpoet.FunSpec.Builder.addModifiers"]},{"name":"fun addModifiers(modifiers: Iterable<KModifier>): ParameterSpec.Builder","description":"com.squareup.kotlinpoet.ParameterSpec.Builder.addModifiers","location":"kotlinpoet/com.squareup.kotlinpoet/-parameter-spec/-builder/add-modifiers.html","searchKeys":["addModifiers","fun addModifiers(modifiers: Iterable<KModifier>): ParameterSpec.Builder","com.squareup.kotlinpoet.ParameterSpec.Builder.addModifiers"]},{"name":"fun addModifiers(modifiers: Iterable<KModifier>): PropertySpec.Builder","description":"com.squareup.kotlinpoet.PropertySpec.Builder.addModifiers","location":"kotlinpoet/com.squareup.kotlinpoet/-property-spec/-builder/add-modifiers.html","searchKeys":["addModifiers","fun addModifiers(modifiers: Iterable<KModifier>): PropertySpec.Builder","com.squareup.kotlinpoet.PropertySpec.Builder.addModifiers"]},{"name":"fun addModifiers(modifiers: Iterable<KModifier>): TypeAliasSpec.Builder","description":"com.squareup.kotlinpoet.TypeAliasSpec.Builder.addModifiers","location":"kotlinpoet/com.squareup.kotlinpoet/-type-alias-spec/-builder/add-modifiers.html","searchKeys":["addModifiers","fun addModifiers(modifiers: Iterable<KModifier>): TypeAliasSpec.Builder","com.squareup.kotlinpoet.TypeAliasSpec.Builder.addModifiers"]},{"name":"fun addModifiers(modifiers: Iterable<KModifier>): TypeSpec.Builder","description":"com.squareup.kotlinpoet.TypeSpec.Builder.addModifiers","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-builder/add-modifiers.html","searchKeys":["addModifiers","fun addModifiers(modifiers: Iterable<KModifier>): TypeSpec.Builder","com.squareup.kotlinpoet.TypeSpec.Builder.addModifiers"]},{"name":"fun addModifiers(vararg modifiers: KModifier): FunSpec.Builder","description":"com.squareup.kotlinpoet.FunSpec.Builder.addModifiers","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/add-modifiers.html","searchKeys":["addModifiers","fun addModifiers(vararg modifiers: KModifier): FunSpec.Builder","com.squareup.kotlinpoet.FunSpec.Builder.addModifiers"]},{"name":"fun addModifiers(vararg modifiers: KModifier): ParameterSpec.Builder","description":"com.squareup.kotlinpoet.ParameterSpec.Builder.addModifiers","location":"kotlinpoet/com.squareup.kotlinpoet/-parameter-spec/-builder/add-modifiers.html","searchKeys":["addModifiers","fun addModifiers(vararg modifiers: KModifier): ParameterSpec.Builder","com.squareup.kotlinpoet.ParameterSpec.Builder.addModifiers"]},{"name":"fun addModifiers(vararg modifiers: KModifier): PropertySpec.Builder","description":"com.squareup.kotlinpoet.PropertySpec.Builder.addModifiers","location":"kotlinpoet/com.squareup.kotlinpoet/-property-spec/-builder/add-modifiers.html","searchKeys":["addModifiers","fun addModifiers(vararg modifiers: KModifier): PropertySpec.Builder","com.squareup.kotlinpoet.PropertySpec.Builder.addModifiers"]},{"name":"fun addModifiers(vararg modifiers: KModifier): TypeAliasSpec.Builder","description":"com.squareup.kotlinpoet.TypeAliasSpec.Builder.addModifiers","location":"kotlinpoet/com.squareup.kotlinpoet/-type-alias-spec/-builder/add-modifiers.html","searchKeys":["addModifiers","fun addModifiers(vararg modifiers: KModifier): TypeAliasSpec.Builder","com.squareup.kotlinpoet.TypeAliasSpec.Builder.addModifiers"]},{"name":"fun addModifiers(vararg modifiers: KModifier): TypeSpec.Builder","description":"com.squareup.kotlinpoet.TypeSpec.Builder.addModifiers","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-builder/add-modifiers.html","searchKeys":["addModifiers","fun addModifiers(vararg modifiers: KModifier): TypeSpec.Builder","com.squareup.kotlinpoet.TypeSpec.Builder.addModifiers"]},{"name":"fun addNamed(format: String, arguments: Map<String, *>): CodeBlock.Builder","description":"com.squareup.kotlinpoet.CodeBlock.Builder.addNamed","location":"kotlinpoet/com.squareup.kotlinpoet/-code-block/-builder/add-named.html","searchKeys":["addNamed","fun addNamed(format: String, arguments: Map<String, *>): CodeBlock.Builder","com.squareup.kotlinpoet.CodeBlock.Builder.addNamed"]},{"name":"fun addNamedCode(format: String, args: Map<String, *>): FileSpec.Builder","description":"com.squareup.kotlinpoet.FileSpec.Builder.addNamedCode","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/-builder/add-named-code.html","searchKeys":["addNamedCode","fun addNamedCode(format: String, args: Map<String, *>): FileSpec.Builder","com.squareup.kotlinpoet.FileSpec.Builder.addNamedCode"]},{"name":"fun addNamedCode(format: String, args: Map<String, *>): FunSpec.Builder","description":"com.squareup.kotlinpoet.FunSpec.Builder.addNamedCode","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/add-named-code.html","searchKeys":["addNamedCode","fun addNamedCode(format: String, args: Map<String, *>): FunSpec.Builder","com.squareup.kotlinpoet.FunSpec.Builder.addNamedCode"]},{"name":"fun addParameter(name: String, type: KClass<*>, modifiers: Iterable<KModifier>): FunSpec.Builder","description":"com.squareup.kotlinpoet.FunSpec.Builder.addParameter","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/add-parameter.html","searchKeys":["addParameter","fun addParameter(name: String, type: KClass<*>, modifiers: Iterable<KModifier>): FunSpec.Builder","com.squareup.kotlinpoet.FunSpec.Builder.addParameter"]},{"name":"fun addParameter(name: String, type: KClass<*>, vararg modifiers: KModifier): FunSpec.Builder","description":"com.squareup.kotlinpoet.FunSpec.Builder.addParameter","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/add-parameter.html","searchKeys":["addParameter","fun addParameter(name: String, type: KClass<*>, vararg modifiers: KModifier): FunSpec.Builder","com.squareup.kotlinpoet.FunSpec.Builder.addParameter"]},{"name":"fun addParameter(name: String, type: Type, modifiers: Iterable<KModifier>): FunSpec.Builder","description":"com.squareup.kotlinpoet.FunSpec.Builder.addParameter","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/add-parameter.html","searchKeys":["addParameter","fun addParameter(name: String, type: Type, modifiers: Iterable<KModifier>): FunSpec.Builder","com.squareup.kotlinpoet.FunSpec.Builder.addParameter"]},{"name":"fun addParameter(name: String, type: Type, vararg modifiers: KModifier): FunSpec.Builder","description":"com.squareup.kotlinpoet.FunSpec.Builder.addParameter","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/add-parameter.html","searchKeys":["addParameter","fun addParameter(name: String, type: Type, vararg modifiers: KModifier): FunSpec.Builder","com.squareup.kotlinpoet.FunSpec.Builder.addParameter"]},{"name":"fun addParameter(name: String, type: TypeName, modifiers: Iterable<KModifier>): FunSpec.Builder","description":"com.squareup.kotlinpoet.FunSpec.Builder.addParameter","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/add-parameter.html","searchKeys":["addParameter","fun addParameter(name: String, type: TypeName, modifiers: Iterable<KModifier>): FunSpec.Builder","com.squareup.kotlinpoet.FunSpec.Builder.addParameter"]},{"name":"fun addParameter(name: String, type: TypeName, vararg modifiers: KModifier): FunSpec.Builder","description":"com.squareup.kotlinpoet.FunSpec.Builder.addParameter","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/add-parameter.html","searchKeys":["addParameter","fun addParameter(name: String, type: TypeName, vararg modifiers: KModifier): FunSpec.Builder","com.squareup.kotlinpoet.FunSpec.Builder.addParameter"]},{"name":"fun addParameter(parameterSpec: ParameterSpec): FunSpec.Builder","description":"com.squareup.kotlinpoet.FunSpec.Builder.addParameter","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/add-parameter.html","searchKeys":["addParameter","fun addParameter(parameterSpec: ParameterSpec): FunSpec.Builder","com.squareup.kotlinpoet.FunSpec.Builder.addParameter"]},{"name":"fun addParameters(parameterSpecs: Iterable<ParameterSpec>): FunSpec.Builder","description":"com.squareup.kotlinpoet.FunSpec.Builder.addParameters","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/add-parameters.html","searchKeys":["addParameters","fun addParameters(parameterSpecs: Iterable<ParameterSpec>): FunSpec.Builder","com.squareup.kotlinpoet.FunSpec.Builder.addParameters"]},{"name":"fun addStatement(format: String, vararg args: Any): FileSpec.Builder","description":"com.squareup.kotlinpoet.FileSpec.Builder.addStatement","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/-builder/add-statement.html","searchKeys":["addStatement","fun addStatement(format: String, vararg args: Any): FileSpec.Builder","com.squareup.kotlinpoet.FileSpec.Builder.addStatement"]},{"name":"fun addStatement(format: String, vararg args: Any): FunSpec.Builder","description":"com.squareup.kotlinpoet.FunSpec.Builder.addStatement","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/add-statement.html","searchKeys":["addStatement","fun addStatement(format: String, vararg args: Any): FunSpec.Builder","com.squareup.kotlinpoet.FunSpec.Builder.addStatement"]},{"name":"fun addStatement(format: String, vararg args: Any?): CodeBlock.Builder","description":"com.squareup.kotlinpoet.CodeBlock.Builder.addStatement","location":"kotlinpoet/com.squareup.kotlinpoet/-code-block/-builder/add-statement.html","searchKeys":["addStatement","fun addStatement(format: String, vararg args: Any?): CodeBlock.Builder","com.squareup.kotlinpoet.CodeBlock.Builder.addStatement"]},{"name":"fun addSuperclassConstructorParameter(codeBlock: CodeBlock): TypeSpec.Builder","description":"com.squareup.kotlinpoet.TypeSpec.Builder.addSuperclassConstructorParameter","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-builder/add-superclass-constructor-parameter.html","searchKeys":["addSuperclassConstructorParameter","fun addSuperclassConstructorParameter(codeBlock: CodeBlock): TypeSpec.Builder","com.squareup.kotlinpoet.TypeSpec.Builder.addSuperclassConstructorParameter"]},{"name":"fun addSuperclassConstructorParameter(format: String, vararg args: Any): TypeSpec.Builder","description":"com.squareup.kotlinpoet.TypeSpec.Builder.addSuperclassConstructorParameter","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-builder/add-superclass-constructor-parameter.html","searchKeys":["addSuperclassConstructorParameter","fun addSuperclassConstructorParameter(format: String, vararg args: Any): TypeSpec.Builder","com.squareup.kotlinpoet.TypeSpec.Builder.addSuperclassConstructorParameter"]},{"name":"fun addSuperinterface(superinterface: KClass<*>, constructorParameterName: String): TypeSpec.Builder","description":"com.squareup.kotlinpoet.TypeSpec.Builder.addSuperinterface","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-builder/add-superinterface.html","searchKeys":["addSuperinterface","fun addSuperinterface(superinterface: KClass<*>, constructorParameterName: String): TypeSpec.Builder","com.squareup.kotlinpoet.TypeSpec.Builder.addSuperinterface"]},{"name":"fun addSuperinterface(superinterface: KClass<*>, delegate: CodeBlock = CodeBlock.EMPTY): TypeSpec.Builder","description":"com.squareup.kotlinpoet.TypeSpec.Builder.addSuperinterface","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-builder/add-superinterface.html","searchKeys":["addSuperinterface","fun addSuperinterface(superinterface: KClass<*>, delegate: CodeBlock = CodeBlock.EMPTY): TypeSpec.Builder","com.squareup.kotlinpoet.TypeSpec.Builder.addSuperinterface"]},{"name":"fun addSuperinterface(superinterface: Type, delegate: CodeBlock = CodeBlock.EMPTY): TypeSpec.Builder","description":"com.squareup.kotlinpoet.TypeSpec.Builder.addSuperinterface","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-builder/add-superinterface.html","searchKeys":["addSuperinterface","fun addSuperinterface(superinterface: Type, delegate: CodeBlock = CodeBlock.EMPTY): TypeSpec.Builder","com.squareup.kotlinpoet.TypeSpec.Builder.addSuperinterface"]},{"name":"fun addSuperinterface(superinterface: TypeName, constructorParameter: String): TypeSpec.Builder","description":"com.squareup.kotlinpoet.TypeSpec.Builder.addSuperinterface","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-builder/add-superinterface.html","searchKeys":["addSuperinterface","fun addSuperinterface(superinterface: TypeName, constructorParameter: String): TypeSpec.Builder","com.squareup.kotlinpoet.TypeSpec.Builder.addSuperinterface"]},{"name":"fun addSuperinterface(superinterface: TypeName, delegate: CodeBlock = CodeBlock.EMPTY): TypeSpec.Builder","description":"com.squareup.kotlinpoet.TypeSpec.Builder.addSuperinterface","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-builder/add-superinterface.html","searchKeys":["addSuperinterface","fun addSuperinterface(superinterface: TypeName, delegate: CodeBlock = CodeBlock.EMPTY): TypeSpec.Builder","com.squareup.kotlinpoet.TypeSpec.Builder.addSuperinterface"]},{"name":"fun addSuperinterfaces(superinterfaces: Iterable<TypeName>): TypeSpec.Builder","description":"com.squareup.kotlinpoet.TypeSpec.Builder.addSuperinterfaces","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-builder/add-superinterfaces.html","searchKeys":["addSuperinterfaces","fun addSuperinterfaces(superinterfaces: Iterable<TypeName>): TypeSpec.Builder","com.squareup.kotlinpoet.TypeSpec.Builder.addSuperinterfaces"]},{"name":"fun addTypeAlias(typeAliasSpec: TypeAliasSpec): FileSpec.Builder","description":"com.squareup.kotlinpoet.FileSpec.Builder.addTypeAlias","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/-builder/add-type-alias.html","searchKeys":["addTypeAlias","fun addTypeAlias(typeAliasSpec: TypeAliasSpec): FileSpec.Builder","com.squareup.kotlinpoet.FileSpec.Builder.addTypeAlias"]},{"name":"fun addTypeAlias(typeAliasSpec: TypeAliasSpec): TypeSpec.Builder","description":"com.squareup.kotlinpoet.TypeSpec.Builder.addTypeAlias","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-builder/add-type-alias.html","searchKeys":["addTypeAlias","fun addTypeAlias(typeAliasSpec: TypeAliasSpec): TypeSpec.Builder","com.squareup.kotlinpoet.TypeSpec.Builder.addTypeAlias"]},{"name":"fun addTypeVariable(typeVariable: TypeVariableName): FunSpec.Builder","description":"com.squareup.kotlinpoet.FunSpec.Builder.addTypeVariable","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/add-type-variable.html","searchKeys":["addTypeVariable","fun addTypeVariable(typeVariable: TypeVariableName): FunSpec.Builder","com.squareup.kotlinpoet.FunSpec.Builder.addTypeVariable"]},{"name":"fun addTypeVariable(typeVariable: TypeVariableName): PropertySpec.Builder","description":"com.squareup.kotlinpoet.PropertySpec.Builder.addTypeVariable","location":"kotlinpoet/com.squareup.kotlinpoet/-property-spec/-builder/add-type-variable.html","searchKeys":["addTypeVariable","fun addTypeVariable(typeVariable: TypeVariableName): PropertySpec.Builder","com.squareup.kotlinpoet.PropertySpec.Builder.addTypeVariable"]},{"name":"fun addTypeVariable(typeVariable: TypeVariableName): TypeAliasSpec.Builder","description":"com.squareup.kotlinpoet.TypeAliasSpec.Builder.addTypeVariable","location":"kotlinpoet/com.squareup.kotlinpoet/-type-alias-spec/-builder/add-type-variable.html","searchKeys":["addTypeVariable","fun addTypeVariable(typeVariable: TypeVariableName): TypeAliasSpec.Builder","com.squareup.kotlinpoet.TypeAliasSpec.Builder.addTypeVariable"]},{"name":"fun addTypeVariable(typeVariable: TypeVariableName): TypeSpec.Builder","description":"com.squareup.kotlinpoet.TypeSpec.Builder.addTypeVariable","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-builder/add-type-variable.html","searchKeys":["addTypeVariable","fun addTypeVariable(typeVariable: TypeVariableName): TypeSpec.Builder","com.squareup.kotlinpoet.TypeSpec.Builder.addTypeVariable"]},{"name":"fun addTypeVariables(typeVariables: Iterable<TypeVariableName>): FunSpec.Builder","description":"com.squareup.kotlinpoet.FunSpec.Builder.addTypeVariables","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/add-type-variables.html","searchKeys":["addTypeVariables","fun addTypeVariables(typeVariables: Iterable<TypeVariableName>): FunSpec.Builder","com.squareup.kotlinpoet.FunSpec.Builder.addTypeVariables"]},{"name":"fun addTypeVariables(typeVariables: Iterable<TypeVariableName>): PropertySpec.Builder","description":"com.squareup.kotlinpoet.PropertySpec.Builder.addTypeVariables","location":"kotlinpoet/com.squareup.kotlinpoet/-property-spec/-builder/add-type-variables.html","searchKeys":["addTypeVariables","fun addTypeVariables(typeVariables: Iterable<TypeVariableName>): PropertySpec.Builder","com.squareup.kotlinpoet.PropertySpec.Builder.addTypeVariables"]},{"name":"fun addTypeVariables(typeVariables: Iterable<TypeVariableName>): TypeAliasSpec.Builder","description":"com.squareup.kotlinpoet.TypeAliasSpec.Builder.addTypeVariables","location":"kotlinpoet/com.squareup.kotlinpoet/-type-alias-spec/-builder/add-type-variables.html","searchKeys":["addTypeVariables","fun addTypeVariables(typeVariables: Iterable<TypeVariableName>): TypeAliasSpec.Builder","com.squareup.kotlinpoet.TypeAliasSpec.Builder.addTypeVariables"]},{"name":"fun addTypeVariables(typeVariables: Iterable<TypeVariableName>): TypeSpec.Builder","description":"com.squareup.kotlinpoet.TypeSpec.Builder.addTypeVariables","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-builder/add-type-variables.html","searchKeys":["addTypeVariables","fun addTypeVariables(typeVariables: Iterable<TypeVariableName>): TypeSpec.Builder","com.squareup.kotlinpoet.TypeSpec.Builder.addTypeVariables"]},{"name":"fun annotationBuilder(className: ClassName): TypeSpec.Builder","description":"com.squareup.kotlinpoet.TypeSpec.Companion.annotationBuilder","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-companion/annotation-builder.html","searchKeys":["annotationBuilder","fun annotationBuilder(className: ClassName): TypeSpec.Builder","com.squareup.kotlinpoet.TypeSpec.Companion.annotationBuilder"]},{"name":"fun annotationBuilder(name: String): TypeSpec.Builder","description":"com.squareup.kotlinpoet.TypeSpec.Companion.annotationBuilder","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-companion/annotation-builder.html","searchKeys":["annotationBuilder","fun annotationBuilder(name: String): TypeSpec.Builder","com.squareup.kotlinpoet.TypeSpec.Companion.annotationBuilder"]},{"name":"fun anonymousClassBuilder(): TypeSpec.Builder","description":"com.squareup.kotlinpoet.TypeSpec.Companion.anonymousClassBuilder","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-companion/anonymous-class-builder.html","searchKeys":["anonymousClassBuilder","fun anonymousClassBuilder(): TypeSpec.Builder","com.squareup.kotlinpoet.TypeSpec.Companion.anonymousClassBuilder"]},{"name":"fun beginControlFlow(controlFlow: String, vararg args: Any): FileSpec.Builder","description":"com.squareup.kotlinpoet.FileSpec.Builder.beginControlFlow","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/-builder/begin-control-flow.html","searchKeys":["beginControlFlow","fun beginControlFlow(controlFlow: String, vararg args: Any): FileSpec.Builder","com.squareup.kotlinpoet.FileSpec.Builder.beginControlFlow"]},{"name":"fun beginControlFlow(controlFlow: String, vararg args: Any?): CodeBlock.Builder","description":"com.squareup.kotlinpoet.CodeBlock.Builder.beginControlFlow","location":"kotlinpoet/com.squareup.kotlinpoet/-code-block/-builder/begin-control-flow.html","searchKeys":["beginControlFlow","fun beginControlFlow(controlFlow: String, vararg args: Any?): CodeBlock.Builder","com.squareup.kotlinpoet.CodeBlock.Builder.beginControlFlow"]},{"name":"fun beginControlFlow(controlFlow: String, vararg args: Any?): FunSpec.Builder","description":"com.squareup.kotlinpoet.FunSpec.Builder.beginControlFlow","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/begin-control-flow.html","searchKeys":["beginControlFlow","fun beginControlFlow(controlFlow: String, vararg args: Any?): FunSpec.Builder","com.squareup.kotlinpoet.FunSpec.Builder.beginControlFlow"]},{"name":"fun bestGuess(classNameString: String): ClassName","description":"com.squareup.kotlinpoet.ClassName.Companion.bestGuess","location":"kotlinpoet/com.squareup.kotlinpoet/-class-name/-companion/best-guess.html","searchKeys":["bestGuess","fun bestGuess(classNameString: String): ClassName","com.squareup.kotlinpoet.ClassName.Companion.bestGuess"]},{"name":"fun build(): AnnotationSpec","description":"com.squareup.kotlinpoet.AnnotationSpec.Builder.build","location":"kotlinpoet/com.squareup.kotlinpoet/-annotation-spec/-builder/build.html","searchKeys":["build","fun build(): AnnotationSpec","com.squareup.kotlinpoet.AnnotationSpec.Builder.build"]},{"name":"fun build(): CodeBlock","description":"com.squareup.kotlinpoet.CodeBlock.Builder.build","location":"kotlinpoet/com.squareup.kotlinpoet/-code-block/-builder/build.html","searchKeys":["build","fun build(): CodeBlock","com.squareup.kotlinpoet.CodeBlock.Builder.build"]},{"name":"fun build(): FileSpec","description":"com.squareup.kotlinpoet.FileSpec.Builder.build","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/-builder/build.html","searchKeys":["build","fun build(): FileSpec","com.squareup.kotlinpoet.FileSpec.Builder.build"]},{"name":"fun build(): FunSpec","description":"com.squareup.kotlinpoet.FunSpec.Builder.build","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/build.html","searchKeys":["build","fun build(): FunSpec","com.squareup.kotlinpoet.FunSpec.Builder.build"]},{"name":"fun build(): ParameterSpec","description":"com.squareup.kotlinpoet.ParameterSpec.Builder.build","location":"kotlinpoet/com.squareup.kotlinpoet/-parameter-spec/-builder/build.html","searchKeys":["build","fun build(): ParameterSpec","com.squareup.kotlinpoet.ParameterSpec.Builder.build"]},{"name":"fun build(): PropertySpec","description":"com.squareup.kotlinpoet.PropertySpec.Builder.build","location":"kotlinpoet/com.squareup.kotlinpoet/-property-spec/-builder/build.html","searchKeys":["build","fun build(): PropertySpec","com.squareup.kotlinpoet.PropertySpec.Builder.build"]},{"name":"fun build(): TypeAliasSpec","description":"com.squareup.kotlinpoet.TypeAliasSpec.Builder.build","location":"kotlinpoet/com.squareup.kotlinpoet/-type-alias-spec/-builder/build.html","searchKeys":["build","fun build(): TypeAliasSpec","com.squareup.kotlinpoet.TypeAliasSpec.Builder.build"]},{"name":"fun build(): TypeSpec","description":"com.squareup.kotlinpoet.TypeSpec.Builder.build","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-builder/build.html","searchKeys":["build","fun build(): TypeSpec","com.squareup.kotlinpoet.TypeSpec.Builder.build"]},{"name":"fun builder(): CodeBlock.Builder","description":"com.squareup.kotlinpoet.CodeBlock.Companion.builder","location":"kotlinpoet/com.squareup.kotlinpoet/-code-block/-companion/builder.html","searchKeys":["builder","fun builder(): CodeBlock.Builder","com.squareup.kotlinpoet.CodeBlock.Companion.builder"]},{"name":"fun builder(className: ClassName): FileSpec.Builder","description":"com.squareup.kotlinpoet.FileSpec.Companion.builder","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/-companion/builder.html","searchKeys":["builder","fun builder(className: ClassName): FileSpec.Builder","com.squareup.kotlinpoet.FileSpec.Companion.builder"]},{"name":"fun builder(memberName: MemberName): FileSpec.Builder","description":"com.squareup.kotlinpoet.FileSpec.Companion.builder","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/-companion/builder.html","searchKeys":["builder","fun builder(memberName: MemberName): FileSpec.Builder","com.squareup.kotlinpoet.FileSpec.Companion.builder"]},{"name":"fun builder(memberName: MemberName): FunSpec.Builder","description":"com.squareup.kotlinpoet.FunSpec.Companion.builder","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-companion/builder.html","searchKeys":["builder","fun builder(memberName: MemberName): FunSpec.Builder","com.squareup.kotlinpoet.FunSpec.Companion.builder"]},{"name":"fun builder(name: String): FunSpec.Builder","description":"com.squareup.kotlinpoet.FunSpec.Companion.builder","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-companion/builder.html","searchKeys":["builder","fun builder(name: String): FunSpec.Builder","com.squareup.kotlinpoet.FunSpec.Companion.builder"]},{"name":"fun builder(name: String, type: KClass<*>): TypeAliasSpec.Builder","description":"com.squareup.kotlinpoet.TypeAliasSpec.Companion.builder","location":"kotlinpoet/com.squareup.kotlinpoet/-type-alias-spec/-companion/builder.html","searchKeys":["builder","fun builder(name: String, type: KClass<*>): TypeAliasSpec.Builder","com.squareup.kotlinpoet.TypeAliasSpec.Companion.builder"]},{"name":"fun builder(name: String, type: KClass<*>, modifiers: Iterable<KModifier>): ParameterSpec.Builder","description":"com.squareup.kotlinpoet.ParameterSpec.Companion.builder","location":"kotlinpoet/com.squareup.kotlinpoet/-parameter-spec/-companion/builder.html","searchKeys":["builder","fun builder(name: String, type: KClass<*>, modifiers: Iterable<KModifier>): ParameterSpec.Builder","com.squareup.kotlinpoet.ParameterSpec.Companion.builder"]},{"name":"fun builder(name: String, type: KClass<*>, modifiers: Iterable<KModifier>): PropertySpec.Builder","description":"com.squareup.kotlinpoet.PropertySpec.Companion.builder","location":"kotlinpoet/com.squareup.kotlinpoet/-property-spec/-companion/builder.html","searchKeys":["builder","fun builder(name: String, type: KClass<*>, modifiers: Iterable<KModifier>): PropertySpec.Builder","com.squareup.kotlinpoet.PropertySpec.Companion.builder"]},{"name":"fun builder(name: String, type: KClass<*>, vararg modifiers: KModifier): ParameterSpec.Builder","description":"com.squareup.kotlinpoet.ParameterSpec.Companion.builder","location":"kotlinpoet/com.squareup.kotlinpoet/-parameter-spec/-companion/builder.html","searchKeys":["builder","fun builder(name: String, type: KClass<*>, vararg modifiers: KModifier): ParameterSpec.Builder","com.squareup.kotlinpoet.ParameterSpec.Companion.builder"]},{"name":"fun builder(name: String, type: KClass<*>, vararg modifiers: KModifier): PropertySpec.Builder","description":"com.squareup.kotlinpoet.PropertySpec.Companion.builder","location":"kotlinpoet/com.squareup.kotlinpoet/-property-spec/-companion/builder.html","searchKeys":["builder","fun builder(name: String, type: KClass<*>, vararg modifiers: KModifier): PropertySpec.Builder","com.squareup.kotlinpoet.PropertySpec.Companion.builder"]},{"name":"fun builder(name: String, type: Type): TypeAliasSpec.Builder","description":"com.squareup.kotlinpoet.TypeAliasSpec.Companion.builder","location":"kotlinpoet/com.squareup.kotlinpoet/-type-alias-spec/-companion/builder.html","searchKeys":["builder","fun builder(name: String, type: Type): TypeAliasSpec.Builder","com.squareup.kotlinpoet.TypeAliasSpec.Companion.builder"]},{"name":"fun builder(name: String, type: Type, modifiers: Iterable<KModifier>): ParameterSpec.Builder","description":"com.squareup.kotlinpoet.ParameterSpec.Companion.builder","location":"kotlinpoet/com.squareup.kotlinpoet/-parameter-spec/-companion/builder.html","searchKeys":["builder","fun builder(name: String, type: Type, modifiers: Iterable<KModifier>): ParameterSpec.Builder","com.squareup.kotlinpoet.ParameterSpec.Companion.builder"]},{"name":"fun builder(name: String, type: Type, modifiers: Iterable<KModifier>): PropertySpec.Builder","description":"com.squareup.kotlinpoet.PropertySpec.Companion.builder","location":"kotlinpoet/com.squareup.kotlinpoet/-property-spec/-companion/builder.html","searchKeys":["builder","fun builder(name: String, type: Type, modifiers: Iterable<KModifier>): PropertySpec.Builder","com.squareup.kotlinpoet.PropertySpec.Companion.builder"]},{"name":"fun builder(name: String, type: Type, vararg modifiers: KModifier): ParameterSpec.Builder","description":"com.squareup.kotlinpoet.ParameterSpec.Companion.builder","location":"kotlinpoet/com.squareup.kotlinpoet/-parameter-spec/-companion/builder.html","searchKeys":["builder","fun builder(name: String, type: Type, vararg modifiers: KModifier): ParameterSpec.Builder","com.squareup.kotlinpoet.ParameterSpec.Companion.builder"]},{"name":"fun builder(name: String, type: Type, vararg modifiers: KModifier): PropertySpec.Builder","description":"com.squareup.kotlinpoet.PropertySpec.Companion.builder","location":"kotlinpoet/com.squareup.kotlinpoet/-property-spec/-companion/builder.html","searchKeys":["builder","fun builder(name: String, type: Type, vararg modifiers: KModifier): PropertySpec.Builder","com.squareup.kotlinpoet.PropertySpec.Companion.builder"]},{"name":"fun builder(name: String, type: TypeName): TypeAliasSpec.Builder","description":"com.squareup.kotlinpoet.TypeAliasSpec.Companion.builder","location":"kotlinpoet/com.squareup.kotlinpoet/-type-alias-spec/-companion/builder.html","searchKeys":["builder","fun builder(name: String, type: TypeName): TypeAliasSpec.Builder","com.squareup.kotlinpoet.TypeAliasSpec.Companion.builder"]},{"name":"fun builder(name: String, type: TypeName, modifiers: Iterable<KModifier>): ParameterSpec.Builder","description":"com.squareup.kotlinpoet.ParameterSpec.Companion.builder","location":"kotlinpoet/com.squareup.kotlinpoet/-parameter-spec/-companion/builder.html","searchKeys":["builder","fun builder(name: String, type: TypeName, modifiers: Iterable<KModifier>): ParameterSpec.Builder","com.squareup.kotlinpoet.ParameterSpec.Companion.builder"]},{"name":"fun builder(name: String, type: TypeName, modifiers: Iterable<KModifier>): PropertySpec.Builder","description":"com.squareup.kotlinpoet.PropertySpec.Companion.builder","location":"kotlinpoet/com.squareup.kotlinpoet/-property-spec/-companion/builder.html","searchKeys":["builder","fun builder(name: String, type: TypeName, modifiers: Iterable<KModifier>): PropertySpec.Builder","com.squareup.kotlinpoet.PropertySpec.Companion.builder"]},{"name":"fun builder(name: String, type: TypeName, vararg modifiers: KModifier): ParameterSpec.Builder","description":"com.squareup.kotlinpoet.ParameterSpec.Companion.builder","location":"kotlinpoet/com.squareup.kotlinpoet/-parameter-spec/-companion/builder.html","searchKeys":["builder","fun builder(name: String, type: TypeName, vararg modifiers: KModifier): ParameterSpec.Builder","com.squareup.kotlinpoet.ParameterSpec.Companion.builder"]},{"name":"fun builder(name: String, type: TypeName, vararg modifiers: KModifier): PropertySpec.Builder","description":"com.squareup.kotlinpoet.PropertySpec.Companion.builder","location":"kotlinpoet/com.squareup.kotlinpoet/-property-spec/-companion/builder.html","searchKeys":["builder","fun builder(name: String, type: TypeName, vararg modifiers: KModifier): PropertySpec.Builder","com.squareup.kotlinpoet.PropertySpec.Companion.builder"]},{"name":"fun builder(packageName: String, fileName: String): FileSpec.Builder","description":"com.squareup.kotlinpoet.FileSpec.Companion.builder","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/-companion/builder.html","searchKeys":["builder","fun builder(packageName: String, fileName: String): FileSpec.Builder","com.squareup.kotlinpoet.FileSpec.Companion.builder"]},{"name":"fun builder(type: Class<out Annotation>): AnnotationSpec.Builder","description":"com.squareup.kotlinpoet.AnnotationSpec.Companion.builder","location":"kotlinpoet/com.squareup.kotlinpoet/-annotation-spec/-companion/builder.html","searchKeys":["builder","fun builder(type: Class<out Annotation>): AnnotationSpec.Builder","com.squareup.kotlinpoet.AnnotationSpec.Companion.builder"]},{"name":"fun builder(type: ClassName): AnnotationSpec.Builder","description":"com.squareup.kotlinpoet.AnnotationSpec.Companion.builder","location":"kotlinpoet/com.squareup.kotlinpoet/-annotation-spec/-companion/builder.html","searchKeys":["builder","fun builder(type: ClassName): AnnotationSpec.Builder","com.squareup.kotlinpoet.AnnotationSpec.Companion.builder"]},{"name":"fun builder(type: KClass<out Annotation>): AnnotationSpec.Builder","description":"com.squareup.kotlinpoet.AnnotationSpec.Companion.builder","location":"kotlinpoet/com.squareup.kotlinpoet/-annotation-spec/-companion/builder.html","searchKeys":["builder","fun builder(type: KClass<out Annotation>): AnnotationSpec.Builder","com.squareup.kotlinpoet.AnnotationSpec.Companion.builder"]},{"name":"fun builder(type: ParameterizedTypeName): AnnotationSpec.Builder","description":"com.squareup.kotlinpoet.AnnotationSpec.Companion.builder","location":"kotlinpoet/com.squareup.kotlinpoet/-annotation-spec/-companion/builder.html","searchKeys":["builder","fun builder(type: ParameterizedTypeName): AnnotationSpec.Builder","com.squareup.kotlinpoet.AnnotationSpec.Companion.builder"]},{"name":"fun callSuperConstructor(args: Iterable<CodeBlock>): FunSpec.Builder","description":"com.squareup.kotlinpoet.FunSpec.Builder.callSuperConstructor","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/call-super-constructor.html","searchKeys":["callSuperConstructor","fun callSuperConstructor(args: Iterable<CodeBlock>): FunSpec.Builder","com.squareup.kotlinpoet.FunSpec.Builder.callSuperConstructor"]},{"name":"fun callSuperConstructor(args: List<CodeBlock>): FunSpec.Builder","description":"com.squareup.kotlinpoet.FunSpec.Builder.callSuperConstructor","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/call-super-constructor.html","searchKeys":["callSuperConstructor","fun callSuperConstructor(args: List<CodeBlock>): FunSpec.Builder","com.squareup.kotlinpoet.FunSpec.Builder.callSuperConstructor"]},{"name":"fun callSuperConstructor(vararg args: CodeBlock = emptyArray()): FunSpec.Builder","description":"com.squareup.kotlinpoet.FunSpec.Builder.callSuperConstructor","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/call-super-constructor.html","searchKeys":["callSuperConstructor","fun callSuperConstructor(vararg args: CodeBlock = emptyArray()): FunSpec.Builder","com.squareup.kotlinpoet.FunSpec.Builder.callSuperConstructor"]},{"name":"fun callSuperConstructor(vararg args: String): FunSpec.Builder","description":"com.squareup.kotlinpoet.FunSpec.Builder.callSuperConstructor","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/call-super-constructor.html","searchKeys":["callSuperConstructor","fun callSuperConstructor(vararg args: String): FunSpec.Builder","com.squareup.kotlinpoet.FunSpec.Builder.callSuperConstructor"]},{"name":"fun callThisConstructor(args: Iterable<CodeBlock>): FunSpec.Builder","description":"com.squareup.kotlinpoet.FunSpec.Builder.callThisConstructor","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/call-this-constructor.html","searchKeys":["callThisConstructor","fun callThisConstructor(args: Iterable<CodeBlock>): FunSpec.Builder","com.squareup.kotlinpoet.FunSpec.Builder.callThisConstructor"]},{"name":"fun callThisConstructor(args: List<CodeBlock>): FunSpec.Builder","description":"com.squareup.kotlinpoet.FunSpec.Builder.callThisConstructor","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/call-this-constructor.html","searchKeys":["callThisConstructor","fun callThisConstructor(args: List<CodeBlock>): FunSpec.Builder","com.squareup.kotlinpoet.FunSpec.Builder.callThisConstructor"]},{"name":"fun callThisConstructor(vararg args: CodeBlock = emptyArray()): FunSpec.Builder","description":"com.squareup.kotlinpoet.FunSpec.Builder.callThisConstructor","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/call-this-constructor.html","searchKeys":["callThisConstructor","fun callThisConstructor(vararg args: CodeBlock = emptyArray()): FunSpec.Builder","com.squareup.kotlinpoet.FunSpec.Builder.callThisConstructor"]},{"name":"fun callThisConstructor(vararg args: String): FunSpec.Builder","description":"com.squareup.kotlinpoet.FunSpec.Builder.callThisConstructor","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/call-this-constructor.html","searchKeys":["callThisConstructor","fun callThisConstructor(vararg args: String): FunSpec.Builder","com.squareup.kotlinpoet.FunSpec.Builder.callThisConstructor"]},{"name":"fun classBuilder(className: ClassName): TypeSpec.Builder","description":"com.squareup.kotlinpoet.TypeSpec.Companion.classBuilder","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-companion/class-builder.html","searchKeys":["classBuilder","fun classBuilder(className: ClassName): TypeSpec.Builder","com.squareup.kotlinpoet.TypeSpec.Companion.classBuilder"]},{"name":"fun classBuilder(name: String): TypeSpec.Builder","description":"com.squareup.kotlinpoet.TypeSpec.Companion.classBuilder","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-companion/class-builder.html","searchKeys":["classBuilder","fun classBuilder(name: String): TypeSpec.Builder","com.squareup.kotlinpoet.TypeSpec.Companion.classBuilder"]},{"name":"fun clear(): CodeBlock.Builder","description":"com.squareup.kotlinpoet.CodeBlock.Builder.clear","location":"kotlinpoet/com.squareup.kotlinpoet/-code-block/-builder/clear.html","searchKeys":["clear","fun clear(): CodeBlock.Builder","com.squareup.kotlinpoet.CodeBlock.Builder.clear"]},{"name":"fun clearBody(): FileSpec.Builder","description":"com.squareup.kotlinpoet.FileSpec.Builder.clearBody","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/-builder/clear-body.html","searchKeys":["clearBody","fun clearBody(): FileSpec.Builder","com.squareup.kotlinpoet.FileSpec.Builder.clearBody"]},{"name":"fun clearBody(): FunSpec.Builder","description":"com.squareup.kotlinpoet.FunSpec.Builder.clearBody","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/clear-body.html","searchKeys":["clearBody","fun clearBody(): FunSpec.Builder","com.squareup.kotlinpoet.FunSpec.Builder.clearBody"]},{"name":"fun clearComment(): FileSpec.Builder","description":"com.squareup.kotlinpoet.FileSpec.Builder.clearComment","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/-builder/clear-comment.html","searchKeys":["clearComment","fun clearComment(): FileSpec.Builder","com.squareup.kotlinpoet.FileSpec.Builder.clearComment"]},{"name":"fun clearImports(): FileSpec.Builder","description":"com.squareup.kotlinpoet.FileSpec.Builder.clearImports","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/-builder/clear-imports.html","searchKeys":["clearImports","fun clearImports(): FileSpec.Builder","com.squareup.kotlinpoet.FileSpec.Builder.clearImports"]},{"name":"fun companionObjectBuilder(name: String? = null): TypeSpec.Builder","description":"com.squareup.kotlinpoet.TypeSpec.Companion.companionObjectBuilder","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-companion/companion-object-builder.html","searchKeys":["companionObjectBuilder","fun companionObjectBuilder(name: String? = null): TypeSpec.Builder","com.squareup.kotlinpoet.TypeSpec.Companion.companionObjectBuilder"]},{"name":"fun constructorBuilder(): FunSpec.Builder","description":"com.squareup.kotlinpoet.FunSpec.Companion.constructorBuilder","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-companion/constructor-builder.html","searchKeys":["constructorBuilder","fun constructorBuilder(): FunSpec.Builder","com.squareup.kotlinpoet.FunSpec.Companion.constructorBuilder"]},{"name":"fun constructorReference(): CodeBlock","description":"com.squareup.kotlinpoet.ClassName.constructorReference","location":"kotlinpoet/com.squareup.kotlinpoet/-class-name/constructor-reference.html","searchKeys":["constructorReference","fun constructorReference(): CodeBlock","com.squareup.kotlinpoet.ClassName.constructorReference"]},{"name":"fun consumerOf(inType: KClass<*>): WildcardTypeName","description":"com.squareup.kotlinpoet.WildcardTypeName.Companion.consumerOf","location":"kotlinpoet/com.squareup.kotlinpoet/-wildcard-type-name/-companion/consumer-of.html","searchKeys":["consumerOf","fun consumerOf(inType: KClass<*>): WildcardTypeName","com.squareup.kotlinpoet.WildcardTypeName.Companion.consumerOf"]},{"name":"fun consumerOf(inType: Type): WildcardTypeName","description":"com.squareup.kotlinpoet.WildcardTypeName.Companion.consumerOf","location":"kotlinpoet/com.squareup.kotlinpoet/-wildcard-type-name/-companion/consumer-of.html","searchKeys":["consumerOf","fun consumerOf(inType: Type): WildcardTypeName","com.squareup.kotlinpoet.WildcardTypeName.Companion.consumerOf"]},{"name":"fun consumerOf(inType: TypeName): WildcardTypeName","description":"com.squareup.kotlinpoet.WildcardTypeName.Companion.consumerOf","location":"kotlinpoet/com.squareup.kotlinpoet/-wildcard-type-name/-companion/consumer-of.html","searchKeys":["consumerOf","fun consumerOf(inType: TypeName): WildcardTypeName","com.squareup.kotlinpoet.WildcardTypeName.Companion.consumerOf"]},{"name":"fun copy(): NameAllocator","description":"com.squareup.kotlinpoet.NameAllocator.copy","location":"kotlinpoet/com.squareup.kotlinpoet/-name-allocator/copy.html","searchKeys":["copy","fun copy(): NameAllocator","com.squareup.kotlinpoet.NameAllocator.copy"]},{"name":"fun copy(nullable: Boolean = this.isNullable, annotations: List<AnnotationSpec> = this.annotations, tags: Map<KClass<*>, Any> = this.tags, typeArguments: List<TypeName> = this.typeArguments): ParameterizedTypeName","description":"com.squareup.kotlinpoet.ParameterizedTypeName.copy","location":"kotlinpoet/com.squareup.kotlinpoet/-parameterized-type-name/copy.html","searchKeys":["copy","fun copy(nullable: Boolean = this.isNullable, annotations: List<AnnotationSpec> = this.annotations, tags: Map<KClass<*>, Any> = this.tags, typeArguments: List<TypeName> = this.typeArguments): ParameterizedTypeName","com.squareup.kotlinpoet.ParameterizedTypeName.copy"]},{"name":"fun copy(nullable: Boolean = this.isNullable, annotations: List<AnnotationSpec> = this.annotations.toList()): TypeName","description":"com.squareup.kotlinpoet.TypeName.copy","location":"kotlinpoet/com.squareup.kotlinpoet/-type-name/copy.html","searchKeys":["copy","fun copy(nullable: Boolean = this.isNullable, annotations: List<AnnotationSpec> = this.annotations.toList()): TypeName","com.squareup.kotlinpoet.TypeName.copy"]},{"name":"fun copy(nullable: Boolean = this.isNullable, annotations: List<AnnotationSpec> = this.annotations.toList(), bounds: List<TypeName> = this.bounds.toList(), reified: Boolean = this.isReified, tags: Map<KClass<*>, Any> = this.tagMap.tags): TypeVariableName","description":"com.squareup.kotlinpoet.TypeVariableName.copy","location":"kotlinpoet/com.squareup.kotlinpoet/-type-variable-name/copy.html","searchKeys":["copy","fun copy(nullable: Boolean = this.isNullable, annotations: List<AnnotationSpec> = this.annotations.toList(), bounds: List<TypeName> = this.bounds.toList(), reified: Boolean = this.isReified, tags: Map<KClass<*>, Any> = this.tagMap.tags): TypeVariableName","com.squareup.kotlinpoet.TypeVariableName.copy"]},{"name":"fun copy(nullable: Boolean = this.isNullable, annotations: List<AnnotationSpec> = this.annotations.toList(), suspending: Boolean = this.isSuspending, tags: Map<KClass<*>, Any> = this.tags.toMap()): LambdaTypeName","description":"com.squareup.kotlinpoet.LambdaTypeName.copy","location":"kotlinpoet/com.squareup.kotlinpoet/-lambda-type-name/copy.html","searchKeys":["copy","fun copy(nullable: Boolean = this.isNullable, annotations: List<AnnotationSpec> = this.annotations.toList(), suspending: Boolean = this.isSuspending, tags: Map<KClass<*>, Any> = this.tags.toMap()): LambdaTypeName","com.squareup.kotlinpoet.LambdaTypeName.copy"]},{"name":"fun defaultValue(codeBlock: CodeBlock?): ParameterSpec.Builder","description":"com.squareup.kotlinpoet.ParameterSpec.Builder.defaultValue","location":"kotlinpoet/com.squareup.kotlinpoet/-parameter-spec/-builder/default-value.html","searchKeys":["defaultValue","fun defaultValue(codeBlock: CodeBlock?): ParameterSpec.Builder","com.squareup.kotlinpoet.ParameterSpec.Builder.defaultValue"]},{"name":"fun defaultValue(format: String, vararg args: Any?): ParameterSpec.Builder","description":"com.squareup.kotlinpoet.ParameterSpec.Builder.defaultValue","location":"kotlinpoet/com.squareup.kotlinpoet/-parameter-spec/-builder/default-value.html","searchKeys":["defaultValue","fun defaultValue(format: String, vararg args: Any?): ParameterSpec.Builder","com.squareup.kotlinpoet.ParameterSpec.Builder.defaultValue"]},{"name":"fun delegate(codeBlock: CodeBlock): PropertySpec.Builder","description":"com.squareup.kotlinpoet.PropertySpec.Builder.delegate","location":"kotlinpoet/com.squareup.kotlinpoet/-property-spec/-builder/delegate.html","searchKeys":["delegate","fun delegate(codeBlock: CodeBlock): PropertySpec.Builder","com.squareup.kotlinpoet.PropertySpec.Builder.delegate"]},{"name":"fun delegate(format: String, vararg args: Any?): PropertySpec.Builder","description":"com.squareup.kotlinpoet.PropertySpec.Builder.delegate","location":"kotlinpoet/com.squareup.kotlinpoet/-property-spec/-builder/delegate.html","searchKeys":["delegate","fun delegate(format: String, vararg args: Any?): PropertySpec.Builder","com.squareup.kotlinpoet.PropertySpec.Builder.delegate"]},{"name":"fun enclosingClassName(): ClassName?","description":"com.squareup.kotlinpoet.ClassName.enclosingClassName","location":"kotlinpoet/com.squareup.kotlinpoet/-class-name/enclosing-class-name.html","searchKeys":["enclosingClassName","fun enclosingClassName(): ClassName?","com.squareup.kotlinpoet.ClassName.enclosingClassName"]},{"name":"fun endControlFlow(): CodeBlock.Builder","description":"com.squareup.kotlinpoet.CodeBlock.Builder.endControlFlow","location":"kotlinpoet/com.squareup.kotlinpoet/-code-block/-builder/end-control-flow.html","searchKeys":["endControlFlow","fun endControlFlow(): CodeBlock.Builder","com.squareup.kotlinpoet.CodeBlock.Builder.endControlFlow"]},{"name":"fun endControlFlow(): FileSpec.Builder","description":"com.squareup.kotlinpoet.FileSpec.Builder.endControlFlow","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/-builder/end-control-flow.html","searchKeys":["endControlFlow","fun endControlFlow(): FileSpec.Builder","com.squareup.kotlinpoet.FileSpec.Builder.endControlFlow"]},{"name":"fun endControlFlow(): FunSpec.Builder","description":"com.squareup.kotlinpoet.FunSpec.Builder.endControlFlow","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/end-control-flow.html","searchKeys":["endControlFlow","fun endControlFlow(): FunSpec.Builder","com.squareup.kotlinpoet.FunSpec.Builder.endControlFlow"]},{"name":"fun enumBuilder(className: ClassName): TypeSpec.Builder","description":"com.squareup.kotlinpoet.TypeSpec.Companion.enumBuilder","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-companion/enum-builder.html","searchKeys":["enumBuilder","fun enumBuilder(className: ClassName): TypeSpec.Builder","com.squareup.kotlinpoet.TypeSpec.Companion.enumBuilder"]},{"name":"fun enumBuilder(name: String): TypeSpec.Builder","description":"com.squareup.kotlinpoet.TypeSpec.Companion.enumBuilder","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-companion/enum-builder.html","searchKeys":["enumBuilder","fun enumBuilder(name: String): TypeSpec.Builder","com.squareup.kotlinpoet.TypeSpec.Companion.enumBuilder"]},{"name":"fun funInterfaceBuilder(className: ClassName): TypeSpec.Builder","description":"com.squareup.kotlinpoet.TypeSpec.Companion.funInterfaceBuilder","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-companion/fun-interface-builder.html","searchKeys":["funInterfaceBuilder","fun funInterfaceBuilder(className: ClassName): TypeSpec.Builder","com.squareup.kotlinpoet.TypeSpec.Companion.funInterfaceBuilder"]},{"name":"fun funInterfaceBuilder(name: String): TypeSpec.Builder","description":"com.squareup.kotlinpoet.TypeSpec.Companion.funInterfaceBuilder","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-companion/fun-interface-builder.html","searchKeys":["funInterfaceBuilder","fun funInterfaceBuilder(name: String): TypeSpec.Builder","com.squareup.kotlinpoet.TypeSpec.Companion.funInterfaceBuilder"]},{"name":"fun get(annotation: Annotation, includeDefaultValues: Boolean = false): AnnotationSpec","description":"com.squareup.kotlinpoet.AnnotationSpec.Companion.get","location":"kotlinpoet/com.squareup.kotlinpoet/-annotation-spec/-companion/get.html","searchKeys":["get","fun get(annotation: Annotation, includeDefaultValues: Boolean = false): AnnotationSpec","com.squareup.kotlinpoet.AnnotationSpec.Companion.get"]},{"name":"fun get(annotation: AnnotationMirror): AnnotationSpec","description":"com.squareup.kotlinpoet.AnnotationSpec.Companion.get","location":"kotlinpoet/com.squareup.kotlinpoet/-annotation-spec/-companion/get.html","searchKeys":["get","fun get(annotation: AnnotationMirror): AnnotationSpec","com.squareup.kotlinpoet.AnnotationSpec.Companion.get"]},{"name":"fun get(element: VariableElement): ParameterSpec","description":"com.squareup.kotlinpoet.ParameterSpec.Companion.get","location":"kotlinpoet/com.squareup.kotlinpoet/-parameter-spec/-companion/get.html","searchKeys":["get","fun get(element: VariableElement): ParameterSpec","com.squareup.kotlinpoet.ParameterSpec.Companion.get"]},{"name":"fun get(packageName: String, typeSpec: TypeSpec): FileSpec","description":"com.squareup.kotlinpoet.FileSpec.Companion.get","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/-companion/get.html","searchKeys":["get","fun get(packageName: String, typeSpec: TypeSpec): FileSpec","com.squareup.kotlinpoet.FileSpec.Companion.get"]},{"name":"fun get(receiver: TypeName? = null, parameters: List<ParameterSpec> = emptyList(), returnType: TypeName): LambdaTypeName","description":"com.squareup.kotlinpoet.LambdaTypeName.Companion.get","location":"kotlinpoet/com.squareup.kotlinpoet/-lambda-type-name/-companion/get.html","searchKeys":["get","fun get(receiver: TypeName? = null, parameters: List<ParameterSpec> = emptyList(), returnType: TypeName): LambdaTypeName","com.squareup.kotlinpoet.LambdaTypeName.Companion.get"]},{"name":"fun get(receiver: TypeName? = null, parameters: List<ParameterSpec> = emptyList(), returnType: TypeName, contextReceivers: List<TypeName> = emptyList(), contextParameters: List<TypeName> = emptyList()): LambdaTypeName","description":"com.squareup.kotlinpoet.LambdaTypeName.Companion.get","location":"kotlinpoet/com.squareup.kotlinpoet/-lambda-type-name/-companion/get.html","searchKeys":["get","fun get(receiver: TypeName? = null, parameters: List<ParameterSpec> = emptyList(), returnType: TypeName, contextReceivers: List<TypeName> = emptyList(), contextParameters: List<TypeName> = emptyList()): LambdaTypeName","com.squareup.kotlinpoet.LambdaTypeName.Companion.get"]},{"name":"fun get(receiver: TypeName? = null, vararg parameters: ParameterSpec = emptyArray(), returnType: TypeName): LambdaTypeName","description":"com.squareup.kotlinpoet.LambdaTypeName.Companion.get","location":"kotlinpoet/com.squareup.kotlinpoet/-lambda-type-name/-companion/get.html","searchKeys":["get","fun get(receiver: TypeName? = null, vararg parameters: ParameterSpec = emptyArray(), returnType: TypeName): LambdaTypeName","com.squareup.kotlinpoet.LambdaTypeName.Companion.get"]},{"name":"fun get(receiver: TypeName? = null, vararg parameters: TypeName = emptyArray(), returnType: TypeName): LambdaTypeName","description":"com.squareup.kotlinpoet.LambdaTypeName.Companion.get","location":"kotlinpoet/com.squareup.kotlinpoet/-lambda-type-name/-companion/get.html","searchKeys":["get","fun get(receiver: TypeName? = null, vararg parameters: TypeName = emptyArray(), returnType: TypeName): LambdaTypeName","com.squareup.kotlinpoet.LambdaTypeName.Companion.get"]},{"name":"fun getter(getter: FunSpec?): PropertySpec.Builder","description":"com.squareup.kotlinpoet.PropertySpec.Builder.getter","location":"kotlinpoet/com.squareup.kotlinpoet/-property-spec/-builder/getter.html","searchKeys":["getter","fun getter(getter: FunSpec?): PropertySpec.Builder","com.squareup.kotlinpoet.PropertySpec.Builder.getter"]},{"name":"fun getterBuilder(): FunSpec.Builder","description":"com.squareup.kotlinpoet.FunSpec.Companion.getterBuilder","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-companion/getter-builder.html","searchKeys":["getterBuilder","fun getterBuilder(): FunSpec.Builder","com.squareup.kotlinpoet.FunSpec.Companion.getterBuilder"]},{"name":"fun indent(): CodeBlock.Builder","description":"com.squareup.kotlinpoet.CodeBlock.Builder.indent","location":"kotlinpoet/com.squareup.kotlinpoet/-code-block/-builder/indent.html","searchKeys":["indent","fun indent(): CodeBlock.Builder","com.squareup.kotlinpoet.CodeBlock.Builder.indent"]},{"name":"fun indent(indent: String): FileSpec.Builder","description":"com.squareup.kotlinpoet.FileSpec.Builder.indent","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/-builder/indent.html","searchKeys":["indent","fun indent(indent: String): FileSpec.Builder","com.squareup.kotlinpoet.FileSpec.Builder.indent"]},{"name":"fun initializer(codeBlock: CodeBlock?): PropertySpec.Builder","description":"com.squareup.kotlinpoet.PropertySpec.Builder.initializer","location":"kotlinpoet/com.squareup.kotlinpoet/-property-spec/-builder/initializer.html","searchKeys":["initializer","fun initializer(codeBlock: CodeBlock?): PropertySpec.Builder","com.squareup.kotlinpoet.PropertySpec.Builder.initializer"]},{"name":"fun initializer(format: String, vararg args: Any?): PropertySpec.Builder","description":"com.squareup.kotlinpoet.PropertySpec.Builder.initializer","location":"kotlinpoet/com.squareup.kotlinpoet/-property-spec/-builder/initializer.html","searchKeys":["initializer","fun initializer(format: String, vararg args: Any?): PropertySpec.Builder","com.squareup.kotlinpoet.PropertySpec.Builder.initializer"]},{"name":"fun interfaceBuilder(className: ClassName): TypeSpec.Builder","description":"com.squareup.kotlinpoet.TypeSpec.Companion.interfaceBuilder","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-companion/interface-builder.html","searchKeys":["interfaceBuilder","fun interfaceBuilder(className: ClassName): TypeSpec.Builder","com.squareup.kotlinpoet.TypeSpec.Companion.interfaceBuilder"]},{"name":"fun interfaceBuilder(name: String): TypeSpec.Builder","description":"com.squareup.kotlinpoet.TypeSpec.Companion.interfaceBuilder","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-companion/interface-builder.html","searchKeys":["interfaceBuilder","fun interfaceBuilder(name: String): TypeSpec.Builder","com.squareup.kotlinpoet.TypeSpec.Companion.interfaceBuilder"]},{"name":"fun isEmpty(): Boolean","description":"com.squareup.kotlinpoet.CodeBlock.Builder.isEmpty","location":"kotlinpoet/com.squareup.kotlinpoet/-code-block/-builder/is-empty.html","searchKeys":["isEmpty","fun isEmpty(): Boolean","com.squareup.kotlinpoet.CodeBlock.Builder.isEmpty"]},{"name":"fun isEmpty(): Boolean","description":"com.squareup.kotlinpoet.CodeBlock.isEmpty","location":"kotlinpoet/com.squareup.kotlinpoet/-code-block/is-empty.html","searchKeys":["isEmpty","fun isEmpty(): Boolean","com.squareup.kotlinpoet.CodeBlock.isEmpty"]},{"name":"fun isNotEmpty(): Boolean","description":"com.squareup.kotlinpoet.CodeBlock.Builder.isNotEmpty","location":"kotlinpoet/com.squareup.kotlinpoet/-code-block/-builder/is-not-empty.html","searchKeys":["isNotEmpty","fun isNotEmpty(): Boolean","com.squareup.kotlinpoet.CodeBlock.Builder.isNotEmpty"]},{"name":"fun isNotEmpty(): Boolean","description":"com.squareup.kotlinpoet.CodeBlock.isNotEmpty","location":"kotlinpoet/com.squareup.kotlinpoet/-code-block/is-not-empty.html","searchKeys":["isNotEmpty","fun isNotEmpty(): Boolean","com.squareup.kotlinpoet.CodeBlock.isNotEmpty"]},{"name":"fun jvmModifiers(modifiers: Iterable<Modifier>)","description":"com.squareup.kotlinpoet.FunSpec.Builder.jvmModifiers","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/jvm-modifiers.html","searchKeys":["jvmModifiers","fun jvmModifiers(modifiers: Iterable<Modifier>)","com.squareup.kotlinpoet.FunSpec.Builder.jvmModifiers"]},{"name":"fun mutable(mutable: Boolean = true): PropertySpec.Builder","description":"com.squareup.kotlinpoet.PropertySpec.Builder.mutable","location":"kotlinpoet/com.squareup.kotlinpoet/-property-spec/-builder/mutable.html","searchKeys":["mutable","fun mutable(mutable: Boolean = true): PropertySpec.Builder","com.squareup.kotlinpoet.PropertySpec.Builder.mutable"]},{"name":"fun nestedClass(name: String): ClassName","description":"com.squareup.kotlinpoet.ClassName.nestedClass","location":"kotlinpoet/com.squareup.kotlinpoet/-class-name/nested-class.html","searchKeys":["nestedClass","fun nestedClass(name: String): ClassName","com.squareup.kotlinpoet.ClassName.nestedClass"]},{"name":"fun nestedClass(name: String, typeArguments: List<TypeName>): ParameterizedTypeName","description":"com.squareup.kotlinpoet.ParameterizedTypeName.nestedClass","location":"kotlinpoet/com.squareup.kotlinpoet/-parameterized-type-name/nested-class.html","searchKeys":["nestedClass","fun nestedClass(name: String, typeArguments: List<TypeName>): ParameterizedTypeName","com.squareup.kotlinpoet.ParameterizedTypeName.nestedClass"]},{"name":"fun newName(suggestion: String, tag: Any = Random.nextULong().toString(16).padStart(16, '0')): String","description":"com.squareup.kotlinpoet.NameAllocator.newName","location":"kotlinpoet/com.squareup.kotlinpoet/-name-allocator/new-name.html","searchKeys":["newName","fun newName(suggestion: String, tag: Any = Random.nextULong().toString(16).padStart(16, '0')): String","com.squareup.kotlinpoet.NameAllocator.newName"]},{"name":"fun nextControlFlow(controlFlow: String, vararg args: Any): FileSpec.Builder","description":"com.squareup.kotlinpoet.FileSpec.Builder.nextControlFlow","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/-builder/next-control-flow.html","searchKeys":["nextControlFlow","fun nextControlFlow(controlFlow: String, vararg args: Any): FileSpec.Builder","com.squareup.kotlinpoet.FileSpec.Builder.nextControlFlow"]},{"name":"fun nextControlFlow(controlFlow: String, vararg args: Any): FunSpec.Builder","description":"com.squareup.kotlinpoet.FunSpec.Builder.nextControlFlow","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/next-control-flow.html","searchKeys":["nextControlFlow","fun nextControlFlow(controlFlow: String, vararg args: Any): FunSpec.Builder","com.squareup.kotlinpoet.FunSpec.Builder.nextControlFlow"]},{"name":"fun nextControlFlow(controlFlow: String, vararg args: Any?): CodeBlock.Builder","description":"com.squareup.kotlinpoet.CodeBlock.Builder.nextControlFlow","location":"kotlinpoet/com.squareup.kotlinpoet/-code-block/-builder/next-control-flow.html","searchKeys":["nextControlFlow","fun nextControlFlow(controlFlow: String, vararg args: Any?): CodeBlock.Builder","com.squareup.kotlinpoet.CodeBlock.Builder.nextControlFlow"]},{"name":"fun objectBuilder(className: ClassName): TypeSpec.Builder","description":"com.squareup.kotlinpoet.TypeSpec.Companion.objectBuilder","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-companion/object-builder.html","searchKeys":["objectBuilder","fun objectBuilder(className: ClassName): TypeSpec.Builder","com.squareup.kotlinpoet.TypeSpec.Companion.objectBuilder"]},{"name":"fun objectBuilder(name: String): TypeSpec.Builder","description":"com.squareup.kotlinpoet.TypeSpec.Companion.objectBuilder","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-companion/object-builder.html","searchKeys":["objectBuilder","fun objectBuilder(name: String): TypeSpec.Builder","com.squareup.kotlinpoet.TypeSpec.Companion.objectBuilder"]},{"name":"fun of(format: String, vararg args: Any?): CodeBlock","description":"com.squareup.kotlinpoet.CodeBlock.Companion.of","location":"kotlinpoet/com.squareup.kotlinpoet/-code-block/-companion/of.html","searchKeys":["of","fun of(format: String, vararg args: Any?): CodeBlock","com.squareup.kotlinpoet.CodeBlock.Companion.of"]},{"name":"fun overriding(method: ExecutableElement): FunSpec.Builder","description":"com.squareup.kotlinpoet.FunSpec.Companion.overriding","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-companion/overriding.html","searchKeys":["overriding","fun overriding(method: ExecutableElement): FunSpec.Builder","com.squareup.kotlinpoet.FunSpec.Companion.overriding"]},{"name":"fun parametersOf(method: ExecutableElement): List<ParameterSpec>","description":"com.squareup.kotlinpoet.ParameterSpec.Companion.parametersOf","location":"kotlinpoet/com.squareup.kotlinpoet/-parameter-spec/-companion/parameters-of.html","searchKeys":["parametersOf","fun parametersOf(method: ExecutableElement): List<ParameterSpec>","com.squareup.kotlinpoet.ParameterSpec.Companion.parametersOf"]},{"name":"fun peerClass(name: String): ClassName","description":"com.squareup.kotlinpoet.ClassName.peerClass","location":"kotlinpoet/com.squareup.kotlinpoet/-class-name/peer-class.html","searchKeys":["peerClass","fun peerClass(name: String): ClassName","com.squareup.kotlinpoet.ClassName.peerClass"]},{"name":"fun plusParameter(typeArgument: Class<*>): ParameterizedTypeName","description":"com.squareup.kotlinpoet.ParameterizedTypeName.plusParameter","location":"kotlinpoet/com.squareup.kotlinpoet/-parameterized-type-name/plus-parameter.html","searchKeys":["plusParameter","fun plusParameter(typeArgument: Class<*>): ParameterizedTypeName","com.squareup.kotlinpoet.ParameterizedTypeName.plusParameter"]},{"name":"fun plusParameter(typeArgument: KClass<*>): ParameterizedTypeName","description":"com.squareup.kotlinpoet.ParameterizedTypeName.plusParameter","location":"kotlinpoet/com.squareup.kotlinpoet/-parameterized-type-name/plus-parameter.html","searchKeys":["plusParameter","fun plusParameter(typeArgument: KClass<*>): ParameterizedTypeName","com.squareup.kotlinpoet.ParameterizedTypeName.plusParameter"]},{"name":"fun plusParameter(typeArgument: TypeName): ParameterizedTypeName","description":"com.squareup.kotlinpoet.ParameterizedTypeName.plusParameter","location":"kotlinpoet/com.squareup.kotlinpoet/-parameterized-type-name/plus-parameter.html","searchKeys":["plusParameter","fun plusParameter(typeArgument: TypeName): ParameterizedTypeName","com.squareup.kotlinpoet.ParameterizedTypeName.plusParameter"]},{"name":"fun primaryConstructor(primaryConstructor: FunSpec?): TypeSpec.Builder","description":"com.squareup.kotlinpoet.TypeSpec.Builder.primaryConstructor","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-builder/primary-constructor.html","searchKeys":["primaryConstructor","fun primaryConstructor(primaryConstructor: FunSpec?): TypeSpec.Builder","com.squareup.kotlinpoet.TypeSpec.Builder.primaryConstructor"]},{"name":"fun producerOf(outType: KClass<*>): WildcardTypeName","description":"com.squareup.kotlinpoet.WildcardTypeName.Companion.producerOf","location":"kotlinpoet/com.squareup.kotlinpoet/-wildcard-type-name/-companion/producer-of.html","searchKeys":["producerOf","fun producerOf(outType: KClass<*>): WildcardTypeName","com.squareup.kotlinpoet.WildcardTypeName.Companion.producerOf"]},{"name":"fun producerOf(outType: Type): WildcardTypeName","description":"com.squareup.kotlinpoet.WildcardTypeName.Companion.producerOf","location":"kotlinpoet/com.squareup.kotlinpoet/-wildcard-type-name/-companion/producer-of.html","searchKeys":["producerOf","fun producerOf(outType: Type): WildcardTypeName","com.squareup.kotlinpoet.WildcardTypeName.Companion.producerOf"]},{"name":"fun producerOf(outType: TypeName): WildcardTypeName","description":"com.squareup.kotlinpoet.WildcardTypeName.Companion.producerOf","location":"kotlinpoet/com.squareup.kotlinpoet/-wildcard-type-name/-companion/producer-of.html","searchKeys":["producerOf","fun producerOf(outType: TypeName): WildcardTypeName","com.squareup.kotlinpoet.WildcardTypeName.Companion.producerOf"]},{"name":"fun receiver(receiverType: KClass<*>): PropertySpec.Builder","description":"com.squareup.kotlinpoet.PropertySpec.Builder.receiver","location":"kotlinpoet/com.squareup.kotlinpoet/-property-spec/-builder/receiver.html","searchKeys":["receiver","fun receiver(receiverType: KClass<*>): PropertySpec.Builder","com.squareup.kotlinpoet.PropertySpec.Builder.receiver"]},{"name":"fun receiver(receiverType: KClass<*>, kdoc: CodeBlock = CodeBlock.EMPTY): FunSpec.Builder","description":"com.squareup.kotlinpoet.FunSpec.Builder.receiver","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/receiver.html","searchKeys":["receiver","fun receiver(receiverType: KClass<*>, kdoc: CodeBlock = CodeBlock.EMPTY): FunSpec.Builder","com.squareup.kotlinpoet.FunSpec.Builder.receiver"]},{"name":"fun receiver(receiverType: KClass<*>, kdoc: String, vararg args: Any): FunSpec.Builder","description":"com.squareup.kotlinpoet.FunSpec.Builder.receiver","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/receiver.html","searchKeys":["receiver","fun receiver(receiverType: KClass<*>, kdoc: String, vararg args: Any): FunSpec.Builder","com.squareup.kotlinpoet.FunSpec.Builder.receiver"]},{"name":"fun receiver(receiverType: Type): PropertySpec.Builder","description":"com.squareup.kotlinpoet.PropertySpec.Builder.receiver","location":"kotlinpoet/com.squareup.kotlinpoet/-property-spec/-builder/receiver.html","searchKeys":["receiver","fun receiver(receiverType: Type): PropertySpec.Builder","com.squareup.kotlinpoet.PropertySpec.Builder.receiver"]},{"name":"fun receiver(receiverType: Type, kdoc: CodeBlock = CodeBlock.EMPTY): FunSpec.Builder","description":"com.squareup.kotlinpoet.FunSpec.Builder.receiver","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/receiver.html","searchKeys":["receiver","fun receiver(receiverType: Type, kdoc: CodeBlock = CodeBlock.EMPTY): FunSpec.Builder","com.squareup.kotlinpoet.FunSpec.Builder.receiver"]},{"name":"fun receiver(receiverType: Type, kdoc: String, vararg args: Any): FunSpec.Builder","description":"com.squareup.kotlinpoet.FunSpec.Builder.receiver","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/receiver.html","searchKeys":["receiver","fun receiver(receiverType: Type, kdoc: String, vararg args: Any): FunSpec.Builder","com.squareup.kotlinpoet.FunSpec.Builder.receiver"]},{"name":"fun receiver(receiverType: TypeName, kdoc: CodeBlock = CodeBlock.EMPTY): FunSpec.Builder","description":"com.squareup.kotlinpoet.FunSpec.Builder.receiver","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/receiver.html","searchKeys":["receiver","fun receiver(receiverType: TypeName, kdoc: CodeBlock = CodeBlock.EMPTY): FunSpec.Builder","com.squareup.kotlinpoet.FunSpec.Builder.receiver"]},{"name":"fun receiver(receiverType: TypeName?): PropertySpec.Builder","description":"com.squareup.kotlinpoet.PropertySpec.Builder.receiver","location":"kotlinpoet/com.squareup.kotlinpoet/-property-spec/-builder/receiver.html","searchKeys":["receiver","fun receiver(receiverType: TypeName?): PropertySpec.Builder","com.squareup.kotlinpoet.PropertySpec.Builder.receiver"]},{"name":"fun reference(): CodeBlock","description":"com.squareup.kotlinpoet.MemberName.reference","location":"kotlinpoet/com.squareup.kotlinpoet/-member-name/reference.html","searchKeys":["reference","fun reference(): CodeBlock","com.squareup.kotlinpoet.MemberName.reference"]},{"name":"fun reflectionName(): String","description":"com.squareup.kotlinpoet.ClassName.reflectionName","location":"kotlinpoet/com.squareup.kotlinpoet/-class-name/reflection-name.html","searchKeys":["reflectionName","fun reflectionName(): String","com.squareup.kotlinpoet.ClassName.reflectionName"]},{"name":"fun returns(returnType: KClass<*>, kdoc: CodeBlock = CodeBlock.EMPTY): FunSpec.Builder","description":"com.squareup.kotlinpoet.FunSpec.Builder.returns","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/returns.html","searchKeys":["returns","fun returns(returnType: KClass<*>, kdoc: CodeBlock = CodeBlock.EMPTY): FunSpec.Builder","com.squareup.kotlinpoet.FunSpec.Builder.returns"]},{"name":"fun returns(returnType: KClass<*>, kdoc: String, vararg args: Any): FunSpec.Builder","description":"com.squareup.kotlinpoet.FunSpec.Builder.returns","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/returns.html","searchKeys":["returns","fun returns(returnType: KClass<*>, kdoc: String, vararg args: Any): FunSpec.Builder","com.squareup.kotlinpoet.FunSpec.Builder.returns"]},{"name":"fun returns(returnType: Type, kdoc: CodeBlock = CodeBlock.EMPTY): FunSpec.Builder","description":"com.squareup.kotlinpoet.FunSpec.Builder.returns","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/returns.html","searchKeys":["returns","fun returns(returnType: Type, kdoc: CodeBlock = CodeBlock.EMPTY): FunSpec.Builder","com.squareup.kotlinpoet.FunSpec.Builder.returns"]},{"name":"fun returns(returnType: Type, kdoc: String, vararg args: Any): FunSpec.Builder","description":"com.squareup.kotlinpoet.FunSpec.Builder.returns","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/returns.html","searchKeys":["returns","fun returns(returnType: Type, kdoc: String, vararg args: Any): FunSpec.Builder","com.squareup.kotlinpoet.FunSpec.Builder.returns"]},{"name":"fun returns(returnType: TypeName, kdoc: CodeBlock = CodeBlock.EMPTY): FunSpec.Builder","description":"com.squareup.kotlinpoet.FunSpec.Builder.returns","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/returns.html","searchKeys":["returns","fun returns(returnType: TypeName, kdoc: CodeBlock = CodeBlock.EMPTY): FunSpec.Builder","com.squareup.kotlinpoet.FunSpec.Builder.returns"]},{"name":"fun scriptBuilder(fileName: String, packageName: String = \"\"): FileSpec.Builder","description":"com.squareup.kotlinpoet.FileSpec.Companion.scriptBuilder","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/-companion/script-builder.html","searchKeys":["scriptBuilder","fun scriptBuilder(fileName: String, packageName: String = \"\"): FileSpec.Builder","com.squareup.kotlinpoet.FileSpec.Companion.scriptBuilder"]},{"name":"fun setter(setter: FunSpec?): PropertySpec.Builder","description":"com.squareup.kotlinpoet.PropertySpec.Builder.setter","location":"kotlinpoet/com.squareup.kotlinpoet/-property-spec/-builder/setter.html","searchKeys":["setter","fun setter(setter: FunSpec?): PropertySpec.Builder","com.squareup.kotlinpoet.PropertySpec.Builder.setter"]},{"name":"fun setterBuilder(): FunSpec.Builder","description":"com.squareup.kotlinpoet.FunSpec.Companion.setterBuilder","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-companion/setter-builder.html","searchKeys":["setterBuilder","fun setterBuilder(): FunSpec.Builder","com.squareup.kotlinpoet.FunSpec.Companion.setterBuilder"]},{"name":"fun superclass(superclass: KClass<*>): TypeSpec.Builder","description":"com.squareup.kotlinpoet.TypeSpec.Builder.superclass","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-builder/superclass.html","searchKeys":["superclass","fun superclass(superclass: KClass<*>): TypeSpec.Builder","com.squareup.kotlinpoet.TypeSpec.Builder.superclass"]},{"name":"fun superclass(superclass: Type): TypeSpec.Builder","description":"com.squareup.kotlinpoet.TypeSpec.Builder.superclass","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-builder/superclass.html","searchKeys":["superclass","fun superclass(superclass: Type): TypeSpec.Builder","com.squareup.kotlinpoet.TypeSpec.Builder.superclass"]},{"name":"fun superclass(superclass: TypeName): TypeSpec.Builder","description":"com.squareup.kotlinpoet.TypeSpec.Builder.superclass","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-builder/superclass.html","searchKeys":["superclass","fun superclass(superclass: TypeName): TypeSpec.Builder","com.squareup.kotlinpoet.TypeSpec.Builder.superclass"]},{"name":"fun toBuilder(): AnnotationSpec.Builder","description":"com.squareup.kotlinpoet.AnnotationSpec.toBuilder","location":"kotlinpoet/com.squareup.kotlinpoet/-annotation-spec/to-builder.html","searchKeys":["toBuilder","fun toBuilder(): AnnotationSpec.Builder","com.squareup.kotlinpoet.AnnotationSpec.toBuilder"]},{"name":"fun toBuilder(): CodeBlock.Builder","description":"com.squareup.kotlinpoet.CodeBlock.toBuilder","location":"kotlinpoet/com.squareup.kotlinpoet/-code-block/to-builder.html","searchKeys":["toBuilder","fun toBuilder(): CodeBlock.Builder","com.squareup.kotlinpoet.CodeBlock.toBuilder"]},{"name":"fun toBuilder(kind: TypeSpec.Kind = this.kind, name: String? = this.name): TypeSpec.Builder","description":"com.squareup.kotlinpoet.TypeSpec.toBuilder","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/to-builder.html","searchKeys":["toBuilder","fun toBuilder(kind: TypeSpec.Kind = this.kind, name: String? = this.name): TypeSpec.Builder","com.squareup.kotlinpoet.TypeSpec.toBuilder"]},{"name":"fun toBuilder(name: String = this.name): FunSpec.Builder","description":"com.squareup.kotlinpoet.FunSpec.toBuilder","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/to-builder.html","searchKeys":["toBuilder","fun toBuilder(name: String = this.name): FunSpec.Builder","com.squareup.kotlinpoet.FunSpec.toBuilder"]},{"name":"fun toBuilder(name: String = this.name, type: TypeName = this.type): ParameterSpec.Builder","description":"com.squareup.kotlinpoet.ParameterSpec.toBuilder","location":"kotlinpoet/com.squareup.kotlinpoet/-parameter-spec/to-builder.html","searchKeys":["toBuilder","fun toBuilder(name: String = this.name, type: TypeName = this.type): ParameterSpec.Builder","com.squareup.kotlinpoet.ParameterSpec.toBuilder"]},{"name":"fun toBuilder(name: String = this.name, type: TypeName = this.type): PropertySpec.Builder","description":"com.squareup.kotlinpoet.PropertySpec.toBuilder","location":"kotlinpoet/com.squareup.kotlinpoet/-property-spec/to-builder.html","searchKeys":["toBuilder","fun toBuilder(name: String = this.name, type: TypeName = this.type): PropertySpec.Builder","com.squareup.kotlinpoet.PropertySpec.toBuilder"]},{"name":"fun toBuilder(name: String = this.name, type: TypeName = this.type): TypeAliasSpec.Builder","description":"com.squareup.kotlinpoet.TypeAliasSpec.toBuilder","location":"kotlinpoet/com.squareup.kotlinpoet/-type-alias-spec/to-builder.html","searchKeys":["toBuilder","fun toBuilder(name: String = this.name, type: TypeName = this.type): TypeAliasSpec.Builder","com.squareup.kotlinpoet.TypeAliasSpec.toBuilder"]},{"name":"fun toBuilder(packageName: String = this.packageName, name: String = this.name): FileSpec.Builder","description":"com.squareup.kotlinpoet.FileSpec.toBuilder","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/to-builder.html","searchKeys":["toBuilder","fun toBuilder(packageName: String = this.packageName, name: String = this.name): FileSpec.Builder","com.squareup.kotlinpoet.FileSpec.toBuilder"]},{"name":"fun toJavaFileObject(): JavaFileObject","description":"com.squareup.kotlinpoet.FileSpec.toJavaFileObject","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/to-java-file-object.html","searchKeys":["toJavaFileObject","fun toJavaFileObject(): JavaFileObject","com.squareup.kotlinpoet.FileSpec.toJavaFileObject"]},{"name":"fun topLevelClassName(): ClassName","description":"com.squareup.kotlinpoet.ClassName.topLevelClassName","location":"kotlinpoet/com.squareup.kotlinpoet/-class-name/top-level-class-name.html","searchKeys":["topLevelClassName","fun topLevelClassName(): ClassName","com.squareup.kotlinpoet.ClassName.topLevelClassName"]},{"name":"fun unindent(): CodeBlock.Builder","description":"com.squareup.kotlinpoet.CodeBlock.Builder.unindent","location":"kotlinpoet/com.squareup.kotlinpoet/-code-block/-builder/unindent.html","searchKeys":["unindent","fun unindent(): CodeBlock.Builder","com.squareup.kotlinpoet.CodeBlock.Builder.unindent"]},{"name":"fun unnamed(type: KClass<*>): ParameterSpec","description":"com.squareup.kotlinpoet.ParameterSpec.Companion.unnamed","location":"kotlinpoet/com.squareup.kotlinpoet/-parameter-spec/-companion/unnamed.html","searchKeys":["unnamed","fun unnamed(type: KClass<*>): ParameterSpec","com.squareup.kotlinpoet.ParameterSpec.Companion.unnamed"]},{"name":"fun unnamed(type: Type): ParameterSpec","description":"com.squareup.kotlinpoet.ParameterSpec.Companion.unnamed","location":"kotlinpoet/com.squareup.kotlinpoet/-parameter-spec/-companion/unnamed.html","searchKeys":["unnamed","fun unnamed(type: Type): ParameterSpec","com.squareup.kotlinpoet.ParameterSpec.Companion.unnamed"]},{"name":"fun unnamed(type: TypeName): ParameterSpec","description":"com.squareup.kotlinpoet.ParameterSpec.Companion.unnamed","location":"kotlinpoet/com.squareup.kotlinpoet/-parameter-spec/-companion/unnamed.html","searchKeys":["unnamed","fun unnamed(type: TypeName): ParameterSpec","com.squareup.kotlinpoet.ParameterSpec.Companion.unnamed"]},{"name":"fun useSiteTarget(useSiteTarget: AnnotationSpec.UseSiteTarget?): AnnotationSpec.Builder","description":"com.squareup.kotlinpoet.AnnotationSpec.Builder.useSiteTarget","location":"kotlinpoet/com.squareup.kotlinpoet/-annotation-spec/-builder/use-site-target.html","searchKeys":["useSiteTarget","fun useSiteTarget(useSiteTarget: AnnotationSpec.UseSiteTarget?): AnnotationSpec.Builder","com.squareup.kotlinpoet.AnnotationSpec.Builder.useSiteTarget"]},{"name":"fun valueOf(value: String): AnnotationSpec.UseSiteTarget","description":"com.squareup.kotlinpoet.AnnotationSpec.UseSiteTarget.valueOf","location":"kotlinpoet/com.squareup.kotlinpoet/-annotation-spec/-use-site-target/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): AnnotationSpec.UseSiteTarget","com.squareup.kotlinpoet.AnnotationSpec.UseSiteTarget.valueOf"]},{"name":"fun valueOf(value: String): KModifier","description":"com.squareup.kotlinpoet.KModifier.valueOf","location":"kotlinpoet/com.squareup.kotlinpoet/-k-modifier/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): KModifier","com.squareup.kotlinpoet.KModifier.valueOf"]},{"name":"fun valueOf(value: String): KOperator","description":"com.squareup.kotlinpoet.KOperator.valueOf","location":"kotlinpoet/com.squareup.kotlinpoet/-k-operator/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): KOperator","com.squareup.kotlinpoet.KOperator.valueOf"]},{"name":"fun valueOf(value: String): TypeSpec.Kind","description":"com.squareup.kotlinpoet.TypeSpec.Kind.valueOf","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-kind/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): TypeSpec.Kind","com.squareup.kotlinpoet.TypeSpec.Kind.valueOf"]},{"name":"fun values(): Array<AnnotationSpec.UseSiteTarget>","description":"com.squareup.kotlinpoet.AnnotationSpec.UseSiteTarget.values","location":"kotlinpoet/com.squareup.kotlinpoet/-annotation-spec/-use-site-target/values.html","searchKeys":["values","fun values(): Array<AnnotationSpec.UseSiteTarget>","com.squareup.kotlinpoet.AnnotationSpec.UseSiteTarget.values"]},{"name":"fun values(): Array<KModifier>","description":"com.squareup.kotlinpoet.KModifier.values","location":"kotlinpoet/com.squareup.kotlinpoet/-k-modifier/values.html","searchKeys":["values","fun values(): Array<KModifier>","com.squareup.kotlinpoet.KModifier.values"]},{"name":"fun values(): Array<KOperator>","description":"com.squareup.kotlinpoet.KOperator.values","location":"kotlinpoet/com.squareup.kotlinpoet/-k-operator/values.html","searchKeys":["values","fun values(): Array<KOperator>","com.squareup.kotlinpoet.KOperator.values"]},{"name":"fun values(): Array<TypeSpec.Kind>","description":"com.squareup.kotlinpoet.TypeSpec.Kind.values","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-kind/values.html","searchKeys":["values","fun values(): Array<TypeSpec.Kind>","com.squareup.kotlinpoet.TypeSpec.Kind.values"]},{"name":"fun writeTo(directory: File): File","description":"com.squareup.kotlinpoet.FileSpec.writeTo","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/write-to.html","searchKeys":["writeTo","fun writeTo(directory: File): File","com.squareup.kotlinpoet.FileSpec.writeTo"]},{"name":"fun writeTo(directory: Path): Path","description":"com.squareup.kotlinpoet.FileSpec.writeTo","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/write-to.html","searchKeys":["writeTo","fun writeTo(directory: Path): Path","com.squareup.kotlinpoet.FileSpec.writeTo"]},{"name":"fun writeTo(filer: Filer)","description":"com.squareup.kotlinpoet.FileSpec.writeTo","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/write-to.html","searchKeys":["writeTo","fun writeTo(filer: Filer)","com.squareup.kotlinpoet.FileSpec.writeTo"]},{"name":"fun writeTo(out: Appendable)","description":"com.squareup.kotlinpoet.FileSpec.writeTo","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/write-to.html","searchKeys":["writeTo","fun writeTo(out: Appendable)","com.squareup.kotlinpoet.FileSpec.writeTo"]},{"name":"inline fun <T : Any> AnnotationSpec.Builder.tag(tag: T?): AnnotationSpec.Builder","description":"com.squareup.kotlinpoet.tag","location":"kotlinpoet/com.squareup.kotlinpoet/tag.html","searchKeys":["tag","inline fun <T : Any> AnnotationSpec.Builder.tag(tag: T?): AnnotationSpec.Builder","com.squareup.kotlinpoet.tag"]},{"name":"inline fun <T : Any> FileSpec.Builder.tag(tag: T?): FileSpec.Builder","description":"com.squareup.kotlinpoet.tag","location":"kotlinpoet/com.squareup.kotlinpoet/tag.html","searchKeys":["tag","inline fun <T : Any> FileSpec.Builder.tag(tag: T?): FileSpec.Builder","com.squareup.kotlinpoet.tag"]},{"name":"inline fun <T : Any> FunSpec.Builder.tag(tag: T?): FunSpec.Builder","description":"com.squareup.kotlinpoet.tag","location":"kotlinpoet/com.squareup.kotlinpoet/tag.html","searchKeys":["tag","inline fun <T : Any> FunSpec.Builder.tag(tag: T?): FunSpec.Builder","com.squareup.kotlinpoet.tag"]},{"name":"inline fun <T : Any> ParameterSpec.Builder.tag(tag: T?): ParameterSpec.Builder","description":"com.squareup.kotlinpoet.tag","location":"kotlinpoet/com.squareup.kotlinpoet/tag.html","searchKeys":["tag","inline fun <T : Any> ParameterSpec.Builder.tag(tag: T?): ParameterSpec.Builder","com.squareup.kotlinpoet.tag"]},{"name":"inline fun <T : Any> PropertySpec.Builder.tag(tag: T?): PropertySpec.Builder","description":"com.squareup.kotlinpoet.tag","location":"kotlinpoet/com.squareup.kotlinpoet/tag.html","searchKeys":["tag","inline fun <T : Any> PropertySpec.Builder.tag(tag: T?): PropertySpec.Builder","com.squareup.kotlinpoet.tag"]},{"name":"inline fun <T : Any> Taggable.tag(): T?","description":"com.squareup.kotlinpoet.tag","location":"kotlinpoet/com.squareup.kotlinpoet/tag.html","searchKeys":["tag","inline fun <T : Any> Taggable.tag(): T?","com.squareup.kotlinpoet.tag"]},{"name":"inline fun <T : Any> TypeAliasSpec.Builder.tag(tag: T?): TypeAliasSpec.Builder","description":"com.squareup.kotlinpoet.tag","location":"kotlinpoet/com.squareup.kotlinpoet/tag.html","searchKeys":["tag","inline fun <T : Any> TypeAliasSpec.Builder.tag(tag: T?): TypeAliasSpec.Builder","com.squareup.kotlinpoet.tag"]},{"name":"inline fun <T : Any> TypeSpec.Builder.tag(tag: T?): TypeSpec.Builder","description":"com.squareup.kotlinpoet.tag","location":"kotlinpoet/com.squareup.kotlinpoet/tag.html","searchKeys":["tag","inline fun <T : Any> TypeSpec.Builder.tag(tag: T?): TypeSpec.Builder","com.squareup.kotlinpoet.tag"]},{"name":"inline fun <T> typeNameOf(): TypeName","description":"com.squareup.kotlinpoet.typeNameOf","location":"kotlinpoet/com.squareup.kotlinpoet/type-name-of.html","searchKeys":["typeNameOf","inline fun <T> typeNameOf(): TypeName","com.squareup.kotlinpoet.typeNameOf"]},{"name":"inline fun ClassName.member(simpleName: String): MemberName","description":"com.squareup.kotlinpoet.MemberName.Companion.member","location":"kotlinpoet/com.squareup.kotlinpoet/-member-name/-companion/member.html","searchKeys":["member","inline fun ClassName.member(simpleName: String): MemberName","com.squareup.kotlinpoet.MemberName.Companion.member"]},{"name":"inline fun CodeBlock.Builder.withIndent(builderAction: CodeBlock.Builder.() -> Unit): CodeBlock.Builder","description":"com.squareup.kotlinpoet.withIndent","location":"kotlinpoet/com.squareup.kotlinpoet/with-indent.html","searchKeys":["withIndent","inline fun CodeBlock.Builder.withIndent(builderAction: CodeBlock.Builder.() -> Unit): CodeBlock.Builder","com.squareup.kotlinpoet.withIndent"]},{"name":"inline fun buildCodeBlock(builderAction: CodeBlock.Builder.() -> Unit): CodeBlock","description":"com.squareup.kotlinpoet.buildCodeBlock","location":"kotlinpoet/com.squareup.kotlinpoet/build-code-block.html","searchKeys":["buildCodeBlock","inline fun buildCodeBlock(builderAction: CodeBlock.Builder.() -> Unit): CodeBlock","com.squareup.kotlinpoet.buildCodeBlock"]},{"name":"interface Annotatable","description":"com.squareup.kotlinpoet.Annotatable","location":"kotlinpoet/com.squareup.kotlinpoet/-annotatable/index.html","searchKeys":["Annotatable","interface Annotatable","com.squareup.kotlinpoet.Annotatable"]},{"name":"interface Builder<out T : Annotatable.Builder<T>>","description":"com.squareup.kotlinpoet.Annotatable.Builder","location":"kotlinpoet/com.squareup.kotlinpoet/-annotatable/-builder/index.html","searchKeys":["Builder","interface Builder<out T : Annotatable.Builder<T>>","com.squareup.kotlinpoet.Annotatable.Builder"]},{"name":"interface Builder<out T : ContextParameterizable.Builder<T>>","description":"com.squareup.kotlinpoet.ContextParameterizable.Builder","location":"kotlinpoet/com.squareup.kotlinpoet/-context-parameterizable/-builder/index.html","searchKeys":["Builder","interface Builder<out T : ContextParameterizable.Builder<T>>","com.squareup.kotlinpoet.ContextParameterizable.Builder"]},{"name":"interface Builder<out T : ContextReceivable.Builder<T>>","description":"com.squareup.kotlinpoet.ContextReceivable.Builder","location":"kotlinpoet/com.squareup.kotlinpoet/-context-receivable/-builder/index.html","searchKeys":["Builder","interface Builder<out T : ContextReceivable.Builder<T>>","com.squareup.kotlinpoet.ContextReceivable.Builder"]},{"name":"interface Builder<out T : Documentable.Builder<T>>","description":"com.squareup.kotlinpoet.Documentable.Builder","location":"kotlinpoet/com.squareup.kotlinpoet/-documentable/-builder/index.html","searchKeys":["Builder","interface Builder<out T : Documentable.Builder<T>>","com.squareup.kotlinpoet.Documentable.Builder"]},{"name":"interface Builder<out T : MemberSpecHolder.Builder<T>>","description":"com.squareup.kotlinpoet.MemberSpecHolder.Builder","location":"kotlinpoet/com.squareup.kotlinpoet/-member-spec-holder/-builder/index.html","searchKeys":["Builder","interface Builder<out T : MemberSpecHolder.Builder<T>>","com.squareup.kotlinpoet.MemberSpecHolder.Builder"]},{"name":"interface Builder<out T : OriginatingElementsHolder.Builder<T>>","description":"com.squareup.kotlinpoet.OriginatingElementsHolder.Builder","location":"kotlinpoet/com.squareup.kotlinpoet/-originating-elements-holder/-builder/index.html","searchKeys":["Builder","interface Builder<out T : OriginatingElementsHolder.Builder<T>>","com.squareup.kotlinpoet.OriginatingElementsHolder.Builder"]},{"name":"interface Builder<out T : Taggable.Builder<T>>","description":"com.squareup.kotlinpoet.Taggable.Builder","location":"kotlinpoet/com.squareup.kotlinpoet/-taggable/-builder/index.html","searchKeys":["Builder","interface Builder<out T : Taggable.Builder<T>>","com.squareup.kotlinpoet.Taggable.Builder"]},{"name":"interface Builder<out T : TypeSpecHolder.Builder<T>>","description":"com.squareup.kotlinpoet.TypeSpecHolder.Builder","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec-holder/-builder/index.html","searchKeys":["Builder","interface Builder<out T : TypeSpecHolder.Builder<T>>","com.squareup.kotlinpoet.TypeSpecHolder.Builder"]},{"name":"interface ContextParameterizable","description":"com.squareup.kotlinpoet.ContextParameterizable","location":"kotlinpoet/com.squareup.kotlinpoet/-context-parameterizable/index.html","searchKeys":["ContextParameterizable","interface ContextParameterizable","com.squareup.kotlinpoet.ContextParameterizable"]},{"name":"interface ContextReceivable","description":"com.squareup.kotlinpoet.ContextReceivable","location":"kotlinpoet/com.squareup.kotlinpoet/-context-receivable/index.html","searchKeys":["ContextReceivable","interface ContextReceivable","com.squareup.kotlinpoet.ContextReceivable"]},{"name":"interface Documentable","description":"com.squareup.kotlinpoet.Documentable","location":"kotlinpoet/com.squareup.kotlinpoet/-documentable/index.html","searchKeys":["Documentable","interface Documentable","com.squareup.kotlinpoet.Documentable"]},{"name":"interface MemberSpecHolder","description":"com.squareup.kotlinpoet.MemberSpecHolder","location":"kotlinpoet/com.squareup.kotlinpoet/-member-spec-holder/index.html","searchKeys":["MemberSpecHolder","interface MemberSpecHolder","com.squareup.kotlinpoet.MemberSpecHolder"]},{"name":"interface OriginatingElementsHolder","description":"com.squareup.kotlinpoet.OriginatingElementsHolder","location":"kotlinpoet/com.squareup.kotlinpoet/-originating-elements-holder/index.html","searchKeys":["OriginatingElementsHolder","interface OriginatingElementsHolder","com.squareup.kotlinpoet.OriginatingElementsHolder"]},{"name":"interface Taggable","description":"com.squareup.kotlinpoet.Taggable","location":"kotlinpoet/com.squareup.kotlinpoet/-taggable/index.html","searchKeys":["Taggable","interface Taggable","com.squareup.kotlinpoet.Taggable"]},{"name":"interface TypeSpecHolder","description":"com.squareup.kotlinpoet.TypeSpecHolder","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec-holder/index.html","searchKeys":["TypeSpecHolder","interface TypeSpecHolder","com.squareup.kotlinpoet.TypeSpecHolder"]},{"name":"object Companion","description":"com.squareup.kotlinpoet.AnnotationSpec.Builder.Companion","location":"kotlinpoet/com.squareup.kotlinpoet/-annotation-spec/-builder/-companion/index.html","searchKeys":["Companion","object Companion","com.squareup.kotlinpoet.AnnotationSpec.Builder.Companion"]},{"name":"object Companion","description":"com.squareup.kotlinpoet.AnnotationSpec.Companion","location":"kotlinpoet/com.squareup.kotlinpoet/-annotation-spec/-companion/index.html","searchKeys":["Companion","object Companion","com.squareup.kotlinpoet.AnnotationSpec.Companion"]},{"name":"object Companion","description":"com.squareup.kotlinpoet.ClassName.Companion","location":"kotlinpoet/com.squareup.kotlinpoet/-class-name/-companion/index.html","searchKeys":["Companion","object Companion","com.squareup.kotlinpoet.ClassName.Companion"]},{"name":"object Companion","description":"com.squareup.kotlinpoet.CodeBlock.Companion","location":"kotlinpoet/com.squareup.kotlinpoet/-code-block/-companion/index.html","searchKeys":["Companion","object Companion","com.squareup.kotlinpoet.CodeBlock.Companion"]},{"name":"object Companion","description":"com.squareup.kotlinpoet.FileSpec.Companion","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/-companion/index.html","searchKeys":["Companion","object Companion","com.squareup.kotlinpoet.FileSpec.Companion"]},{"name":"object Companion","description":"com.squareup.kotlinpoet.FunSpec.Companion","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-companion/index.html","searchKeys":["Companion","object Companion","com.squareup.kotlinpoet.FunSpec.Companion"]},{"name":"object Companion","description":"com.squareup.kotlinpoet.LambdaTypeName.Companion","location":"kotlinpoet/com.squareup.kotlinpoet/-lambda-type-name/-companion/index.html","searchKeys":["Companion","object Companion","com.squareup.kotlinpoet.LambdaTypeName.Companion"]},{"name":"object Companion","description":"com.squareup.kotlinpoet.MemberName.Companion","location":"kotlinpoet/com.squareup.kotlinpoet/-member-name/-companion/index.html","searchKeys":["Companion","object Companion","com.squareup.kotlinpoet.MemberName.Companion"]},{"name":"object Companion","description":"com.squareup.kotlinpoet.ParameterSpec.Companion","location":"kotlinpoet/com.squareup.kotlinpoet/-parameter-spec/-companion/index.html","searchKeys":["Companion","object Companion","com.squareup.kotlinpoet.ParameterSpec.Companion"]},{"name":"object Companion","description":"com.squareup.kotlinpoet.ParameterizedTypeName.Companion","location":"kotlinpoet/com.squareup.kotlinpoet/-parameterized-type-name/-companion/index.html","searchKeys":["Companion","object Companion","com.squareup.kotlinpoet.ParameterizedTypeName.Companion"]},{"name":"object Companion","description":"com.squareup.kotlinpoet.PropertySpec.Companion","location":"kotlinpoet/com.squareup.kotlinpoet/-property-spec/-companion/index.html","searchKeys":["Companion","object Companion","com.squareup.kotlinpoet.PropertySpec.Companion"]},{"name":"object Companion","description":"com.squareup.kotlinpoet.TypeAliasSpec.Companion","location":"kotlinpoet/com.squareup.kotlinpoet/-type-alias-spec/-companion/index.html","searchKeys":["Companion","object Companion","com.squareup.kotlinpoet.TypeAliasSpec.Companion"]},{"name":"object Companion","description":"com.squareup.kotlinpoet.TypeName.Companion","location":"kotlinpoet/com.squareup.kotlinpoet/-type-name/-companion/index.html","searchKeys":["Companion","object Companion","com.squareup.kotlinpoet.TypeName.Companion"]},{"name":"object Companion","description":"com.squareup.kotlinpoet.TypeSpec.Companion","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-companion/index.html","searchKeys":["Companion","object Companion","com.squareup.kotlinpoet.TypeSpec.Companion"]},{"name":"object Companion","description":"com.squareup.kotlinpoet.TypeVariableName.Companion","location":"kotlinpoet/com.squareup.kotlinpoet/-type-variable-name/-companion/index.html","searchKeys":["Companion","object Companion","com.squareup.kotlinpoet.TypeVariableName.Companion"]},{"name":"object Companion","description":"com.squareup.kotlinpoet.WildcardTypeName.Companion","location":"kotlinpoet/com.squareup.kotlinpoet/-wildcard-type-name/-companion/index.html","searchKeys":["Companion","object Companion","com.squareup.kotlinpoet.WildcardTypeName.Companion"]},{"name":"object Dynamic : TypeName","description":"com.squareup.kotlinpoet.Dynamic","location":"kotlinpoet/com.squareup.kotlinpoet/-dynamic/index.html","searchKeys":["Dynamic","object Dynamic : TypeName","com.squareup.kotlinpoet.Dynamic"]},{"name":"open fun <T : Any> tag(type: Class<T>): T?","description":"com.squareup.kotlinpoet.Taggable.tag","location":"kotlinpoet/com.squareup.kotlinpoet/-taggable/tag.html","searchKeys":["tag","open fun <T : Any> tag(type: Class<T>): T?","com.squareup.kotlinpoet.Taggable.tag"]},{"name":"open fun <T : Any> tag(type: KClass<T>): T?","description":"com.squareup.kotlinpoet.Taggable.tag","location":"kotlinpoet/com.squareup.kotlinpoet/-taggable/tag.html","searchKeys":["tag","open fun <T : Any> tag(type: KClass<T>): T?","com.squareup.kotlinpoet.Taggable.tag"]},{"name":"open fun addAnnotation(annotation: Class<*>): T","description":"com.squareup.kotlinpoet.Annotatable.Builder.addAnnotation","location":"kotlinpoet/com.squareup.kotlinpoet/-annotatable/-builder/add-annotation.html","searchKeys":["addAnnotation","open fun addAnnotation(annotation: Class<*>): T","com.squareup.kotlinpoet.Annotatable.Builder.addAnnotation"]},{"name":"open fun addAnnotation(annotation: ClassName): T","description":"com.squareup.kotlinpoet.Annotatable.Builder.addAnnotation","location":"kotlinpoet/com.squareup.kotlinpoet/-annotatable/-builder/add-annotation.html","searchKeys":["addAnnotation","open fun addAnnotation(annotation: ClassName): T","com.squareup.kotlinpoet.Annotatable.Builder.addAnnotation"]},{"name":"open fun addAnnotation(annotation: KClass<*>): T","description":"com.squareup.kotlinpoet.Annotatable.Builder.addAnnotation","location":"kotlinpoet/com.squareup.kotlinpoet/-annotatable/-builder/add-annotation.html","searchKeys":["addAnnotation","open fun addAnnotation(annotation: KClass<*>): T","com.squareup.kotlinpoet.Annotatable.Builder.addAnnotation"]},{"name":"open fun addAnnotation(annotationSpec: AnnotationSpec): T","description":"com.squareup.kotlinpoet.Annotatable.Builder.addAnnotation","location":"kotlinpoet/com.squareup.kotlinpoet/-annotatable/-builder/add-annotation.html","searchKeys":["addAnnotation","open fun addAnnotation(annotationSpec: AnnotationSpec): T","com.squareup.kotlinpoet.Annotatable.Builder.addAnnotation"]},{"name":"open fun addAnnotations(annotationSpecs: Iterable<AnnotationSpec>): T","description":"com.squareup.kotlinpoet.Annotatable.Builder.addAnnotations","location":"kotlinpoet/com.squareup.kotlinpoet/-annotatable/-builder/add-annotations.html","searchKeys":["addAnnotations","open fun addAnnotations(annotationSpecs: Iterable<AnnotationSpec>): T","com.squareup.kotlinpoet.Annotatable.Builder.addAnnotations"]},{"name":"open fun addFunctions(funSpecs: Iterable<FunSpec>): T","description":"com.squareup.kotlinpoet.MemberSpecHolder.Builder.addFunctions","location":"kotlinpoet/com.squareup.kotlinpoet/-member-spec-holder/-builder/add-functions.html","searchKeys":["addFunctions","open fun addFunctions(funSpecs: Iterable<FunSpec>): T","com.squareup.kotlinpoet.MemberSpecHolder.Builder.addFunctions"]},{"name":"open fun addKdoc(block: CodeBlock): T","description":"com.squareup.kotlinpoet.Documentable.Builder.addKdoc","location":"kotlinpoet/com.squareup.kotlinpoet/-documentable/-builder/add-kdoc.html","searchKeys":["addKdoc","open fun addKdoc(block: CodeBlock): T","com.squareup.kotlinpoet.Documentable.Builder.addKdoc"]},{"name":"open fun addKdoc(format: String, vararg args: Any): T","description":"com.squareup.kotlinpoet.Documentable.Builder.addKdoc","location":"kotlinpoet/com.squareup.kotlinpoet/-documentable/-builder/add-kdoc.html","searchKeys":["addKdoc","open fun addKdoc(format: String, vararg args: Any): T","com.squareup.kotlinpoet.Documentable.Builder.addKdoc"]},{"name":"open fun addOriginatingElement(originatingElement: Element): T","description":"com.squareup.kotlinpoet.OriginatingElementsHolder.Builder.addOriginatingElement","location":"kotlinpoet/com.squareup.kotlinpoet/-originating-elements-holder/-builder/add-originating-element.html","searchKeys":["addOriginatingElement","open fun addOriginatingElement(originatingElement: Element): T","com.squareup.kotlinpoet.OriginatingElementsHolder.Builder.addOriginatingElement"]},{"name":"open fun addProperties(propertySpecs: Iterable<PropertySpec>): T","description":"com.squareup.kotlinpoet.MemberSpecHolder.Builder.addProperties","location":"kotlinpoet/com.squareup.kotlinpoet/-member-spec-holder/-builder/add-properties.html","searchKeys":["addProperties","open fun addProperties(propertySpecs: Iterable<PropertySpec>): T","com.squareup.kotlinpoet.MemberSpecHolder.Builder.addProperties"]},{"name":"open fun addProperty(name: String, type: KClass<*>, modifiers: Iterable<KModifier>): T","description":"com.squareup.kotlinpoet.MemberSpecHolder.Builder.addProperty","location":"kotlinpoet/com.squareup.kotlinpoet/-member-spec-holder/-builder/add-property.html","searchKeys":["addProperty","open fun addProperty(name: String, type: KClass<*>, modifiers: Iterable<KModifier>): T","com.squareup.kotlinpoet.MemberSpecHolder.Builder.addProperty"]},{"name":"open fun addProperty(name: String, type: KClass<*>, vararg modifiers: KModifier): T","description":"com.squareup.kotlinpoet.MemberSpecHolder.Builder.addProperty","location":"kotlinpoet/com.squareup.kotlinpoet/-member-spec-holder/-builder/add-property.html","searchKeys":["addProperty","open fun addProperty(name: String, type: KClass<*>, vararg modifiers: KModifier): T","com.squareup.kotlinpoet.MemberSpecHolder.Builder.addProperty"]},{"name":"open fun addProperty(name: String, type: Type, modifiers: Iterable<KModifier>): T","description":"com.squareup.kotlinpoet.MemberSpecHolder.Builder.addProperty","location":"kotlinpoet/com.squareup.kotlinpoet/-member-spec-holder/-builder/add-property.html","searchKeys":["addProperty","open fun addProperty(name: String, type: Type, modifiers: Iterable<KModifier>): T","com.squareup.kotlinpoet.MemberSpecHolder.Builder.addProperty"]},{"name":"open fun addProperty(name: String, type: Type, vararg modifiers: KModifier): T","description":"com.squareup.kotlinpoet.MemberSpecHolder.Builder.addProperty","location":"kotlinpoet/com.squareup.kotlinpoet/-member-spec-holder/-builder/add-property.html","searchKeys":["addProperty","open fun addProperty(name: String, type: Type, vararg modifiers: KModifier): T","com.squareup.kotlinpoet.MemberSpecHolder.Builder.addProperty"]},{"name":"open fun addProperty(name: String, type: TypeName, modifiers: Iterable<KModifier>): T","description":"com.squareup.kotlinpoet.MemberSpecHolder.Builder.addProperty","location":"kotlinpoet/com.squareup.kotlinpoet/-member-spec-holder/-builder/add-property.html","searchKeys":["addProperty","open fun addProperty(name: String, type: TypeName, modifiers: Iterable<KModifier>): T","com.squareup.kotlinpoet.MemberSpecHolder.Builder.addProperty"]},{"name":"open fun addProperty(name: String, type: TypeName, vararg modifiers: KModifier): T","description":"com.squareup.kotlinpoet.MemberSpecHolder.Builder.addProperty","location":"kotlinpoet/com.squareup.kotlinpoet/-member-spec-holder/-builder/add-property.html","searchKeys":["addProperty","open fun addProperty(name: String, type: TypeName, vararg modifiers: KModifier): T","com.squareup.kotlinpoet.MemberSpecHolder.Builder.addProperty"]},{"name":"open fun addTypes(typeSpecs: Iterable<TypeSpec>): T","description":"com.squareup.kotlinpoet.TypeSpecHolder.Builder.addTypes","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec-holder/-builder/add-types.html","searchKeys":["addTypes","open fun addTypes(typeSpecs: Iterable<TypeSpec>): T","com.squareup.kotlinpoet.TypeSpecHolder.Builder.addTypes"]},{"name":"open fun contextParameter(contextParameter: ContextParameter): T","description":"com.squareup.kotlinpoet.ContextParameterizable.Builder.contextParameter","location":"kotlinpoet/com.squareup.kotlinpoet/-context-parameterizable/-builder/context-parameter.html","searchKeys":["contextParameter","open fun contextParameter(contextParameter: ContextParameter): T","com.squareup.kotlinpoet.ContextParameterizable.Builder.contextParameter"]},{"name":"open fun contextParameter(name: String, type: KClass<*>): T","description":"com.squareup.kotlinpoet.ContextParameterizable.Builder.contextParameter","location":"kotlinpoet/com.squareup.kotlinpoet/-context-parameterizable/-builder/context-parameter.html","searchKeys":["contextParameter","open fun contextParameter(name: String, type: KClass<*>): T","com.squareup.kotlinpoet.ContextParameterizable.Builder.contextParameter"]},{"name":"open fun contextParameter(name: String, type: Type): T","description":"com.squareup.kotlinpoet.ContextParameterizable.Builder.contextParameter","location":"kotlinpoet/com.squareup.kotlinpoet/-context-parameterizable/-builder/context-parameter.html","searchKeys":["contextParameter","open fun contextParameter(name: String, type: Type): T","com.squareup.kotlinpoet.ContextParameterizable.Builder.contextParameter"]},{"name":"open fun contextParameter(name: String, type: TypeName): T","description":"com.squareup.kotlinpoet.ContextParameterizable.Builder.contextParameter","location":"kotlinpoet/com.squareup.kotlinpoet/-context-parameterizable/-builder/context-parameter.html","searchKeys":["contextParameter","open fun contextParameter(name: String, type: TypeName): T","com.squareup.kotlinpoet.ContextParameterizable.Builder.contextParameter"]},{"name":"open fun contextParameter(type: TypeName): T","description":"com.squareup.kotlinpoet.ContextParameterizable.Builder.contextParameter","location":"kotlinpoet/com.squareup.kotlinpoet/-context-parameterizable/-builder/context-parameter.html","searchKeys":["contextParameter","open fun contextParameter(type: TypeName): T","com.squareup.kotlinpoet.ContextParameterizable.Builder.contextParameter"]},{"name":"open fun contextParameters(parameters: Iterable<ContextParameter>): T","description":"com.squareup.kotlinpoet.ContextParameterizable.Builder.contextParameters","location":"kotlinpoet/com.squareup.kotlinpoet/-context-parameterizable/-builder/context-parameters.html","searchKeys":["contextParameters","open fun contextParameters(parameters: Iterable<ContextParameter>): T","com.squareup.kotlinpoet.ContextParameterizable.Builder.contextParameters"]},{"name":"open fun contextReceivers(receiverTypes: Iterable<TypeName>): T","description":"com.squareup.kotlinpoet.ContextReceivable.Builder.contextReceivers","location":"kotlinpoet/com.squareup.kotlinpoet/-context-receivable/-builder/context-receivers.html","searchKeys":["contextReceivers","open fun contextReceivers(receiverTypes: Iterable<TypeName>): T","com.squareup.kotlinpoet.ContextReceivable.Builder.contextReceivers"]},{"name":"open fun contextReceivers(vararg receiverTypes: TypeName): T","description":"com.squareup.kotlinpoet.ContextReceivable.Builder.contextReceivers","location":"kotlinpoet/com.squareup.kotlinpoet/-context-receivable/-builder/context-receivers.html","searchKeys":["contextReceivers","open fun contextReceivers(vararg receiverTypes: TypeName): T","com.squareup.kotlinpoet.ContextReceivable.Builder.contextReceivers"]},{"name":"open fun tag(type: Class<*>, tag: Any?): T","description":"com.squareup.kotlinpoet.Taggable.Builder.tag","location":"kotlinpoet/com.squareup.kotlinpoet/-taggable/-builder/tag.html","searchKeys":["tag","open fun tag(type: Class<*>, tag: Any?): T","com.squareup.kotlinpoet.Taggable.Builder.tag"]},{"name":"open fun tag(type: KClass<*>, tag: Any?): T","description":"com.squareup.kotlinpoet.Taggable.Builder.tag","location":"kotlinpoet/com.squareup.kotlinpoet/-taggable/-builder/tag.html","searchKeys":["tag","open fun tag(type: KClass<*>, tag: Any?): T","com.squareup.kotlinpoet.Taggable.Builder.tag"]},{"name":"open operator override fun compareTo(other: ClassName): Int","description":"com.squareup.kotlinpoet.ClassName.compareTo","location":"kotlinpoet/com.squareup.kotlinpoet/-class-name/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: ClassName): Int","com.squareup.kotlinpoet.ClassName.compareTo"]},{"name":"open operator override fun compareTo(other: Import): Int","description":"com.squareup.kotlinpoet.Import.compareTo","location":"kotlinpoet/com.squareup.kotlinpoet/-import/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: Import): Int","com.squareup.kotlinpoet.Import.compareTo"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.squareup.kotlinpoet.AnnotationSpec.equals","location":"kotlinpoet/com.squareup.kotlinpoet/-annotation-spec/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.squareup.kotlinpoet.AnnotationSpec.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.squareup.kotlinpoet.ClassName.equals","location":"kotlinpoet/com.squareup.kotlinpoet/-class-name/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.squareup.kotlinpoet.ClassName.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.squareup.kotlinpoet.CodeBlock.equals","location":"kotlinpoet/com.squareup.kotlinpoet/-code-block/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.squareup.kotlinpoet.CodeBlock.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.squareup.kotlinpoet.ContextParameter.equals","location":"kotlinpoet/com.squareup.kotlinpoet/-context-parameter/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.squareup.kotlinpoet.ContextParameter.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.squareup.kotlinpoet.FileSpec.equals","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.squareup.kotlinpoet.FileSpec.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.squareup.kotlinpoet.FunSpec.equals","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.squareup.kotlinpoet.FunSpec.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.squareup.kotlinpoet.LambdaTypeName.equals","location":"kotlinpoet/com.squareup.kotlinpoet/-lambda-type-name/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.squareup.kotlinpoet.LambdaTypeName.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.squareup.kotlinpoet.ParameterSpec.equals","location":"kotlinpoet/com.squareup.kotlinpoet/-parameter-spec/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.squareup.kotlinpoet.ParameterSpec.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.squareup.kotlinpoet.ParameterizedTypeName.equals","location":"kotlinpoet/com.squareup.kotlinpoet/-parameterized-type-name/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.squareup.kotlinpoet.ParameterizedTypeName.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.squareup.kotlinpoet.PropertySpec.equals","location":"kotlinpoet/com.squareup.kotlinpoet/-property-spec/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.squareup.kotlinpoet.PropertySpec.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.squareup.kotlinpoet.TypeAliasSpec.equals","location":"kotlinpoet/com.squareup.kotlinpoet/-type-alias-spec/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.squareup.kotlinpoet.TypeAliasSpec.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.squareup.kotlinpoet.TypeName.equals","location":"kotlinpoet/com.squareup.kotlinpoet/-type-name/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.squareup.kotlinpoet.TypeName.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.squareup.kotlinpoet.TypeSpec.equals","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.squareup.kotlinpoet.TypeSpec.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.squareup.kotlinpoet.TypeVariableName.equals","location":"kotlinpoet/com.squareup.kotlinpoet/-type-variable-name/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.squareup.kotlinpoet.TypeVariableName.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.squareup.kotlinpoet.WildcardTypeName.equals","location":"kotlinpoet/com.squareup.kotlinpoet/-wildcard-type-name/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.squareup.kotlinpoet.WildcardTypeName.equals"]},{"name":"open override fun addAnnotation(annotation: Class<*>): FileSpec.Builder","description":"com.squareup.kotlinpoet.FileSpec.Builder.addAnnotation","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/-builder/add-annotation.html","searchKeys":["addAnnotation","open override fun addAnnotation(annotation: Class<*>): FileSpec.Builder","com.squareup.kotlinpoet.FileSpec.Builder.addAnnotation"]},{"name":"open override fun addAnnotation(annotation: Class<*>): FunSpec.Builder","description":"com.squareup.kotlinpoet.FunSpec.Builder.addAnnotation","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/add-annotation.html","searchKeys":["addAnnotation","open override fun addAnnotation(annotation: Class<*>): FunSpec.Builder","com.squareup.kotlinpoet.FunSpec.Builder.addAnnotation"]},{"name":"open override fun addAnnotation(annotation: Class<*>): ParameterSpec.Builder","description":"com.squareup.kotlinpoet.ParameterSpec.Builder.addAnnotation","location":"kotlinpoet/com.squareup.kotlinpoet/-parameter-spec/-builder/add-annotation.html","searchKeys":["addAnnotation","open override fun addAnnotation(annotation: Class<*>): ParameterSpec.Builder","com.squareup.kotlinpoet.ParameterSpec.Builder.addAnnotation"]},{"name":"open override fun addAnnotation(annotation: Class<*>): PropertySpec.Builder","description":"com.squareup.kotlinpoet.PropertySpec.Builder.addAnnotation","location":"kotlinpoet/com.squareup.kotlinpoet/-property-spec/-builder/add-annotation.html","searchKeys":["addAnnotation","open override fun addAnnotation(annotation: Class<*>): PropertySpec.Builder","com.squareup.kotlinpoet.PropertySpec.Builder.addAnnotation"]},{"name":"open override fun addAnnotation(annotation: Class<*>): TypeAliasSpec.Builder","description":"com.squareup.kotlinpoet.TypeAliasSpec.Builder.addAnnotation","location":"kotlinpoet/com.squareup.kotlinpoet/-type-alias-spec/-builder/add-annotation.html","searchKeys":["addAnnotation","open override fun addAnnotation(annotation: Class<*>): TypeAliasSpec.Builder","com.squareup.kotlinpoet.TypeAliasSpec.Builder.addAnnotation"]},{"name":"open override fun addAnnotation(annotation: Class<*>): TypeSpec.Builder","description":"com.squareup.kotlinpoet.TypeSpec.Builder.addAnnotation","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-builder/add-annotation.html","searchKeys":["addAnnotation","open override fun addAnnotation(annotation: Class<*>): TypeSpec.Builder","com.squareup.kotlinpoet.TypeSpec.Builder.addAnnotation"]},{"name":"open override fun addAnnotation(annotation: ClassName): FileSpec.Builder","description":"com.squareup.kotlinpoet.FileSpec.Builder.addAnnotation","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/-builder/add-annotation.html","searchKeys":["addAnnotation","open override fun addAnnotation(annotation: ClassName): FileSpec.Builder","com.squareup.kotlinpoet.FileSpec.Builder.addAnnotation"]},{"name":"open override fun addAnnotation(annotation: ClassName): FunSpec.Builder","description":"com.squareup.kotlinpoet.FunSpec.Builder.addAnnotation","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/add-annotation.html","searchKeys":["addAnnotation","open override fun addAnnotation(annotation: ClassName): FunSpec.Builder","com.squareup.kotlinpoet.FunSpec.Builder.addAnnotation"]},{"name":"open override fun addAnnotation(annotation: ClassName): ParameterSpec.Builder","description":"com.squareup.kotlinpoet.ParameterSpec.Builder.addAnnotation","location":"kotlinpoet/com.squareup.kotlinpoet/-parameter-spec/-builder/add-annotation.html","searchKeys":["addAnnotation","open override fun addAnnotation(annotation: ClassName): ParameterSpec.Builder","com.squareup.kotlinpoet.ParameterSpec.Builder.addAnnotation"]},{"name":"open override fun addAnnotation(annotation: ClassName): PropertySpec.Builder","description":"com.squareup.kotlinpoet.PropertySpec.Builder.addAnnotation","location":"kotlinpoet/com.squareup.kotlinpoet/-property-spec/-builder/add-annotation.html","searchKeys":["addAnnotation","open override fun addAnnotation(annotation: ClassName): PropertySpec.Builder","com.squareup.kotlinpoet.PropertySpec.Builder.addAnnotation"]},{"name":"open override fun addAnnotation(annotation: ClassName): TypeAliasSpec.Builder","description":"com.squareup.kotlinpoet.TypeAliasSpec.Builder.addAnnotation","location":"kotlinpoet/com.squareup.kotlinpoet/-type-alias-spec/-builder/add-annotation.html","searchKeys":["addAnnotation","open override fun addAnnotation(annotation: ClassName): TypeAliasSpec.Builder","com.squareup.kotlinpoet.TypeAliasSpec.Builder.addAnnotation"]},{"name":"open override fun addAnnotation(annotation: ClassName): TypeSpec.Builder","description":"com.squareup.kotlinpoet.TypeSpec.Builder.addAnnotation","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-builder/add-annotation.html","searchKeys":["addAnnotation","open override fun addAnnotation(annotation: ClassName): TypeSpec.Builder","com.squareup.kotlinpoet.TypeSpec.Builder.addAnnotation"]},{"name":"open override fun addAnnotation(annotation: KClass<*>): FileSpec.Builder","description":"com.squareup.kotlinpoet.FileSpec.Builder.addAnnotation","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/-builder/add-annotation.html","searchKeys":["addAnnotation","open override fun addAnnotation(annotation: KClass<*>): FileSpec.Builder","com.squareup.kotlinpoet.FileSpec.Builder.addAnnotation"]},{"name":"open override fun addAnnotation(annotation: KClass<*>): FunSpec.Builder","description":"com.squareup.kotlinpoet.FunSpec.Builder.addAnnotation","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/add-annotation.html","searchKeys":["addAnnotation","open override fun addAnnotation(annotation: KClass<*>): FunSpec.Builder","com.squareup.kotlinpoet.FunSpec.Builder.addAnnotation"]},{"name":"open override fun addAnnotation(annotation: KClass<*>): ParameterSpec.Builder","description":"com.squareup.kotlinpoet.ParameterSpec.Builder.addAnnotation","location":"kotlinpoet/com.squareup.kotlinpoet/-parameter-spec/-builder/add-annotation.html","searchKeys":["addAnnotation","open override fun addAnnotation(annotation: KClass<*>): ParameterSpec.Builder","com.squareup.kotlinpoet.ParameterSpec.Builder.addAnnotation"]},{"name":"open override fun addAnnotation(annotation: KClass<*>): PropertySpec.Builder","description":"com.squareup.kotlinpoet.PropertySpec.Builder.addAnnotation","location":"kotlinpoet/com.squareup.kotlinpoet/-property-spec/-builder/add-annotation.html","searchKeys":["addAnnotation","open override fun addAnnotation(annotation: KClass<*>): PropertySpec.Builder","com.squareup.kotlinpoet.PropertySpec.Builder.addAnnotation"]},{"name":"open override fun addAnnotation(annotation: KClass<*>): TypeAliasSpec.Builder","description":"com.squareup.kotlinpoet.TypeAliasSpec.Builder.addAnnotation","location":"kotlinpoet/com.squareup.kotlinpoet/-type-alias-spec/-builder/add-annotation.html","searchKeys":["addAnnotation","open override fun addAnnotation(annotation: KClass<*>): TypeAliasSpec.Builder","com.squareup.kotlinpoet.TypeAliasSpec.Builder.addAnnotation"]},{"name":"open override fun addAnnotation(annotation: KClass<*>): TypeSpec.Builder","description":"com.squareup.kotlinpoet.TypeSpec.Builder.addAnnotation","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-builder/add-annotation.html","searchKeys":["addAnnotation","open override fun addAnnotation(annotation: KClass<*>): TypeSpec.Builder","com.squareup.kotlinpoet.TypeSpec.Builder.addAnnotation"]},{"name":"open override fun addAnnotation(annotationSpec: AnnotationSpec): FileSpec.Builder","description":"com.squareup.kotlinpoet.FileSpec.Builder.addAnnotation","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/-builder/add-annotation.html","searchKeys":["addAnnotation","open override fun addAnnotation(annotationSpec: AnnotationSpec): FileSpec.Builder","com.squareup.kotlinpoet.FileSpec.Builder.addAnnotation"]},{"name":"open override fun addAnnotation(annotationSpec: AnnotationSpec): FunSpec.Builder","description":"com.squareup.kotlinpoet.FunSpec.Builder.addAnnotation","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/add-annotation.html","searchKeys":["addAnnotation","open override fun addAnnotation(annotationSpec: AnnotationSpec): FunSpec.Builder","com.squareup.kotlinpoet.FunSpec.Builder.addAnnotation"]},{"name":"open override fun addAnnotation(annotationSpec: AnnotationSpec): ParameterSpec.Builder","description":"com.squareup.kotlinpoet.ParameterSpec.Builder.addAnnotation","location":"kotlinpoet/com.squareup.kotlinpoet/-parameter-spec/-builder/add-annotation.html","searchKeys":["addAnnotation","open override fun addAnnotation(annotationSpec: AnnotationSpec): ParameterSpec.Builder","com.squareup.kotlinpoet.ParameterSpec.Builder.addAnnotation"]},{"name":"open override fun addAnnotation(annotationSpec: AnnotationSpec): PropertySpec.Builder","description":"com.squareup.kotlinpoet.PropertySpec.Builder.addAnnotation","location":"kotlinpoet/com.squareup.kotlinpoet/-property-spec/-builder/add-annotation.html","searchKeys":["addAnnotation","open override fun addAnnotation(annotationSpec: AnnotationSpec): PropertySpec.Builder","com.squareup.kotlinpoet.PropertySpec.Builder.addAnnotation"]},{"name":"open override fun addAnnotation(annotationSpec: AnnotationSpec): TypeAliasSpec.Builder","description":"com.squareup.kotlinpoet.TypeAliasSpec.Builder.addAnnotation","location":"kotlinpoet/com.squareup.kotlinpoet/-type-alias-spec/-builder/add-annotation.html","searchKeys":["addAnnotation","open override fun addAnnotation(annotationSpec: AnnotationSpec): TypeAliasSpec.Builder","com.squareup.kotlinpoet.TypeAliasSpec.Builder.addAnnotation"]},{"name":"open override fun addAnnotation(annotationSpec: AnnotationSpec): TypeSpec.Builder","description":"com.squareup.kotlinpoet.TypeSpec.Builder.addAnnotation","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-builder/add-annotation.html","searchKeys":["addAnnotation","open override fun addAnnotation(annotationSpec: AnnotationSpec): TypeSpec.Builder","com.squareup.kotlinpoet.TypeSpec.Builder.addAnnotation"]},{"name":"open override fun addAnnotations(annotationSpecs: Iterable<AnnotationSpec>): FileSpec.Builder","description":"com.squareup.kotlinpoet.FileSpec.Builder.addAnnotations","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/-builder/add-annotations.html","searchKeys":["addAnnotations","open override fun addAnnotations(annotationSpecs: Iterable<AnnotationSpec>): FileSpec.Builder","com.squareup.kotlinpoet.FileSpec.Builder.addAnnotations"]},{"name":"open override fun addAnnotations(annotationSpecs: Iterable<AnnotationSpec>): FunSpec.Builder","description":"com.squareup.kotlinpoet.FunSpec.Builder.addAnnotations","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/add-annotations.html","searchKeys":["addAnnotations","open override fun addAnnotations(annotationSpecs: Iterable<AnnotationSpec>): FunSpec.Builder","com.squareup.kotlinpoet.FunSpec.Builder.addAnnotations"]},{"name":"open override fun addAnnotations(annotationSpecs: Iterable<AnnotationSpec>): ParameterSpec.Builder","description":"com.squareup.kotlinpoet.ParameterSpec.Builder.addAnnotations","location":"kotlinpoet/com.squareup.kotlinpoet/-parameter-spec/-builder/add-annotations.html","searchKeys":["addAnnotations","open override fun addAnnotations(annotationSpecs: Iterable<AnnotationSpec>): ParameterSpec.Builder","com.squareup.kotlinpoet.ParameterSpec.Builder.addAnnotations"]},{"name":"open override fun addAnnotations(annotationSpecs: Iterable<AnnotationSpec>): PropertySpec.Builder","description":"com.squareup.kotlinpoet.PropertySpec.Builder.addAnnotations","location":"kotlinpoet/com.squareup.kotlinpoet/-property-spec/-builder/add-annotations.html","searchKeys":["addAnnotations","open override fun addAnnotations(annotationSpecs: Iterable<AnnotationSpec>): PropertySpec.Builder","com.squareup.kotlinpoet.PropertySpec.Builder.addAnnotations"]},{"name":"open override fun addAnnotations(annotationSpecs: Iterable<AnnotationSpec>): TypeAliasSpec.Builder","description":"com.squareup.kotlinpoet.TypeAliasSpec.Builder.addAnnotations","location":"kotlinpoet/com.squareup.kotlinpoet/-type-alias-spec/-builder/add-annotations.html","searchKeys":["addAnnotations","open override fun addAnnotations(annotationSpecs: Iterable<AnnotationSpec>): TypeAliasSpec.Builder","com.squareup.kotlinpoet.TypeAliasSpec.Builder.addAnnotations"]},{"name":"open override fun addAnnotations(annotationSpecs: Iterable<AnnotationSpec>): TypeSpec.Builder","description":"com.squareup.kotlinpoet.TypeSpec.Builder.addAnnotations","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-builder/add-annotations.html","searchKeys":["addAnnotations","open override fun addAnnotations(annotationSpecs: Iterable<AnnotationSpec>): TypeSpec.Builder","com.squareup.kotlinpoet.TypeSpec.Builder.addAnnotations"]},{"name":"open override fun addFunction(funSpec: FunSpec): FileSpec.Builder","description":"com.squareup.kotlinpoet.FileSpec.Builder.addFunction","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/-builder/add-function.html","searchKeys":["addFunction","open override fun addFunction(funSpec: FunSpec): FileSpec.Builder","com.squareup.kotlinpoet.FileSpec.Builder.addFunction"]},{"name":"open override fun addFunction(funSpec: FunSpec): TypeSpec.Builder","description":"com.squareup.kotlinpoet.TypeSpec.Builder.addFunction","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-builder/add-function.html","searchKeys":["addFunction","open override fun addFunction(funSpec: FunSpec): TypeSpec.Builder","com.squareup.kotlinpoet.TypeSpec.Builder.addFunction"]},{"name":"open override fun addFunctions(funSpecs: Iterable<FunSpec>): TypeSpec.Builder","description":"com.squareup.kotlinpoet.TypeSpec.Builder.addFunctions","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-builder/add-functions.html","searchKeys":["addFunctions","open override fun addFunctions(funSpecs: Iterable<FunSpec>): TypeSpec.Builder","com.squareup.kotlinpoet.TypeSpec.Builder.addFunctions"]},{"name":"open override fun addKdoc(block: CodeBlock): FunSpec.Builder","description":"com.squareup.kotlinpoet.FunSpec.Builder.addKdoc","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/add-kdoc.html","searchKeys":["addKdoc","open override fun addKdoc(block: CodeBlock): FunSpec.Builder","com.squareup.kotlinpoet.FunSpec.Builder.addKdoc"]},{"name":"open override fun addKdoc(block: CodeBlock): ParameterSpec.Builder","description":"com.squareup.kotlinpoet.ParameterSpec.Builder.addKdoc","location":"kotlinpoet/com.squareup.kotlinpoet/-parameter-spec/-builder/add-kdoc.html","searchKeys":["addKdoc","open override fun addKdoc(block: CodeBlock): ParameterSpec.Builder","com.squareup.kotlinpoet.ParameterSpec.Builder.addKdoc"]},{"name":"open override fun addKdoc(block: CodeBlock): PropertySpec.Builder","description":"com.squareup.kotlinpoet.PropertySpec.Builder.addKdoc","location":"kotlinpoet/com.squareup.kotlinpoet/-property-spec/-builder/add-kdoc.html","searchKeys":["addKdoc","open override fun addKdoc(block: CodeBlock): PropertySpec.Builder","com.squareup.kotlinpoet.PropertySpec.Builder.addKdoc"]},{"name":"open override fun addKdoc(block: CodeBlock): TypeAliasSpec.Builder","description":"com.squareup.kotlinpoet.TypeAliasSpec.Builder.addKdoc","location":"kotlinpoet/com.squareup.kotlinpoet/-type-alias-spec/-builder/add-kdoc.html","searchKeys":["addKdoc","open override fun addKdoc(block: CodeBlock): TypeAliasSpec.Builder","com.squareup.kotlinpoet.TypeAliasSpec.Builder.addKdoc"]},{"name":"open override fun addKdoc(block: CodeBlock): TypeSpec.Builder","description":"com.squareup.kotlinpoet.TypeSpec.Builder.addKdoc","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-builder/add-kdoc.html","searchKeys":["addKdoc","open override fun addKdoc(block: CodeBlock): TypeSpec.Builder","com.squareup.kotlinpoet.TypeSpec.Builder.addKdoc"]},{"name":"open override fun addKdoc(format: String, vararg args: Any): FunSpec.Builder","description":"com.squareup.kotlinpoet.FunSpec.Builder.addKdoc","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/add-kdoc.html","searchKeys":["addKdoc","open override fun addKdoc(format: String, vararg args: Any): FunSpec.Builder","com.squareup.kotlinpoet.FunSpec.Builder.addKdoc"]},{"name":"open override fun addKdoc(format: String, vararg args: Any): ParameterSpec.Builder","description":"com.squareup.kotlinpoet.ParameterSpec.Builder.addKdoc","location":"kotlinpoet/com.squareup.kotlinpoet/-parameter-spec/-builder/add-kdoc.html","searchKeys":["addKdoc","open override fun addKdoc(format: String, vararg args: Any): ParameterSpec.Builder","com.squareup.kotlinpoet.ParameterSpec.Builder.addKdoc"]},{"name":"open override fun addKdoc(format: String, vararg args: Any): PropertySpec.Builder","description":"com.squareup.kotlinpoet.PropertySpec.Builder.addKdoc","location":"kotlinpoet/com.squareup.kotlinpoet/-property-spec/-builder/add-kdoc.html","searchKeys":["addKdoc","open override fun addKdoc(format: String, vararg args: Any): PropertySpec.Builder","com.squareup.kotlinpoet.PropertySpec.Builder.addKdoc"]},{"name":"open override fun addKdoc(format: String, vararg args: Any): TypeAliasSpec.Builder","description":"com.squareup.kotlinpoet.TypeAliasSpec.Builder.addKdoc","location":"kotlinpoet/com.squareup.kotlinpoet/-type-alias-spec/-builder/add-kdoc.html","searchKeys":["addKdoc","open override fun addKdoc(format: String, vararg args: Any): TypeAliasSpec.Builder","com.squareup.kotlinpoet.TypeAliasSpec.Builder.addKdoc"]},{"name":"open override fun addKdoc(format: String, vararg args: Any): TypeSpec.Builder","description":"com.squareup.kotlinpoet.TypeSpec.Builder.addKdoc","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-builder/add-kdoc.html","searchKeys":["addKdoc","open override fun addKdoc(format: String, vararg args: Any): TypeSpec.Builder","com.squareup.kotlinpoet.TypeSpec.Builder.addKdoc"]},{"name":"open override fun addProperties(propertySpecs: Iterable<PropertySpec>): TypeSpec.Builder","description":"com.squareup.kotlinpoet.TypeSpec.Builder.addProperties","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-builder/add-properties.html","searchKeys":["addProperties","open override fun addProperties(propertySpecs: Iterable<PropertySpec>): TypeSpec.Builder","com.squareup.kotlinpoet.TypeSpec.Builder.addProperties"]},{"name":"open override fun addProperty(name: String, type: KClass<*>, modifiers: Iterable<KModifier>): TypeSpec.Builder","description":"com.squareup.kotlinpoet.TypeSpec.Builder.addProperty","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-builder/add-property.html","searchKeys":["addProperty","open override fun addProperty(name: String, type: KClass<*>, modifiers: Iterable<KModifier>): TypeSpec.Builder","com.squareup.kotlinpoet.TypeSpec.Builder.addProperty"]},{"name":"open override fun addProperty(name: String, type: KClass<*>, vararg modifiers: KModifier): TypeSpec.Builder","description":"com.squareup.kotlinpoet.TypeSpec.Builder.addProperty","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-builder/add-property.html","searchKeys":["addProperty","open override fun addProperty(name: String, type: KClass<*>, vararg modifiers: KModifier): TypeSpec.Builder","com.squareup.kotlinpoet.TypeSpec.Builder.addProperty"]},{"name":"open override fun addProperty(name: String, type: Type, modifiers: Iterable<KModifier>): TypeSpec.Builder","description":"com.squareup.kotlinpoet.TypeSpec.Builder.addProperty","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-builder/add-property.html","searchKeys":["addProperty","open override fun addProperty(name: String, type: Type, modifiers: Iterable<KModifier>): TypeSpec.Builder","com.squareup.kotlinpoet.TypeSpec.Builder.addProperty"]},{"name":"open override fun addProperty(name: String, type: Type, vararg modifiers: KModifier): TypeSpec.Builder","description":"com.squareup.kotlinpoet.TypeSpec.Builder.addProperty","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-builder/add-property.html","searchKeys":["addProperty","open override fun addProperty(name: String, type: Type, vararg modifiers: KModifier): TypeSpec.Builder","com.squareup.kotlinpoet.TypeSpec.Builder.addProperty"]},{"name":"open override fun addProperty(name: String, type: TypeName, modifiers: Iterable<KModifier>): TypeSpec.Builder","description":"com.squareup.kotlinpoet.TypeSpec.Builder.addProperty","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-builder/add-property.html","searchKeys":["addProperty","open override fun addProperty(name: String, type: TypeName, modifiers: Iterable<KModifier>): TypeSpec.Builder","com.squareup.kotlinpoet.TypeSpec.Builder.addProperty"]},{"name":"open override fun addProperty(name: String, type: TypeName, vararg modifiers: KModifier): TypeSpec.Builder","description":"com.squareup.kotlinpoet.TypeSpec.Builder.addProperty","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-builder/add-property.html","searchKeys":["addProperty","open override fun addProperty(name: String, type: TypeName, vararg modifiers: KModifier): TypeSpec.Builder","com.squareup.kotlinpoet.TypeSpec.Builder.addProperty"]},{"name":"open override fun addProperty(propertySpec: PropertySpec): FileSpec.Builder","description":"com.squareup.kotlinpoet.FileSpec.Builder.addProperty","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/-builder/add-property.html","searchKeys":["addProperty","open override fun addProperty(propertySpec: PropertySpec): FileSpec.Builder","com.squareup.kotlinpoet.FileSpec.Builder.addProperty"]},{"name":"open override fun addProperty(propertySpec: PropertySpec): TypeSpec.Builder","description":"com.squareup.kotlinpoet.TypeSpec.Builder.addProperty","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-builder/add-property.html","searchKeys":["addProperty","open override fun addProperty(propertySpec: PropertySpec): TypeSpec.Builder","com.squareup.kotlinpoet.TypeSpec.Builder.addProperty"]},{"name":"open override fun addType(typeSpec: TypeSpec): FileSpec.Builder","description":"com.squareup.kotlinpoet.FileSpec.Builder.addType","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/-builder/add-type.html","searchKeys":["addType","open override fun addType(typeSpec: TypeSpec): FileSpec.Builder","com.squareup.kotlinpoet.FileSpec.Builder.addType"]},{"name":"open override fun addType(typeSpec: TypeSpec): TypeSpec.Builder","description":"com.squareup.kotlinpoet.TypeSpec.Builder.addType","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-builder/add-type.html","searchKeys":["addType","open override fun addType(typeSpec: TypeSpec): TypeSpec.Builder","com.squareup.kotlinpoet.TypeSpec.Builder.addType"]},{"name":"open override fun addTypes(typeSpecs: Iterable<TypeSpec>): FileSpec.Builder","description":"com.squareup.kotlinpoet.FileSpec.Builder.addTypes","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/-builder/add-types.html","searchKeys":["addTypes","open override fun addTypes(typeSpecs: Iterable<TypeSpec>): FileSpec.Builder","com.squareup.kotlinpoet.FileSpec.Builder.addTypes"]},{"name":"open override fun addTypes(typeSpecs: Iterable<TypeSpec>): TypeSpec.Builder","description":"com.squareup.kotlinpoet.TypeSpec.Builder.addTypes","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-builder/add-types.html","searchKeys":["addTypes","open override fun addTypes(typeSpecs: Iterable<TypeSpec>): TypeSpec.Builder","com.squareup.kotlinpoet.TypeSpec.Builder.addTypes"]},{"name":"open override fun contextParameters(parameters: Iterable<ContextParameter>): FunSpec.Builder","description":"com.squareup.kotlinpoet.FunSpec.Builder.contextParameters","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/context-parameters.html","searchKeys":["contextParameters","open override fun contextParameters(parameters: Iterable<ContextParameter>): FunSpec.Builder","com.squareup.kotlinpoet.FunSpec.Builder.contextParameters"]},{"name":"open override fun contextReceivers(receiverTypes: Iterable<TypeName>): FunSpec.Builder","description":"com.squareup.kotlinpoet.FunSpec.Builder.contextReceivers","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/context-receivers.html","searchKeys":["contextReceivers","open override fun contextReceivers(receiverTypes: Iterable<TypeName>): FunSpec.Builder","com.squareup.kotlinpoet.FunSpec.Builder.contextReceivers"]},{"name":"open override fun contextReceivers(receiverTypes: Iterable<TypeName>): TypeSpec.Builder","description":"com.squareup.kotlinpoet.TypeSpec.Builder.contextReceivers","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-builder/context-receivers.html","searchKeys":["contextReceivers","open override fun contextReceivers(receiverTypes: Iterable<TypeName>): TypeSpec.Builder","com.squareup.kotlinpoet.TypeSpec.Builder.contextReceivers"]},{"name":"open override fun copy(nullable: Boolean, annotations: List<AnnotationSpec>, tags: Map<KClass<*>, Any>): ClassName","description":"com.squareup.kotlinpoet.ClassName.copy","location":"kotlinpoet/com.squareup.kotlinpoet/-class-name/copy.html","searchKeys":["copy","open override fun copy(nullable: Boolean, annotations: List<AnnotationSpec>, tags: Map<KClass<*>, Any>): ClassName","com.squareup.kotlinpoet.ClassName.copy"]},{"name":"open override fun copy(nullable: Boolean, annotations: List<AnnotationSpec>, tags: Map<KClass<*>, Any>): LambdaTypeName","description":"com.squareup.kotlinpoet.LambdaTypeName.copy","location":"kotlinpoet/com.squareup.kotlinpoet/-lambda-type-name/copy.html","searchKeys":["copy","open override fun copy(nullable: Boolean, annotations: List<AnnotationSpec>, tags: Map<KClass<*>, Any>): LambdaTypeName","com.squareup.kotlinpoet.LambdaTypeName.copy"]},{"name":"open override fun copy(nullable: Boolean, annotations: List<AnnotationSpec>, tags: Map<KClass<*>, Any>): Nothing","description":"com.squareup.kotlinpoet.Dynamic.copy","location":"kotlinpoet/com.squareup.kotlinpoet/-dynamic/copy.html","searchKeys":["copy","open override fun copy(nullable: Boolean, annotations: List<AnnotationSpec>, tags: Map<KClass<*>, Any>): Nothing","com.squareup.kotlinpoet.Dynamic.copy"]},{"name":"open override fun copy(nullable: Boolean, annotations: List<AnnotationSpec>, tags: Map<KClass<*>, Any>): ParameterizedTypeName","description":"com.squareup.kotlinpoet.ParameterizedTypeName.copy","location":"kotlinpoet/com.squareup.kotlinpoet/-parameterized-type-name/copy.html","searchKeys":["copy","open override fun copy(nullable: Boolean, annotations: List<AnnotationSpec>, tags: Map<KClass<*>, Any>): ParameterizedTypeName","com.squareup.kotlinpoet.ParameterizedTypeName.copy"]},{"name":"open override fun copy(nullable: Boolean, annotations: List<AnnotationSpec>, tags: Map<KClass<*>, Any>): TypeVariableName","description":"com.squareup.kotlinpoet.TypeVariableName.copy","location":"kotlinpoet/com.squareup.kotlinpoet/-type-variable-name/copy.html","searchKeys":["copy","open override fun copy(nullable: Boolean, annotations: List<AnnotationSpec>, tags: Map<KClass<*>, Any>): TypeVariableName","com.squareup.kotlinpoet.TypeVariableName.copy"]},{"name":"open override fun copy(nullable: Boolean, annotations: List<AnnotationSpec>, tags: Map<KClass<*>, Any>): WildcardTypeName","description":"com.squareup.kotlinpoet.WildcardTypeName.copy","location":"kotlinpoet/com.squareup.kotlinpoet/-wildcard-type-name/copy.html","searchKeys":["copy","open override fun copy(nullable: Boolean, annotations: List<AnnotationSpec>, tags: Map<KClass<*>, Any>): WildcardTypeName","com.squareup.kotlinpoet.WildcardTypeName.copy"]},{"name":"open override fun hashCode(): Int","description":"com.squareup.kotlinpoet.AnnotationSpec.hashCode","location":"kotlinpoet/com.squareup.kotlinpoet/-annotation-spec/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.squareup.kotlinpoet.AnnotationSpec.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.squareup.kotlinpoet.ClassName.hashCode","location":"kotlinpoet/com.squareup.kotlinpoet/-class-name/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.squareup.kotlinpoet.ClassName.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.squareup.kotlinpoet.CodeBlock.hashCode","location":"kotlinpoet/com.squareup.kotlinpoet/-code-block/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.squareup.kotlinpoet.CodeBlock.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.squareup.kotlinpoet.ContextParameter.hashCode","location":"kotlinpoet/com.squareup.kotlinpoet/-context-parameter/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.squareup.kotlinpoet.ContextParameter.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.squareup.kotlinpoet.FileSpec.hashCode","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.squareup.kotlinpoet.FileSpec.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.squareup.kotlinpoet.FunSpec.hashCode","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.squareup.kotlinpoet.FunSpec.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.squareup.kotlinpoet.LambdaTypeName.hashCode","location":"kotlinpoet/com.squareup.kotlinpoet/-lambda-type-name/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.squareup.kotlinpoet.LambdaTypeName.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.squareup.kotlinpoet.ParameterSpec.hashCode","location":"kotlinpoet/com.squareup.kotlinpoet/-parameter-spec/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.squareup.kotlinpoet.ParameterSpec.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.squareup.kotlinpoet.ParameterizedTypeName.hashCode","location":"kotlinpoet/com.squareup.kotlinpoet/-parameterized-type-name/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.squareup.kotlinpoet.ParameterizedTypeName.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.squareup.kotlinpoet.PropertySpec.hashCode","location":"kotlinpoet/com.squareup.kotlinpoet/-property-spec/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.squareup.kotlinpoet.PropertySpec.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.squareup.kotlinpoet.TypeAliasSpec.hashCode","location":"kotlinpoet/com.squareup.kotlinpoet/-type-alias-spec/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.squareup.kotlinpoet.TypeAliasSpec.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.squareup.kotlinpoet.TypeName.hashCode","location":"kotlinpoet/com.squareup.kotlinpoet/-type-name/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.squareup.kotlinpoet.TypeName.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.squareup.kotlinpoet.TypeSpec.hashCode","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.squareup.kotlinpoet.TypeSpec.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.squareup.kotlinpoet.TypeVariableName.hashCode","location":"kotlinpoet/com.squareup.kotlinpoet/-type-variable-name/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.squareup.kotlinpoet.TypeVariableName.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.squareup.kotlinpoet.WildcardTypeName.hashCode","location":"kotlinpoet/com.squareup.kotlinpoet/-wildcard-type-name/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.squareup.kotlinpoet.WildcardTypeName.hashCode"]},{"name":"open override fun toString(): String","description":"com.squareup.kotlinpoet.AnnotationSpec.toString","location":"kotlinpoet/com.squareup.kotlinpoet/-annotation-spec/to-string.html","searchKeys":["toString","open override fun toString(): String","com.squareup.kotlinpoet.AnnotationSpec.toString"]},{"name":"open override fun toString(): String","description":"com.squareup.kotlinpoet.CodeBlock.toString","location":"kotlinpoet/com.squareup.kotlinpoet/-code-block/to-string.html","searchKeys":["toString","open override fun toString(): String","com.squareup.kotlinpoet.CodeBlock.toString"]},{"name":"open override fun toString(): String","description":"com.squareup.kotlinpoet.ContextParameter.toString","location":"kotlinpoet/com.squareup.kotlinpoet/-context-parameter/to-string.html","searchKeys":["toString","open override fun toString(): String","com.squareup.kotlinpoet.ContextParameter.toString"]},{"name":"open override fun toString(): String","description":"com.squareup.kotlinpoet.FileSpec.toString","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/to-string.html","searchKeys":["toString","open override fun toString(): String","com.squareup.kotlinpoet.FileSpec.toString"]},{"name":"open override fun toString(): String","description":"com.squareup.kotlinpoet.FunSpec.toString","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/to-string.html","searchKeys":["toString","open override fun toString(): String","com.squareup.kotlinpoet.FunSpec.toString"]},{"name":"open override fun toString(): String","description":"com.squareup.kotlinpoet.Import.toString","location":"kotlinpoet/com.squareup.kotlinpoet/-import/to-string.html","searchKeys":["toString","open override fun toString(): String","com.squareup.kotlinpoet.Import.toString"]},{"name":"open override fun toString(): String","description":"com.squareup.kotlinpoet.MemberName.toString","location":"kotlinpoet/com.squareup.kotlinpoet/-member-name/to-string.html","searchKeys":["toString","open override fun toString(): String","com.squareup.kotlinpoet.MemberName.toString"]},{"name":"open override fun toString(): String","description":"com.squareup.kotlinpoet.ParameterSpec.toString","location":"kotlinpoet/com.squareup.kotlinpoet/-parameter-spec/to-string.html","searchKeys":["toString","open override fun toString(): String","com.squareup.kotlinpoet.ParameterSpec.toString"]},{"name":"open override fun toString(): String","description":"com.squareup.kotlinpoet.PropertySpec.toString","location":"kotlinpoet/com.squareup.kotlinpoet/-property-spec/to-string.html","searchKeys":["toString","open override fun toString(): String","com.squareup.kotlinpoet.PropertySpec.toString"]},{"name":"open override fun toString(): String","description":"com.squareup.kotlinpoet.TypeAliasSpec.toString","location":"kotlinpoet/com.squareup.kotlinpoet/-type-alias-spec/to-string.html","searchKeys":["toString","open override fun toString(): String","com.squareup.kotlinpoet.TypeAliasSpec.toString"]},{"name":"open override fun toString(): String","description":"com.squareup.kotlinpoet.TypeName.toString","location":"kotlinpoet/com.squareup.kotlinpoet/-type-name/to-string.html","searchKeys":["toString","open override fun toString(): String","com.squareup.kotlinpoet.TypeName.toString"]},{"name":"open override fun toString(): String","description":"com.squareup.kotlinpoet.TypeSpec.toString","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/to-string.html","searchKeys":["toString","open override fun toString(): String","com.squareup.kotlinpoet.TypeSpec.toString"]},{"name":"open override val annotations: List<AnnotationSpec>","description":"com.squareup.kotlinpoet.FileSpec.annotations","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/annotations.html","searchKeys":["annotations","open override val annotations: List<AnnotationSpec>","com.squareup.kotlinpoet.FileSpec.annotations"]},{"name":"open override val annotations: List<AnnotationSpec>","description":"com.squareup.kotlinpoet.FunSpec.annotations","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/annotations.html","searchKeys":["annotations","open override val annotations: List<AnnotationSpec>","com.squareup.kotlinpoet.FunSpec.annotations"]},{"name":"open override val annotations: List<AnnotationSpec>","description":"com.squareup.kotlinpoet.ParameterSpec.annotations","location":"kotlinpoet/com.squareup.kotlinpoet/-parameter-spec/annotations.html","searchKeys":["annotations","open override val annotations: List<AnnotationSpec>","com.squareup.kotlinpoet.ParameterSpec.annotations"]},{"name":"open override val annotations: List<AnnotationSpec>","description":"com.squareup.kotlinpoet.PropertySpec.annotations","location":"kotlinpoet/com.squareup.kotlinpoet/-property-spec/annotations.html","searchKeys":["annotations","open override val annotations: List<AnnotationSpec>","com.squareup.kotlinpoet.PropertySpec.annotations"]},{"name":"open override val annotations: List<AnnotationSpec>","description":"com.squareup.kotlinpoet.TypeAliasSpec.annotations","location":"kotlinpoet/com.squareup.kotlinpoet/-type-alias-spec/annotations.html","searchKeys":["annotations","open override val annotations: List<AnnotationSpec>","com.squareup.kotlinpoet.TypeAliasSpec.annotations"]},{"name":"open override val annotations: List<AnnotationSpec>","description":"com.squareup.kotlinpoet.TypeName.annotations","location":"kotlinpoet/com.squareup.kotlinpoet/-type-name/annotations.html","searchKeys":["annotations","open override val annotations: List<AnnotationSpec>","com.squareup.kotlinpoet.TypeName.annotations"]},{"name":"open override val annotations: List<AnnotationSpec>","description":"com.squareup.kotlinpoet.TypeSpec.annotations","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/annotations.html","searchKeys":["annotations","open override val annotations: List<AnnotationSpec>","com.squareup.kotlinpoet.TypeSpec.annotations"]},{"name":"open override val annotations: MutableList<AnnotationSpec>","description":"com.squareup.kotlinpoet.FileSpec.Builder.annotations","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/-builder/annotations.html","searchKeys":["annotations","open override val annotations: MutableList<AnnotationSpec>","com.squareup.kotlinpoet.FileSpec.Builder.annotations"]},{"name":"open override val annotations: MutableList<AnnotationSpec>","description":"com.squareup.kotlinpoet.FunSpec.Builder.annotations","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/annotations.html","searchKeys":["annotations","open override val annotations: MutableList<AnnotationSpec>","com.squareup.kotlinpoet.FunSpec.Builder.annotations"]},{"name":"open override val annotations: MutableList<AnnotationSpec>","description":"com.squareup.kotlinpoet.ParameterSpec.Builder.annotations","location":"kotlinpoet/com.squareup.kotlinpoet/-parameter-spec/-builder/annotations.html","searchKeys":["annotations","open override val annotations: MutableList<AnnotationSpec>","com.squareup.kotlinpoet.ParameterSpec.Builder.annotations"]},{"name":"open override val annotations: MutableList<AnnotationSpec>","description":"com.squareup.kotlinpoet.PropertySpec.Builder.annotations","location":"kotlinpoet/com.squareup.kotlinpoet/-property-spec/-builder/annotations.html","searchKeys":["annotations","open override val annotations: MutableList<AnnotationSpec>","com.squareup.kotlinpoet.PropertySpec.Builder.annotations"]},{"name":"open override val annotations: MutableList<AnnotationSpec>","description":"com.squareup.kotlinpoet.TypeAliasSpec.Builder.annotations","location":"kotlinpoet/com.squareup.kotlinpoet/-type-alias-spec/-builder/annotations.html","searchKeys":["annotations","open override val annotations: MutableList<AnnotationSpec>","com.squareup.kotlinpoet.TypeAliasSpec.Builder.annotations"]},{"name":"open override val annotations: MutableList<AnnotationSpec>","description":"com.squareup.kotlinpoet.TypeSpec.Builder.annotations","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-builder/annotations.html","searchKeys":["annotations","open override val annotations: MutableList<AnnotationSpec>","com.squareup.kotlinpoet.TypeSpec.Builder.annotations"]},{"name":"open override val contextParameters: MutableList<ContextParameter>","description":"com.squareup.kotlinpoet.FunSpec.Builder.contextParameters","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/context-parameters.html","searchKeys":["contextParameters","open override val contextParameters: MutableList<ContextParameter>","com.squareup.kotlinpoet.FunSpec.Builder.contextParameters"]},{"name":"open override val contextParameters: MutableList<ContextParameter>","description":"com.squareup.kotlinpoet.PropertySpec.Builder.contextParameters","location":"kotlinpoet/com.squareup.kotlinpoet/-property-spec/-builder/context-parameters.html","searchKeys":["contextParameters","open override val contextParameters: MutableList<ContextParameter>","com.squareup.kotlinpoet.PropertySpec.Builder.contextParameters"]},{"name":"open override val contextReceiverTypes: MutableList<TypeName>","description":"com.squareup.kotlinpoet.FunSpec.Builder.contextReceiverTypes","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/context-receiver-types.html","searchKeys":["contextReceiverTypes","open override val contextReceiverTypes: MutableList<TypeName>","com.squareup.kotlinpoet.FunSpec.Builder.contextReceiverTypes"]},{"name":"open override val contextReceiverTypes: MutableList<TypeName>","description":"com.squareup.kotlinpoet.PropertySpec.Builder.contextReceiverTypes","location":"kotlinpoet/com.squareup.kotlinpoet/-property-spec/-builder/context-receiver-types.html","searchKeys":["contextReceiverTypes","open override val contextReceiverTypes: MutableList<TypeName>","com.squareup.kotlinpoet.PropertySpec.Builder.contextReceiverTypes"]},{"name":"open override val contextReceiverTypes: MutableList<TypeName>","description":"com.squareup.kotlinpoet.TypeSpec.Builder.contextReceiverTypes","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-builder/context-receiver-types.html","searchKeys":["contextReceiverTypes","open override val contextReceiverTypes: MutableList<TypeName>","com.squareup.kotlinpoet.TypeSpec.Builder.contextReceiverTypes"]},{"name":"open override val funSpecs: List<FunSpec>","description":"com.squareup.kotlinpoet.FileSpec.funSpecs","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/fun-specs.html","searchKeys":["funSpecs","open override val funSpecs: List<FunSpec>","com.squareup.kotlinpoet.FileSpec.funSpecs"]},{"name":"open override val funSpecs: List<FunSpec>","description":"com.squareup.kotlinpoet.TypeSpec.funSpecs","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/fun-specs.html","searchKeys":["funSpecs","open override val funSpecs: List<FunSpec>","com.squareup.kotlinpoet.TypeSpec.funSpecs"]},{"name":"open override val kdoc: CodeBlock","description":"com.squareup.kotlinpoet.FunSpec.kdoc","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/kdoc.html","searchKeys":["kdoc","open override val kdoc: CodeBlock","com.squareup.kotlinpoet.FunSpec.kdoc"]},{"name":"open override val kdoc: CodeBlock","description":"com.squareup.kotlinpoet.ParameterSpec.kdoc","location":"kotlinpoet/com.squareup.kotlinpoet/-parameter-spec/kdoc.html","searchKeys":["kdoc","open override val kdoc: CodeBlock","com.squareup.kotlinpoet.ParameterSpec.kdoc"]},{"name":"open override val kdoc: CodeBlock","description":"com.squareup.kotlinpoet.PropertySpec.kdoc","location":"kotlinpoet/com.squareup.kotlinpoet/-property-spec/kdoc.html","searchKeys":["kdoc","open override val kdoc: CodeBlock","com.squareup.kotlinpoet.PropertySpec.kdoc"]},{"name":"open override val kdoc: CodeBlock","description":"com.squareup.kotlinpoet.TypeAliasSpec.kdoc","location":"kotlinpoet/com.squareup.kotlinpoet/-type-alias-spec/kdoc.html","searchKeys":["kdoc","open override val kdoc: CodeBlock","com.squareup.kotlinpoet.TypeAliasSpec.kdoc"]},{"name":"open override val kdoc: CodeBlock","description":"com.squareup.kotlinpoet.TypeSpec.kdoc","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/kdoc.html","searchKeys":["kdoc","open override val kdoc: CodeBlock","com.squareup.kotlinpoet.TypeSpec.kdoc"]},{"name":"open override val kdoc: CodeBlock.Builder","description":"com.squareup.kotlinpoet.FunSpec.Builder.kdoc","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/kdoc.html","searchKeys":["kdoc","open override val kdoc: CodeBlock.Builder","com.squareup.kotlinpoet.FunSpec.Builder.kdoc"]},{"name":"open override val kdoc: CodeBlock.Builder","description":"com.squareup.kotlinpoet.ParameterSpec.Builder.kdoc","location":"kotlinpoet/com.squareup.kotlinpoet/-parameter-spec/-builder/kdoc.html","searchKeys":["kdoc","open override val kdoc: CodeBlock.Builder","com.squareup.kotlinpoet.ParameterSpec.Builder.kdoc"]},{"name":"open override val kdoc: CodeBlock.Builder","description":"com.squareup.kotlinpoet.PropertySpec.Builder.kdoc","location":"kotlinpoet/com.squareup.kotlinpoet/-property-spec/-builder/kdoc.html","searchKeys":["kdoc","open override val kdoc: CodeBlock.Builder","com.squareup.kotlinpoet.PropertySpec.Builder.kdoc"]},{"name":"open override val kdoc: CodeBlock.Builder","description":"com.squareup.kotlinpoet.TypeAliasSpec.Builder.kdoc","location":"kotlinpoet/com.squareup.kotlinpoet/-type-alias-spec/-builder/kdoc.html","searchKeys":["kdoc","open override val kdoc: CodeBlock.Builder","com.squareup.kotlinpoet.TypeAliasSpec.Builder.kdoc"]},{"name":"open override val kdoc: CodeBlock.Builder","description":"com.squareup.kotlinpoet.TypeSpec.Builder.kdoc","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-builder/kdoc.html","searchKeys":["kdoc","open override val kdoc: CodeBlock.Builder","com.squareup.kotlinpoet.TypeSpec.Builder.kdoc"]},{"name":"open override val originatingElements: MutableList<Element>","description":"com.squareup.kotlinpoet.FunSpec.Builder.originatingElements","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/originating-elements.html","searchKeys":["originatingElements","open override val originatingElements: MutableList<Element>","com.squareup.kotlinpoet.FunSpec.Builder.originatingElements"]},{"name":"open override val originatingElements: MutableList<Element>","description":"com.squareup.kotlinpoet.PropertySpec.Builder.originatingElements","location":"kotlinpoet/com.squareup.kotlinpoet/-property-spec/-builder/originating-elements.html","searchKeys":["originatingElements","open override val originatingElements: MutableList<Element>","com.squareup.kotlinpoet.PropertySpec.Builder.originatingElements"]},{"name":"open override val originatingElements: MutableList<Element>","description":"com.squareup.kotlinpoet.TypeSpec.Builder.originatingElements","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-builder/originating-elements.html","searchKeys":["originatingElements","open override val originatingElements: MutableList<Element>","com.squareup.kotlinpoet.TypeSpec.Builder.originatingElements"]},{"name":"open override val propertySpecs: List<PropertySpec>","description":"com.squareup.kotlinpoet.FileSpec.propertySpecs","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/property-specs.html","searchKeys":["propertySpecs","open override val propertySpecs: List<PropertySpec>","com.squareup.kotlinpoet.FileSpec.propertySpecs"]},{"name":"open override val propertySpecs: List<PropertySpec>","description":"com.squareup.kotlinpoet.TypeSpec.propertySpecs","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/property-specs.html","searchKeys":["propertySpecs","open override val propertySpecs: List<PropertySpec>","com.squareup.kotlinpoet.TypeSpec.propertySpecs"]},{"name":"open override val tags: MutableMap<KClass<*>, Any>","description":"com.squareup.kotlinpoet.AnnotationSpec.Builder.tags","location":"kotlinpoet/com.squareup.kotlinpoet/-annotation-spec/-builder/tags.html","searchKeys":["tags","open override val tags: MutableMap<KClass<*>, Any>","com.squareup.kotlinpoet.AnnotationSpec.Builder.tags"]},{"name":"open override val tags: MutableMap<KClass<*>, Any>","description":"com.squareup.kotlinpoet.FileSpec.Builder.tags","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/-builder/tags.html","searchKeys":["tags","open override val tags: MutableMap<KClass<*>, Any>","com.squareup.kotlinpoet.FileSpec.Builder.tags"]},{"name":"open override val tags: MutableMap<KClass<*>, Any>","description":"com.squareup.kotlinpoet.FunSpec.Builder.tags","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/tags.html","searchKeys":["tags","open override val tags: MutableMap<KClass<*>, Any>","com.squareup.kotlinpoet.FunSpec.Builder.tags"]},{"name":"open override val tags: MutableMap<KClass<*>, Any>","description":"com.squareup.kotlinpoet.ParameterSpec.Builder.tags","location":"kotlinpoet/com.squareup.kotlinpoet/-parameter-spec/-builder/tags.html","searchKeys":["tags","open override val tags: MutableMap<KClass<*>, Any>","com.squareup.kotlinpoet.ParameterSpec.Builder.tags"]},{"name":"open override val tags: MutableMap<KClass<*>, Any>","description":"com.squareup.kotlinpoet.PropertySpec.Builder.tags","location":"kotlinpoet/com.squareup.kotlinpoet/-property-spec/-builder/tags.html","searchKeys":["tags","open override val tags: MutableMap<KClass<*>, Any>","com.squareup.kotlinpoet.PropertySpec.Builder.tags"]},{"name":"open override val tags: MutableMap<KClass<*>, Any>","description":"com.squareup.kotlinpoet.TypeAliasSpec.Builder.tags","location":"kotlinpoet/com.squareup.kotlinpoet/-type-alias-spec/-builder/tags.html","searchKeys":["tags","open override val tags: MutableMap<KClass<*>, Any>","com.squareup.kotlinpoet.TypeAliasSpec.Builder.tags"]},{"name":"open override val tags: MutableMap<KClass<*>, Any>","description":"com.squareup.kotlinpoet.TypeSpec.Builder.tags","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-builder/tags.html","searchKeys":["tags","open override val tags: MutableMap<KClass<*>, Any>","com.squareup.kotlinpoet.TypeSpec.Builder.tags"]},{"name":"open override val typeSpecs: List<TypeSpec>","description":"com.squareup.kotlinpoet.FileSpec.typeSpecs","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/type-specs.html","searchKeys":["typeSpecs","open override val typeSpecs: List<TypeSpec>","com.squareup.kotlinpoet.FileSpec.typeSpecs"]},{"name":"open override val typeSpecs: List<TypeSpec>","description":"com.squareup.kotlinpoet.TypeSpec.typeSpecs","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/type-specs.html","searchKeys":["typeSpecs","open override val typeSpecs: List<TypeSpec>","com.squareup.kotlinpoet.TypeSpec.typeSpecs"]},{"name":"open val tags: Map<KClass<*>, Any>","description":"com.squareup.kotlinpoet.Taggable.tags","location":"kotlinpoet/com.squareup.kotlinpoet/-taggable/tags.html","searchKeys":["tags","open val tags: Map<KClass<*>, Any>","com.squareup.kotlinpoet.Taggable.tags"]},{"name":"operator fun contains(tag: Any): Boolean","description":"com.squareup.kotlinpoet.NameAllocator.contains","location":"kotlinpoet/com.squareup.kotlinpoet/-name-allocator/contains.html","searchKeys":["contains","operator fun contains(tag: Any): Boolean","com.squareup.kotlinpoet.NameAllocator.contains"]},{"name":"operator fun get(tag: Any): String","description":"com.squareup.kotlinpoet.NameAllocator.get","location":"kotlinpoet/com.squareup.kotlinpoet/-name-allocator/get.html","searchKeys":["get","operator fun get(tag: Any): String","com.squareup.kotlinpoet.NameAllocator.get"]},{"name":"operator fun invoke(name: String, bounds: Iterable<KClass<*>>, variance: KModifier? = null): TypeVariableName","description":"com.squareup.kotlinpoet.TypeVariableName.Companion.invoke","location":"kotlinpoet/com.squareup.kotlinpoet/-type-variable-name/-companion/invoke.html","searchKeys":["invoke","operator fun invoke(name: String, bounds: Iterable<KClass<*>>, variance: KModifier? = null): TypeVariableName","com.squareup.kotlinpoet.TypeVariableName.Companion.invoke"]},{"name":"operator fun invoke(name: String, bounds: Iterable<Type>, variance: KModifier? = null): TypeVariableName","description":"com.squareup.kotlinpoet.TypeVariableName.Companion.invoke","location":"kotlinpoet/com.squareup.kotlinpoet/-type-variable-name/-companion/invoke.html","searchKeys":["invoke","operator fun invoke(name: String, bounds: Iterable<Type>, variance: KModifier? = null): TypeVariableName","com.squareup.kotlinpoet.TypeVariableName.Companion.invoke"]},{"name":"operator fun invoke(name: String, bounds: List<TypeName>, variance: KModifier? = null): TypeVariableName","description":"com.squareup.kotlinpoet.TypeVariableName.Companion.invoke","location":"kotlinpoet/com.squareup.kotlinpoet/-type-variable-name/-companion/invoke.html","searchKeys":["invoke","operator fun invoke(name: String, bounds: List<TypeName>, variance: KModifier? = null): TypeVariableName","com.squareup.kotlinpoet.TypeVariableName.Companion.invoke"]},{"name":"operator fun invoke(name: String, vararg bounds: KClass<*>, variance: KModifier? = null): TypeVariableName","description":"com.squareup.kotlinpoet.TypeVariableName.Companion.invoke","location":"kotlinpoet/com.squareup.kotlinpoet/-type-variable-name/-companion/invoke.html","searchKeys":["invoke","operator fun invoke(name: String, vararg bounds: KClass<*>, variance: KModifier? = null): TypeVariableName","com.squareup.kotlinpoet.TypeVariableName.Companion.invoke"]},{"name":"operator fun invoke(name: String, vararg bounds: Type, variance: KModifier? = null): TypeVariableName","description":"com.squareup.kotlinpoet.TypeVariableName.Companion.invoke","location":"kotlinpoet/com.squareup.kotlinpoet/-type-variable-name/-companion/invoke.html","searchKeys":["invoke","operator fun invoke(name: String, vararg bounds: Type, variance: KModifier? = null): TypeVariableName","com.squareup.kotlinpoet.TypeVariableName.Companion.invoke"]},{"name":"operator fun invoke(name: String, vararg bounds: TypeName, variance: KModifier? = null): TypeVariableName","description":"com.squareup.kotlinpoet.TypeVariableName.Companion.invoke","location":"kotlinpoet/com.squareup.kotlinpoet/-type-variable-name/-companion/invoke.html","searchKeys":["invoke","operator fun invoke(name: String, vararg bounds: TypeName, variance: KModifier? = null): TypeVariableName","com.squareup.kotlinpoet.TypeVariableName.Companion.invoke"]},{"name":"operator fun invoke(name: String, variance: KModifier? = null): TypeVariableName","description":"com.squareup.kotlinpoet.TypeVariableName.Companion.invoke","location":"kotlinpoet/com.squareup.kotlinpoet/-type-variable-name/-companion/invoke.html","searchKeys":["invoke","operator fun invoke(name: String, variance: KModifier? = null): TypeVariableName","com.squareup.kotlinpoet.TypeVariableName.Companion.invoke"]},{"name":"sealed class TypeName : Taggable, Annotatable","description":"com.squareup.kotlinpoet.TypeName","location":"kotlinpoet/com.squareup.kotlinpoet/-type-name/index.html","searchKeys":["TypeName","sealed class TypeName : Taggable, Annotatable","com.squareup.kotlinpoet.TypeName"]},{"name":"val ANNOTATION: ClassName","description":"com.squareup.kotlinpoet.ANNOTATION","location":"kotlinpoet/com.squareup.kotlinpoet/-a-n-n-o-t-a-t-i-o-n.html","searchKeys":["ANNOTATION","val ANNOTATION: ClassName","com.squareup.kotlinpoet.ANNOTATION"]},{"name":"val ANY: ClassName","description":"com.squareup.kotlinpoet.ANY","location":"kotlinpoet/com.squareup.kotlinpoet/-a-n-y.html","searchKeys":["ANY","val ANY: ClassName","com.squareup.kotlinpoet.ANY"]},{"name":"val ARRAY: ClassName","description":"com.squareup.kotlinpoet.ARRAY","location":"kotlinpoet/com.squareup.kotlinpoet/-a-r-r-a-y.html","searchKeys":["ARRAY","val ARRAY: ClassName","com.squareup.kotlinpoet.ARRAY"]},{"name":"val BOOLEAN: ClassName","description":"com.squareup.kotlinpoet.BOOLEAN","location":"kotlinpoet/com.squareup.kotlinpoet/-b-o-o-l-e-a-n.html","searchKeys":["BOOLEAN","val BOOLEAN: ClassName","com.squareup.kotlinpoet.BOOLEAN"]},{"name":"val BOOLEAN_ARRAY: ClassName","description":"com.squareup.kotlinpoet.BOOLEAN_ARRAY","location":"kotlinpoet/com.squareup.kotlinpoet/-b-o-o-l-e-a-n_-a-r-r-a-y.html","searchKeys":["BOOLEAN_ARRAY","val BOOLEAN_ARRAY: ClassName","com.squareup.kotlinpoet.BOOLEAN_ARRAY"]},{"name":"val BYTE: ClassName","description":"com.squareup.kotlinpoet.BYTE","location":"kotlinpoet/com.squareup.kotlinpoet/-b-y-t-e.html","searchKeys":["BYTE","val BYTE: ClassName","com.squareup.kotlinpoet.BYTE"]},{"name":"val BYTE_ARRAY: ClassName","description":"com.squareup.kotlinpoet.BYTE_ARRAY","location":"kotlinpoet/com.squareup.kotlinpoet/-b-y-t-e_-a-r-r-a-y.html","searchKeys":["BYTE_ARRAY","val BYTE_ARRAY: ClassName","com.squareup.kotlinpoet.BYTE_ARRAY"]},{"name":"val CHAR: ClassName","description":"com.squareup.kotlinpoet.CHAR","location":"kotlinpoet/com.squareup.kotlinpoet/-c-h-a-r.html","searchKeys":["CHAR","val CHAR: ClassName","com.squareup.kotlinpoet.CHAR"]},{"name":"val CHAR_ARRAY: ClassName","description":"com.squareup.kotlinpoet.CHAR_ARRAY","location":"kotlinpoet/com.squareup.kotlinpoet/-c-h-a-r_-a-r-r-a-y.html","searchKeys":["CHAR_ARRAY","val CHAR_ARRAY: ClassName","com.squareup.kotlinpoet.CHAR_ARRAY"]},{"name":"val CHAR_SEQUENCE: ClassName","description":"com.squareup.kotlinpoet.CHAR_SEQUENCE","location":"kotlinpoet/com.squareup.kotlinpoet/-c-h-a-r_-s-e-q-u-e-n-c-e.html","searchKeys":["CHAR_SEQUENCE","val CHAR_SEQUENCE: ClassName","com.squareup.kotlinpoet.CHAR_SEQUENCE"]},{"name":"val COLLECTION: ClassName","description":"com.squareup.kotlinpoet.COLLECTION","location":"kotlinpoet/com.squareup.kotlinpoet/-c-o-l-l-e-c-t-i-o-n.html","searchKeys":["COLLECTION","val COLLECTION: ClassName","com.squareup.kotlinpoet.COLLECTION"]},{"name":"val COMPARABLE: ClassName","description":"com.squareup.kotlinpoet.COMPARABLE","location":"kotlinpoet/com.squareup.kotlinpoet/-c-o-m-p-a-r-a-b-l-e.html","searchKeys":["COMPARABLE","val COMPARABLE: ClassName","com.squareup.kotlinpoet.COMPARABLE"]},{"name":"val DOUBLE: ClassName","description":"com.squareup.kotlinpoet.DOUBLE","location":"kotlinpoet/com.squareup.kotlinpoet/-d-o-u-b-l-e.html","searchKeys":["DOUBLE","val DOUBLE: ClassName","com.squareup.kotlinpoet.DOUBLE"]},{"name":"val DOUBLE_ARRAY: ClassName","description":"com.squareup.kotlinpoet.DOUBLE_ARRAY","location":"kotlinpoet/com.squareup.kotlinpoet/-d-o-u-b-l-e_-a-r-r-a-y.html","searchKeys":["DOUBLE_ARRAY","val DOUBLE_ARRAY: ClassName","com.squareup.kotlinpoet.DOUBLE_ARRAY"]},{"name":"val DYNAMIC: Dynamic","description":"com.squareup.kotlinpoet.DYNAMIC","location":"kotlinpoet/com.squareup.kotlinpoet/-d-y-n-a-m-i-c.html","searchKeys":["DYNAMIC","val DYNAMIC: Dynamic","com.squareup.kotlinpoet.DYNAMIC"]},{"name":"val ENUM: ClassName","description":"com.squareup.kotlinpoet.ENUM","location":"kotlinpoet/com.squareup.kotlinpoet/-e-n-u-m.html","searchKeys":["ENUM","val ENUM: ClassName","com.squareup.kotlinpoet.ENUM"]},{"name":"val FLOAT: ClassName","description":"com.squareup.kotlinpoet.FLOAT","location":"kotlinpoet/com.squareup.kotlinpoet/-f-l-o-a-t.html","searchKeys":["FLOAT","val FLOAT: ClassName","com.squareup.kotlinpoet.FLOAT"]},{"name":"val FLOAT_ARRAY: ClassName","description":"com.squareup.kotlinpoet.FLOAT_ARRAY","location":"kotlinpoet/com.squareup.kotlinpoet/-f-l-o-a-t_-a-r-r-a-y.html","searchKeys":["FLOAT_ARRAY","val FLOAT_ARRAY: ClassName","com.squareup.kotlinpoet.FLOAT_ARRAY"]},{"name":"val INT: ClassName","description":"com.squareup.kotlinpoet.INT","location":"kotlinpoet/com.squareup.kotlinpoet/-i-n-t.html","searchKeys":["INT","val INT: ClassName","com.squareup.kotlinpoet.INT"]},{"name":"val INT_ARRAY: ClassName","description":"com.squareup.kotlinpoet.INT_ARRAY","location":"kotlinpoet/com.squareup.kotlinpoet/-i-n-t_-a-r-r-a-y.html","searchKeys":["INT_ARRAY","val INT_ARRAY: ClassName","com.squareup.kotlinpoet.INT_ARRAY"]},{"name":"val ITERABLE: ClassName","description":"com.squareup.kotlinpoet.ITERABLE","location":"kotlinpoet/com.squareup.kotlinpoet/-i-t-e-r-a-b-l-e.html","searchKeys":["ITERABLE","val ITERABLE: ClassName","com.squareup.kotlinpoet.ITERABLE"]},{"name":"val LIST: ClassName","description":"com.squareup.kotlinpoet.LIST","location":"kotlinpoet/com.squareup.kotlinpoet/-l-i-s-t.html","searchKeys":["LIST","val LIST: ClassName","com.squareup.kotlinpoet.LIST"]},{"name":"val LONG: ClassName","description":"com.squareup.kotlinpoet.LONG","location":"kotlinpoet/com.squareup.kotlinpoet/-l-o-n-g.html","searchKeys":["LONG","val LONG: ClassName","com.squareup.kotlinpoet.LONG"]},{"name":"val LONG_ARRAY: ClassName","description":"com.squareup.kotlinpoet.LONG_ARRAY","location":"kotlinpoet/com.squareup.kotlinpoet/-l-o-n-g_-a-r-r-a-y.html","searchKeys":["LONG_ARRAY","val LONG_ARRAY: ClassName","com.squareup.kotlinpoet.LONG_ARRAY"]},{"name":"val MAP: ClassName","description":"com.squareup.kotlinpoet.MAP","location":"kotlinpoet/com.squareup.kotlinpoet/-m-a-p.html","searchKeys":["MAP","val MAP: ClassName","com.squareup.kotlinpoet.MAP"]},{"name":"val MAP_ENTRY: ClassName","description":"com.squareup.kotlinpoet.MAP_ENTRY","location":"kotlinpoet/com.squareup.kotlinpoet/-m-a-p_-e-n-t-r-y.html","searchKeys":["MAP_ENTRY","val MAP_ENTRY: ClassName","com.squareup.kotlinpoet.MAP_ENTRY"]},{"name":"val MUTABLE_COLLECTION: ClassName","description":"com.squareup.kotlinpoet.MUTABLE_COLLECTION","location":"kotlinpoet/com.squareup.kotlinpoet/-m-u-t-a-b-l-e_-c-o-l-l-e-c-t-i-o-n.html","searchKeys":["MUTABLE_COLLECTION","val MUTABLE_COLLECTION: ClassName","com.squareup.kotlinpoet.MUTABLE_COLLECTION"]},{"name":"val MUTABLE_ITERABLE: ClassName","description":"com.squareup.kotlinpoet.MUTABLE_ITERABLE","location":"kotlinpoet/com.squareup.kotlinpoet/-m-u-t-a-b-l-e_-i-t-e-r-a-b-l-e.html","searchKeys":["MUTABLE_ITERABLE","val MUTABLE_ITERABLE: ClassName","com.squareup.kotlinpoet.MUTABLE_ITERABLE"]},{"name":"val MUTABLE_LIST: ClassName","description":"com.squareup.kotlinpoet.MUTABLE_LIST","location":"kotlinpoet/com.squareup.kotlinpoet/-m-u-t-a-b-l-e_-l-i-s-t.html","searchKeys":["MUTABLE_LIST","val MUTABLE_LIST: ClassName","com.squareup.kotlinpoet.MUTABLE_LIST"]},{"name":"val MUTABLE_MAP: ClassName","description":"com.squareup.kotlinpoet.MUTABLE_MAP","location":"kotlinpoet/com.squareup.kotlinpoet/-m-u-t-a-b-l-e_-m-a-p.html","searchKeys":["MUTABLE_MAP","val MUTABLE_MAP: ClassName","com.squareup.kotlinpoet.MUTABLE_MAP"]},{"name":"val MUTABLE_MAP_ENTRY: ClassName","description":"com.squareup.kotlinpoet.MUTABLE_MAP_ENTRY","location":"kotlinpoet/com.squareup.kotlinpoet/-m-u-t-a-b-l-e_-m-a-p_-e-n-t-r-y.html","searchKeys":["MUTABLE_MAP_ENTRY","val MUTABLE_MAP_ENTRY: ClassName","com.squareup.kotlinpoet.MUTABLE_MAP_ENTRY"]},{"name":"val MUTABLE_SET: ClassName","description":"com.squareup.kotlinpoet.MUTABLE_SET","location":"kotlinpoet/com.squareup.kotlinpoet/-m-u-t-a-b-l-e_-s-e-t.html","searchKeys":["MUTABLE_SET","val MUTABLE_SET: ClassName","com.squareup.kotlinpoet.MUTABLE_SET"]},{"name":"val NOTHING: ClassName","description":"com.squareup.kotlinpoet.NOTHING","location":"kotlinpoet/com.squareup.kotlinpoet/-n-o-t-h-i-n-g.html","searchKeys":["NOTHING","val NOTHING: ClassName","com.squareup.kotlinpoet.NOTHING"]},{"name":"val NUMBER: ClassName","description":"com.squareup.kotlinpoet.NUMBER","location":"kotlinpoet/com.squareup.kotlinpoet/-n-u-m-b-e-r.html","searchKeys":["NUMBER","val NUMBER: ClassName","com.squareup.kotlinpoet.NUMBER"]},{"name":"val SET: ClassName","description":"com.squareup.kotlinpoet.SET","location":"kotlinpoet/com.squareup.kotlinpoet/-s-e-t.html","searchKeys":["SET","val SET: ClassName","com.squareup.kotlinpoet.SET"]},{"name":"val SHORT: ClassName","description":"com.squareup.kotlinpoet.SHORT","location":"kotlinpoet/com.squareup.kotlinpoet/-s-h-o-r-t.html","searchKeys":["SHORT","val SHORT: ClassName","com.squareup.kotlinpoet.SHORT"]},{"name":"val SHORT_ARRAY: ClassName","description":"com.squareup.kotlinpoet.SHORT_ARRAY","location":"kotlinpoet/com.squareup.kotlinpoet/-s-h-o-r-t_-a-r-r-a-y.html","searchKeys":["SHORT_ARRAY","val SHORT_ARRAY: ClassName","com.squareup.kotlinpoet.SHORT_ARRAY"]},{"name":"val STAR: WildcardTypeName","description":"com.squareup.kotlinpoet.STAR","location":"kotlinpoet/com.squareup.kotlinpoet/-s-t-a-r.html","searchKeys":["STAR","val STAR: WildcardTypeName","com.squareup.kotlinpoet.STAR"]},{"name":"val STRING: ClassName","description":"com.squareup.kotlinpoet.STRING","location":"kotlinpoet/com.squareup.kotlinpoet/-s-t-r-i-n-g.html","searchKeys":["STRING","val STRING: ClassName","com.squareup.kotlinpoet.STRING"]},{"name":"val THROWABLE: ClassName","description":"com.squareup.kotlinpoet.THROWABLE","location":"kotlinpoet/com.squareup.kotlinpoet/-t-h-r-o-w-a-b-l-e.html","searchKeys":["THROWABLE","val THROWABLE: ClassName","com.squareup.kotlinpoet.THROWABLE"]},{"name":"val UNIT: ClassName","description":"com.squareup.kotlinpoet.UNIT","location":"kotlinpoet/com.squareup.kotlinpoet/-u-n-i-t.html","searchKeys":["UNIT","val UNIT: ClassName","com.squareup.kotlinpoet.UNIT"]},{"name":"val U_BYTE: ClassName","description":"com.squareup.kotlinpoet.U_BYTE","location":"kotlinpoet/com.squareup.kotlinpoet/-u_-b-y-t-e.html","searchKeys":["U_BYTE","val U_BYTE: ClassName","com.squareup.kotlinpoet.U_BYTE"]},{"name":"val U_BYTE_ARRAY: ClassName","description":"com.squareup.kotlinpoet.U_BYTE_ARRAY","location":"kotlinpoet/com.squareup.kotlinpoet/-u_-b-y-t-e_-a-r-r-a-y.html","searchKeys":["U_BYTE_ARRAY","val U_BYTE_ARRAY: ClassName","com.squareup.kotlinpoet.U_BYTE_ARRAY"]},{"name":"val U_INT: ClassName","description":"com.squareup.kotlinpoet.U_INT","location":"kotlinpoet/com.squareup.kotlinpoet/-u_-i-n-t.html","searchKeys":["U_INT","val U_INT: ClassName","com.squareup.kotlinpoet.U_INT"]},{"name":"val U_INT_ARRAY: ClassName","description":"com.squareup.kotlinpoet.U_INT_ARRAY","location":"kotlinpoet/com.squareup.kotlinpoet/-u_-i-n-t_-a-r-r-a-y.html","searchKeys":["U_INT_ARRAY","val U_INT_ARRAY: ClassName","com.squareup.kotlinpoet.U_INT_ARRAY"]},{"name":"val U_LONG: ClassName","description":"com.squareup.kotlinpoet.U_LONG","location":"kotlinpoet/com.squareup.kotlinpoet/-u_-l-o-n-g.html","searchKeys":["U_LONG","val U_LONG: ClassName","com.squareup.kotlinpoet.U_LONG"]},{"name":"val U_LONG_ARRAY: ClassName","description":"com.squareup.kotlinpoet.U_LONG_ARRAY","location":"kotlinpoet/com.squareup.kotlinpoet/-u_-l-o-n-g_-a-r-r-a-y.html","searchKeys":["U_LONG_ARRAY","val U_LONG_ARRAY: ClassName","com.squareup.kotlinpoet.U_LONG_ARRAY"]},{"name":"val U_SHORT: ClassName","description":"com.squareup.kotlinpoet.U_SHORT","location":"kotlinpoet/com.squareup.kotlinpoet/-u_-s-h-o-r-t.html","searchKeys":["U_SHORT","val U_SHORT: ClassName","com.squareup.kotlinpoet.U_SHORT"]},{"name":"val U_SHORT_ARRAY: ClassName","description":"com.squareup.kotlinpoet.U_SHORT_ARRAY","location":"kotlinpoet/com.squareup.kotlinpoet/-u_-s-h-o-r-t_-a-r-r-a-y.html","searchKeys":["U_SHORT_ARRAY","val U_SHORT_ARRAY: ClassName","com.squareup.kotlinpoet.U_SHORT_ARRAY"]},{"name":"val abbreviatedType: TypeName","description":"com.squareup.kotlinpoet.tags.TypeAliasTag.abbreviatedType","location":"kotlinpoet/com.squareup.kotlinpoet.tags/-type-alias-tag/abbreviated-type.html","searchKeys":["abbreviatedType","val abbreviatedType: TypeName","com.squareup.kotlinpoet.tags.TypeAliasTag.abbreviatedType"]},{"name":"val alias: String?","description":"com.squareup.kotlinpoet.Import.alias","location":"kotlinpoet/com.squareup.kotlinpoet/-import/alias.html","searchKeys":["alias","val alias: String?","com.squareup.kotlinpoet.Import.alias"]},{"name":"val body: CodeBlock","description":"com.squareup.kotlinpoet.FileSpec.body","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/body.html","searchKeys":["body","val body: CodeBlock","com.squareup.kotlinpoet.FileSpec.body"]},{"name":"val body: CodeBlock","description":"com.squareup.kotlinpoet.FunSpec.body","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/body.html","searchKeys":["body","val body: CodeBlock","com.squareup.kotlinpoet.FunSpec.body"]},{"name":"val bounds: List<TypeName>","description":"com.squareup.kotlinpoet.TypeVariableName.bounds","location":"kotlinpoet/com.squareup.kotlinpoet/-type-variable-name/bounds.html","searchKeys":["bounds","val bounds: List<TypeName>","com.squareup.kotlinpoet.TypeVariableName.bounds"]},{"name":"val canonicalName: String","description":"com.squareup.kotlinpoet.ClassName.canonicalName","location":"kotlinpoet/com.squareup.kotlinpoet/-class-name/canonical-name.html","searchKeys":["canonicalName","val canonicalName: String","com.squareup.kotlinpoet.ClassName.canonicalName"]},{"name":"val canonicalName: String","description":"com.squareup.kotlinpoet.MemberName.canonicalName","location":"kotlinpoet/com.squareup.kotlinpoet/-member-name/canonical-name.html","searchKeys":["canonicalName","val canonicalName: String","com.squareup.kotlinpoet.MemberName.canonicalName"]},{"name":"val comment: CodeBlock","description":"com.squareup.kotlinpoet.FileSpec.comment","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/comment.html","searchKeys":["comment","val comment: CodeBlock","com.squareup.kotlinpoet.FileSpec.comment"]},{"name":"val contextParameters: List<TypeName>","description":"com.squareup.kotlinpoet.LambdaTypeName.contextParameters","location":"kotlinpoet/com.squareup.kotlinpoet/-lambda-type-name/context-parameters.html","searchKeys":["contextParameters","val contextParameters: List<TypeName>","com.squareup.kotlinpoet.LambdaTypeName.contextParameters"]},{"name":"val contextReceivers: List<TypeName>","description":"com.squareup.kotlinpoet.LambdaTypeName.contextReceivers","location":"kotlinpoet/com.squareup.kotlinpoet/-lambda-type-name/context-receivers.html","searchKeys":["contextReceivers","val contextReceivers: List<TypeName>","com.squareup.kotlinpoet.LambdaTypeName.contextReceivers"]},{"name":"val defaultImports: MutableSet<String>","description":"com.squareup.kotlinpoet.FileSpec.Builder.defaultImports","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/-builder/default-imports.html","searchKeys":["defaultImports","val defaultImports: MutableSet<String>","com.squareup.kotlinpoet.FileSpec.Builder.defaultImports"]},{"name":"val defaultImports: Set<String>","description":"com.squareup.kotlinpoet.FileSpec.defaultImports","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/default-imports.html","searchKeys":["defaultImports","val defaultImports: Set<String>","com.squareup.kotlinpoet.FileSpec.defaultImports"]},{"name":"val defaultValue: CodeBlock?","description":"com.squareup.kotlinpoet.ParameterSpec.defaultValue","location":"kotlinpoet/com.squareup.kotlinpoet/-parameter-spec/default-value.html","searchKeys":["defaultValue","val defaultValue: CodeBlock?","com.squareup.kotlinpoet.ParameterSpec.defaultValue"]},{"name":"val delegateConstructor: String?","description":"com.squareup.kotlinpoet.FunSpec.delegateConstructor","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/delegate-constructor.html","searchKeys":["delegateConstructor","val delegateConstructor: String?","com.squareup.kotlinpoet.FunSpec.delegateConstructor"]},{"name":"val delegateConstructorArguments: List<CodeBlock>","description":"com.squareup.kotlinpoet.FunSpec.delegateConstructorArguments","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/delegate-constructor-arguments.html","searchKeys":["delegateConstructorArguments","val delegateConstructorArguments: List<CodeBlock>","com.squareup.kotlinpoet.FunSpec.delegateConstructorArguments"]},{"name":"val delegated: Boolean","description":"com.squareup.kotlinpoet.PropertySpec.delegated","location":"kotlinpoet/com.squareup.kotlinpoet/-property-spec/delegated.html","searchKeys":["delegated","val delegated: Boolean","com.squareup.kotlinpoet.PropertySpec.delegated"]},{"name":"val enclosingClassName: ClassName?","description":"com.squareup.kotlinpoet.MemberName.enclosingClassName","location":"kotlinpoet/com.squareup.kotlinpoet/-member-name/enclosing-class-name.html","searchKeys":["enclosingClassName","val enclosingClassName: ClassName?","com.squareup.kotlinpoet.MemberName.enclosingClassName"]},{"name":"val entries: EnumEntries<AnnotationSpec.UseSiteTarget>","description":"com.squareup.kotlinpoet.AnnotationSpec.UseSiteTarget.entries","location":"kotlinpoet/com.squareup.kotlinpoet/-annotation-spec/-use-site-target/entries.html","searchKeys":["entries","val entries: EnumEntries<AnnotationSpec.UseSiteTarget>","com.squareup.kotlinpoet.AnnotationSpec.UseSiteTarget.entries"]},{"name":"val entries: EnumEntries<KModifier>","description":"com.squareup.kotlinpoet.KModifier.entries","location":"kotlinpoet/com.squareup.kotlinpoet/-k-modifier/entries.html","searchKeys":["entries","val entries: EnumEntries<KModifier>","com.squareup.kotlinpoet.KModifier.entries"]},{"name":"val entries: EnumEntries<KOperator>","description":"com.squareup.kotlinpoet.KOperator.entries","location":"kotlinpoet/com.squareup.kotlinpoet/-k-operator/entries.html","searchKeys":["entries","val entries: EnumEntries<KOperator>","com.squareup.kotlinpoet.KOperator.entries"]},{"name":"val entries: EnumEntries<TypeSpec.Kind>","description":"com.squareup.kotlinpoet.TypeSpec.Kind.entries","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-kind/entries.html","searchKeys":["entries","val entries: EnumEntries<TypeSpec.Kind>","com.squareup.kotlinpoet.TypeSpec.Kind.entries"]},{"name":"val enumConstants: Map<String, TypeSpec>","description":"com.squareup.kotlinpoet.TypeSpec.enumConstants","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/enum-constants.html","searchKeys":["enumConstants","val enumConstants: Map<String, TypeSpec>","com.squareup.kotlinpoet.TypeSpec.enumConstants"]},{"name":"val enumConstants: MutableMap<String, TypeSpec>","description":"com.squareup.kotlinpoet.TypeSpec.Builder.enumConstants","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-builder/enum-constants.html","searchKeys":["enumConstants","val enumConstants: MutableMap<String, TypeSpec>","com.squareup.kotlinpoet.TypeSpec.Builder.enumConstants"]},{"name":"val funSpecs: MutableList<FunSpec>","description":"com.squareup.kotlinpoet.TypeSpec.Builder.funSpecs","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-builder/fun-specs.html","searchKeys":["funSpecs","val funSpecs: MutableList<FunSpec>","com.squareup.kotlinpoet.TypeSpec.Builder.funSpecs"]},{"name":"val getter: FunSpec?","description":"com.squareup.kotlinpoet.PropertySpec.getter","location":"kotlinpoet/com.squareup.kotlinpoet/-property-spec/getter.html","searchKeys":["getter","val getter: FunSpec?","com.squareup.kotlinpoet.PropertySpec.getter"]},{"name":"val imports: List<Import>","description":"com.squareup.kotlinpoet.FileSpec.Builder.imports","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/-builder/imports.html","searchKeys":["imports","val imports: List<Import>","com.squareup.kotlinpoet.FileSpec.Builder.imports"]},{"name":"val inTypes: List<TypeName>","description":"com.squareup.kotlinpoet.WildcardTypeName.inTypes","location":"kotlinpoet/com.squareup.kotlinpoet/-wildcard-type-name/in-types.html","searchKeys":["inTypes","val inTypes: List<TypeName>","com.squareup.kotlinpoet.WildcardTypeName.inTypes"]},{"name":"val initializer: CodeBlock?","description":"com.squareup.kotlinpoet.PropertySpec.initializer","location":"kotlinpoet/com.squareup.kotlinpoet/-property-spec/initializer.html","searchKeys":["initializer","val initializer: CodeBlock?","com.squareup.kotlinpoet.PropertySpec.initializer"]},{"name":"val initializerBlock: CodeBlock","description":"com.squareup.kotlinpoet.TypeSpec.initializerBlock","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/initializer-block.html","searchKeys":["initializerBlock","val initializerBlock: CodeBlock","com.squareup.kotlinpoet.TypeSpec.initializerBlock"]},{"name":"val initializerIndex: Int","description":"com.squareup.kotlinpoet.TypeSpec.initializerIndex","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/initializer-index.html","searchKeys":["initializerIndex","val initializerIndex: Int","com.squareup.kotlinpoet.TypeSpec.initializerIndex"]},{"name":"val isAccessor: Boolean","description":"com.squareup.kotlinpoet.FunSpec.isAccessor","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/is-accessor.html","searchKeys":["isAccessor","val isAccessor: Boolean","com.squareup.kotlinpoet.FunSpec.isAccessor"]},{"name":"val isAnnotated: Boolean","description":"com.squareup.kotlinpoet.TypeName.isAnnotated","location":"kotlinpoet/com.squareup.kotlinpoet/-type-name/is-annotated.html","searchKeys":["isAnnotated","val isAnnotated: Boolean","com.squareup.kotlinpoet.TypeName.isAnnotated"]},{"name":"val isAnnotation: Boolean","description":"com.squareup.kotlinpoet.TypeSpec.isAnnotation","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/is-annotation.html","searchKeys":["isAnnotation","val isAnnotation: Boolean","com.squareup.kotlinpoet.TypeSpec.isAnnotation"]},{"name":"val isAnonymousClass: Boolean","description":"com.squareup.kotlinpoet.TypeSpec.isAnonymousClass","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/is-anonymous-class.html","searchKeys":["isAnonymousClass","val isAnonymousClass: Boolean","com.squareup.kotlinpoet.TypeSpec.isAnonymousClass"]},{"name":"val isCompanion: Boolean","description":"com.squareup.kotlinpoet.TypeSpec.isCompanion","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/is-companion.html","searchKeys":["isCompanion","val isCompanion: Boolean","com.squareup.kotlinpoet.TypeSpec.isCompanion"]},{"name":"val isConstructor: Boolean","description":"com.squareup.kotlinpoet.FunSpec.isConstructor","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/is-constructor.html","searchKeys":["isConstructor","val isConstructor: Boolean","com.squareup.kotlinpoet.FunSpec.isConstructor"]},{"name":"val isEnum: Boolean","description":"com.squareup.kotlinpoet.TypeSpec.isEnum","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/is-enum.html","searchKeys":["isEnum","val isEnum: Boolean","com.squareup.kotlinpoet.TypeSpec.isEnum"]},{"name":"val isExtension: Boolean","description":"com.squareup.kotlinpoet.MemberName.isExtension","location":"kotlinpoet/com.squareup.kotlinpoet/-member-name/is-extension.html","searchKeys":["isExtension","val isExtension: Boolean","com.squareup.kotlinpoet.MemberName.isExtension"]},{"name":"val isFunctionalInterface: Boolean","description":"com.squareup.kotlinpoet.TypeSpec.isFunctionalInterface","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/is-functional-interface.html","searchKeys":["isFunctionalInterface","val isFunctionalInterface: Boolean","com.squareup.kotlinpoet.TypeSpec.isFunctionalInterface"]},{"name":"val isNullable: Boolean","description":"com.squareup.kotlinpoet.TypeName.isNullable","location":"kotlinpoet/com.squareup.kotlinpoet/-type-name/is-nullable.html","searchKeys":["isNullable","val isNullable: Boolean","com.squareup.kotlinpoet.TypeName.isNullable"]},{"name":"val isReified: Boolean","description":"com.squareup.kotlinpoet.TypeVariableName.isReified","location":"kotlinpoet/com.squareup.kotlinpoet/-type-variable-name/is-reified.html","searchKeys":["isReified","val isReified: Boolean","com.squareup.kotlinpoet.TypeVariableName.isReified"]},{"name":"val isScript: Boolean","description":"com.squareup.kotlinpoet.FileSpec.Builder.isScript","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/-builder/is-script.html","searchKeys":["isScript","val isScript: Boolean","com.squareup.kotlinpoet.FileSpec.Builder.isScript"]},{"name":"val isScript: Boolean","description":"com.squareup.kotlinpoet.FileSpec.isScript","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/is-script.html","searchKeys":["isScript","val isScript: Boolean","com.squareup.kotlinpoet.FileSpec.isScript"]},{"name":"val isSuspending: Boolean","description":"com.squareup.kotlinpoet.LambdaTypeName.isSuspending","location":"kotlinpoet/com.squareup.kotlinpoet/-lambda-type-name/is-suspending.html","searchKeys":["isSuspending","val isSuspending: Boolean","com.squareup.kotlinpoet.LambdaTypeName.isSuspending"]},{"name":"val kind: TypeSpec.Kind","description":"com.squareup.kotlinpoet.TypeSpec.kind","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/kind.html","searchKeys":["kind","val kind: TypeSpec.Kind","com.squareup.kotlinpoet.TypeSpec.kind"]},{"name":"val members: List<Any>","description":"com.squareup.kotlinpoet.FileSpec.members","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/members.html","searchKeys":["members","val members: List<Any>","com.squareup.kotlinpoet.FileSpec.members"]},{"name":"val members: List<CodeBlock>","description":"com.squareup.kotlinpoet.AnnotationSpec.members","location":"kotlinpoet/com.squareup.kotlinpoet/-annotation-spec/members.html","searchKeys":["members","val members: List<CodeBlock>","com.squareup.kotlinpoet.AnnotationSpec.members"]},{"name":"val members: MutableList<Any>","description":"com.squareup.kotlinpoet.FileSpec.Builder.members","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/-builder/members.html","searchKeys":["members","val members: MutableList<Any>","com.squareup.kotlinpoet.FileSpec.Builder.members"]},{"name":"val members: MutableList<CodeBlock>","description":"com.squareup.kotlinpoet.AnnotationSpec.Builder.members","location":"kotlinpoet/com.squareup.kotlinpoet/-annotation-spec/-builder/members.html","searchKeys":["members","val members: MutableList<CodeBlock>","com.squareup.kotlinpoet.AnnotationSpec.Builder.members"]},{"name":"val message: String","description":"com.squareup.kotlinpoet.DelicateKotlinPoetApi.message","location":"kotlinpoet/com.squareup.kotlinpoet/-delicate-kotlin-poet-api/message.html","searchKeys":["message","val message: String","com.squareup.kotlinpoet.DelicateKotlinPoetApi.message"]},{"name":"val modifiers: MutableList<KModifier>","description":"com.squareup.kotlinpoet.FunSpec.Builder.modifiers","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/modifiers.html","searchKeys":["modifiers","val modifiers: MutableList<KModifier>","com.squareup.kotlinpoet.FunSpec.Builder.modifiers"]},{"name":"val modifiers: MutableList<KModifier>","description":"com.squareup.kotlinpoet.ParameterSpec.Builder.modifiers","location":"kotlinpoet/com.squareup.kotlinpoet/-parameter-spec/-builder/modifiers.html","searchKeys":["modifiers","val modifiers: MutableList<KModifier>","com.squareup.kotlinpoet.ParameterSpec.Builder.modifiers"]},{"name":"val modifiers: MutableList<KModifier>","description":"com.squareup.kotlinpoet.PropertySpec.Builder.modifiers","location":"kotlinpoet/com.squareup.kotlinpoet/-property-spec/-builder/modifiers.html","searchKeys":["modifiers","val modifiers: MutableList<KModifier>","com.squareup.kotlinpoet.PropertySpec.Builder.modifiers"]},{"name":"val modifiers: MutableSet<KModifier>","description":"com.squareup.kotlinpoet.TypeAliasSpec.Builder.modifiers","location":"kotlinpoet/com.squareup.kotlinpoet/-type-alias-spec/-builder/modifiers.html","searchKeys":["modifiers","val modifiers: MutableSet<KModifier>","com.squareup.kotlinpoet.TypeAliasSpec.Builder.modifiers"]},{"name":"val modifiers: MutableSet<KModifier>","description":"com.squareup.kotlinpoet.TypeSpec.Builder.modifiers","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-builder/modifiers.html","searchKeys":["modifiers","val modifiers: MutableSet<KModifier>","com.squareup.kotlinpoet.TypeSpec.Builder.modifiers"]},{"name":"val modifiers: Set<KModifier>","description":"com.squareup.kotlinpoet.FunSpec.modifiers","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/modifiers.html","searchKeys":["modifiers","val modifiers: Set<KModifier>","com.squareup.kotlinpoet.FunSpec.modifiers"]},{"name":"val modifiers: Set<KModifier>","description":"com.squareup.kotlinpoet.ParameterSpec.modifiers","location":"kotlinpoet/com.squareup.kotlinpoet/-parameter-spec/modifiers.html","searchKeys":["modifiers","val modifiers: Set<KModifier>","com.squareup.kotlinpoet.ParameterSpec.modifiers"]},{"name":"val modifiers: Set<KModifier>","description":"com.squareup.kotlinpoet.PropertySpec.modifiers","location":"kotlinpoet/com.squareup.kotlinpoet/-property-spec/modifiers.html","searchKeys":["modifiers","val modifiers: Set<KModifier>","com.squareup.kotlinpoet.PropertySpec.modifiers"]},{"name":"val modifiers: Set<KModifier>","description":"com.squareup.kotlinpoet.TypeAliasSpec.modifiers","location":"kotlinpoet/com.squareup.kotlinpoet/-type-alias-spec/modifiers.html","searchKeys":["modifiers","val modifiers: Set<KModifier>","com.squareup.kotlinpoet.TypeAliasSpec.modifiers"]},{"name":"val modifiers: Set<KModifier>","description":"com.squareup.kotlinpoet.TypeSpec.modifiers","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/modifiers.html","searchKeys":["modifiers","val modifiers: Set<KModifier>","com.squareup.kotlinpoet.TypeSpec.modifiers"]},{"name":"val mutable: Boolean","description":"com.squareup.kotlinpoet.PropertySpec.mutable","location":"kotlinpoet/com.squareup.kotlinpoet/-property-spec/mutable.html","searchKeys":["mutable","val mutable: Boolean","com.squareup.kotlinpoet.PropertySpec.mutable"]},{"name":"val name: String","description":"com.squareup.kotlinpoet.ContextParameter.name","location":"kotlinpoet/com.squareup.kotlinpoet/-context-parameter/name.html","searchKeys":["name","val name: String","com.squareup.kotlinpoet.ContextParameter.name"]},{"name":"val name: String","description":"com.squareup.kotlinpoet.FileSpec.Builder.name","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/-builder/name.html","searchKeys":["name","val name: String","com.squareup.kotlinpoet.FileSpec.Builder.name"]},{"name":"val name: String","description":"com.squareup.kotlinpoet.FileSpec.name","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/name.html","searchKeys":["name","val name: String","com.squareup.kotlinpoet.FileSpec.name"]},{"name":"val name: String","description":"com.squareup.kotlinpoet.FunSpec.name","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/name.html","searchKeys":["name","val name: String","com.squareup.kotlinpoet.FunSpec.name"]},{"name":"val name: String","description":"com.squareup.kotlinpoet.ParameterSpec.name","location":"kotlinpoet/com.squareup.kotlinpoet/-parameter-spec/name.html","searchKeys":["name","val name: String","com.squareup.kotlinpoet.ParameterSpec.name"]},{"name":"val name: String","description":"com.squareup.kotlinpoet.PropertySpec.name","location":"kotlinpoet/com.squareup.kotlinpoet/-property-spec/name.html","searchKeys":["name","val name: String","com.squareup.kotlinpoet.PropertySpec.name"]},{"name":"val name: String","description":"com.squareup.kotlinpoet.TypeAliasSpec.name","location":"kotlinpoet/com.squareup.kotlinpoet/-type-alias-spec/name.html","searchKeys":["name","val name: String","com.squareup.kotlinpoet.TypeAliasSpec.name"]},{"name":"val name: String","description":"com.squareup.kotlinpoet.TypeVariableName.name","location":"kotlinpoet/com.squareup.kotlinpoet/-type-variable-name/name.html","searchKeys":["name","val name: String","com.squareup.kotlinpoet.TypeVariableName.name"]},{"name":"val name: String?","description":"com.squareup.kotlinpoet.TypeSpec.name","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/name.html","searchKeys":["name","val name: String?","com.squareup.kotlinpoet.TypeSpec.name"]},{"name":"val operator: KOperator?","description":"com.squareup.kotlinpoet.MemberName.operator","location":"kotlinpoet/com.squareup.kotlinpoet/-member-name/operator.html","searchKeys":["operator","val operator: KOperator?","com.squareup.kotlinpoet.MemberName.operator"]},{"name":"val outTypes: List<TypeName>","description":"com.squareup.kotlinpoet.WildcardTypeName.outTypes","location":"kotlinpoet/com.squareup.kotlinpoet/-wildcard-type-name/out-types.html","searchKeys":["outTypes","val outTypes: List<TypeName>","com.squareup.kotlinpoet.WildcardTypeName.outTypes"]},{"name":"val packageName: String","description":"com.squareup.kotlinpoet.ClassName.packageName","location":"kotlinpoet/com.squareup.kotlinpoet/-class-name/package-name.html","searchKeys":["packageName","val packageName: String","com.squareup.kotlinpoet.ClassName.packageName"]},{"name":"val packageName: String","description":"com.squareup.kotlinpoet.FileSpec.Builder.packageName","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/-builder/package-name.html","searchKeys":["packageName","val packageName: String","com.squareup.kotlinpoet.FileSpec.Builder.packageName"]},{"name":"val packageName: String","description":"com.squareup.kotlinpoet.FileSpec.packageName","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/package-name.html","searchKeys":["packageName","val packageName: String","com.squareup.kotlinpoet.FileSpec.packageName"]},{"name":"val packageName: String","description":"com.squareup.kotlinpoet.MemberName.packageName","location":"kotlinpoet/com.squareup.kotlinpoet/-member-name/package-name.html","searchKeys":["packageName","val packageName: String","com.squareup.kotlinpoet.MemberName.packageName"]},{"name":"val parameters: List<ParameterSpec>","description":"com.squareup.kotlinpoet.FunSpec.parameters","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/parameters.html","searchKeys":["parameters","val parameters: List<ParameterSpec>","com.squareup.kotlinpoet.FunSpec.parameters"]},{"name":"val parameters: List<ParameterSpec>","description":"com.squareup.kotlinpoet.LambdaTypeName.parameters","location":"kotlinpoet/com.squareup.kotlinpoet/-lambda-type-name/parameters.html","searchKeys":["parameters","val parameters: List<ParameterSpec>","com.squareup.kotlinpoet.LambdaTypeName.parameters"]},{"name":"val parameters: MutableList<ParameterSpec>","description":"com.squareup.kotlinpoet.FunSpec.Builder.parameters","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/parameters.html","searchKeys":["parameters","val parameters: MutableList<ParameterSpec>","com.squareup.kotlinpoet.FunSpec.Builder.parameters"]},{"name":"val primaryConstructor: FunSpec?","description":"com.squareup.kotlinpoet.TypeSpec.primaryConstructor","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/primary-constructor.html","searchKeys":["primaryConstructor","val primaryConstructor: FunSpec?","com.squareup.kotlinpoet.TypeSpec.primaryConstructor"]},{"name":"val propertySpecs: MutableList<PropertySpec>","description":"com.squareup.kotlinpoet.TypeSpec.Builder.propertySpecs","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-builder/property-specs.html","searchKeys":["propertySpecs","val propertySpecs: MutableList<PropertySpec>","com.squareup.kotlinpoet.TypeSpec.Builder.propertySpecs"]},{"name":"val qualifiedName: String","description":"com.squareup.kotlinpoet.Import.qualifiedName","location":"kotlinpoet/com.squareup.kotlinpoet/-import/qualified-name.html","searchKeys":["qualifiedName","val qualifiedName: String","com.squareup.kotlinpoet.Import.qualifiedName"]},{"name":"val rawType: ClassName","description":"com.squareup.kotlinpoet.ParameterizedTypeName.rawType","location":"kotlinpoet/com.squareup.kotlinpoet/-parameterized-type-name/raw-type.html","searchKeys":["rawType","val rawType: ClassName","com.squareup.kotlinpoet.ParameterizedTypeName.rawType"]},{"name":"val receiver: TypeName?","description":"com.squareup.kotlinpoet.LambdaTypeName.receiver","location":"kotlinpoet/com.squareup.kotlinpoet/-lambda-type-name/receiver.html","searchKeys":["receiver","val receiver: TypeName?","com.squareup.kotlinpoet.LambdaTypeName.receiver"]},{"name":"val receiverKdoc: CodeBlock","description":"com.squareup.kotlinpoet.FunSpec.receiverKdoc","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/receiver-kdoc.html","searchKeys":["receiverKdoc","val receiverKdoc: CodeBlock","com.squareup.kotlinpoet.FunSpec.receiverKdoc"]},{"name":"val receiverType: TypeName?","description":"com.squareup.kotlinpoet.FunSpec.receiverType","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/receiver-type.html","searchKeys":["receiverType","val receiverType: TypeName?","com.squareup.kotlinpoet.FunSpec.receiverType"]},{"name":"val receiverType: TypeName?","description":"com.squareup.kotlinpoet.PropertySpec.receiverType","location":"kotlinpoet/com.squareup.kotlinpoet/-property-spec/receiver-type.html","searchKeys":["receiverType","val receiverType: TypeName?","com.squareup.kotlinpoet.PropertySpec.receiverType"]},{"name":"val relativePath: String","description":"com.squareup.kotlinpoet.FileSpec.relativePath","location":"kotlinpoet/com.squareup.kotlinpoet/-file-spec/relative-path.html","searchKeys":["relativePath","val relativePath: String","com.squareup.kotlinpoet.FileSpec.relativePath"]},{"name":"val returnKdoc: CodeBlock","description":"com.squareup.kotlinpoet.FunSpec.returnKdoc","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/return-kdoc.html","searchKeys":["returnKdoc","val returnKdoc: CodeBlock","com.squareup.kotlinpoet.FunSpec.returnKdoc"]},{"name":"val returnType: TypeName","description":"com.squareup.kotlinpoet.FunSpec.returnType","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/return-type.html","searchKeys":["returnType","val returnType: TypeName","com.squareup.kotlinpoet.FunSpec.returnType"]},{"name":"val returnType: TypeName","description":"com.squareup.kotlinpoet.LambdaTypeName.returnType","location":"kotlinpoet/com.squareup.kotlinpoet/-lambda-type-name/return-type.html","searchKeys":["returnType","val returnType: TypeName","com.squareup.kotlinpoet.LambdaTypeName.returnType"]},{"name":"val setter: FunSpec?","description":"com.squareup.kotlinpoet.PropertySpec.setter","location":"kotlinpoet/com.squareup.kotlinpoet/-property-spec/setter.html","searchKeys":["setter","val setter: FunSpec?","com.squareup.kotlinpoet.PropertySpec.setter"]},{"name":"val simpleName: String","description":"com.squareup.kotlinpoet.ClassName.simpleName","location":"kotlinpoet/com.squareup.kotlinpoet/-class-name/simple-name.html","searchKeys":["simpleName","val simpleName: String","com.squareup.kotlinpoet.ClassName.simpleName"]},{"name":"val simpleName: String","description":"com.squareup.kotlinpoet.MemberName.simpleName","location":"kotlinpoet/com.squareup.kotlinpoet/-member-name/simple-name.html","searchKeys":["simpleName","val simpleName: String","com.squareup.kotlinpoet.MemberName.simpleName"]},{"name":"val simpleNames: List<String>","description":"com.squareup.kotlinpoet.ClassName.simpleNames","location":"kotlinpoet/com.squareup.kotlinpoet/-class-name/simple-names.html","searchKeys":["simpleNames","val simpleNames: List<String>","com.squareup.kotlinpoet.ClassName.simpleNames"]},{"name":"val superclass: TypeName","description":"com.squareup.kotlinpoet.TypeSpec.superclass","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/superclass.html","searchKeys":["superclass","val superclass: TypeName","com.squareup.kotlinpoet.TypeSpec.superclass"]},{"name":"val superclassConstructorParameters: List<CodeBlock>","description":"com.squareup.kotlinpoet.TypeSpec.superclassConstructorParameters","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/superclass-constructor-parameters.html","searchKeys":["superclassConstructorParameters","val superclassConstructorParameters: List<CodeBlock>","com.squareup.kotlinpoet.TypeSpec.superclassConstructorParameters"]},{"name":"val superclassConstructorParameters: MutableList<CodeBlock>","description":"com.squareup.kotlinpoet.TypeSpec.Builder.superclassConstructorParameters","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-builder/superclass-constructor-parameters.html","searchKeys":["superclassConstructorParameters","val superclassConstructorParameters: MutableList<CodeBlock>","com.squareup.kotlinpoet.TypeSpec.Builder.superclassConstructorParameters"]},{"name":"val superinterfaces: Map<TypeName, CodeBlock?>","description":"com.squareup.kotlinpoet.TypeSpec.superinterfaces","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/superinterfaces.html","searchKeys":["superinterfaces","val superinterfaces: Map<TypeName, CodeBlock?>","com.squareup.kotlinpoet.TypeSpec.superinterfaces"]},{"name":"val superinterfaces: MutableMap<TypeName, CodeBlock?>","description":"com.squareup.kotlinpoet.TypeSpec.Builder.superinterfaces","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-builder/superinterfaces.html","searchKeys":["superinterfaces","val superinterfaces: MutableMap<TypeName, CodeBlock?>","com.squareup.kotlinpoet.TypeSpec.Builder.superinterfaces"]},{"name":"val type: TypeName","description":"com.squareup.kotlinpoet.ContextParameter.type","location":"kotlinpoet/com.squareup.kotlinpoet/-context-parameter/type.html","searchKeys":["type","val type: TypeName","com.squareup.kotlinpoet.ContextParameter.type"]},{"name":"val type: TypeName","description":"com.squareup.kotlinpoet.ParameterSpec.type","location":"kotlinpoet/com.squareup.kotlinpoet/-parameter-spec/type.html","searchKeys":["type","val type: TypeName","com.squareup.kotlinpoet.ParameterSpec.type"]},{"name":"val type: TypeName","description":"com.squareup.kotlinpoet.PropertySpec.type","location":"kotlinpoet/com.squareup.kotlinpoet/-property-spec/type.html","searchKeys":["type","val type: TypeName","com.squareup.kotlinpoet.PropertySpec.type"]},{"name":"val type: TypeName","description":"com.squareup.kotlinpoet.TypeAliasSpec.type","location":"kotlinpoet/com.squareup.kotlinpoet/-type-alias-spec/type.html","searchKeys":["type","val type: TypeName","com.squareup.kotlinpoet.TypeAliasSpec.type"]},{"name":"val typeAliasSpecs: List<TypeAliasSpec>","description":"com.squareup.kotlinpoet.TypeSpec.typeAliasSpecs","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/type-alias-specs.html","searchKeys":["typeAliasSpecs","val typeAliasSpecs: List<TypeAliasSpec>","com.squareup.kotlinpoet.TypeSpec.typeAliasSpecs"]},{"name":"val typeAliasSpecs: MutableList<TypeAliasSpec>","description":"com.squareup.kotlinpoet.TypeSpec.Builder.typeAliasSpecs","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-builder/type-alias-specs.html","searchKeys":["typeAliasSpecs","val typeAliasSpecs: MutableList<TypeAliasSpec>","com.squareup.kotlinpoet.TypeSpec.Builder.typeAliasSpecs"]},{"name":"val typeArguments: List<TypeName>","description":"com.squareup.kotlinpoet.ParameterizedTypeName.typeArguments","location":"kotlinpoet/com.squareup.kotlinpoet/-parameterized-type-name/type-arguments.html","searchKeys":["typeArguments","val typeArguments: List<TypeName>","com.squareup.kotlinpoet.ParameterizedTypeName.typeArguments"]},{"name":"val typeName: TypeName","description":"com.squareup.kotlinpoet.AnnotationSpec.typeName","location":"kotlinpoet/com.squareup.kotlinpoet/-annotation-spec/type-name.html","searchKeys":["typeName","val typeName: TypeName","com.squareup.kotlinpoet.AnnotationSpec.typeName"]},{"name":"val typeSpecs: MutableList<TypeSpec>","description":"com.squareup.kotlinpoet.TypeSpec.Builder.typeSpecs","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-builder/type-specs.html","searchKeys":["typeSpecs","val typeSpecs: MutableList<TypeSpec>","com.squareup.kotlinpoet.TypeSpec.Builder.typeSpecs"]},{"name":"val typeVariables: List<TypeVariableName>","description":"com.squareup.kotlinpoet.FunSpec.typeVariables","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/type-variables.html","searchKeys":["typeVariables","val typeVariables: List<TypeVariableName>","com.squareup.kotlinpoet.FunSpec.typeVariables"]},{"name":"val typeVariables: List<TypeVariableName>","description":"com.squareup.kotlinpoet.PropertySpec.typeVariables","location":"kotlinpoet/com.squareup.kotlinpoet/-property-spec/type-variables.html","searchKeys":["typeVariables","val typeVariables: List<TypeVariableName>","com.squareup.kotlinpoet.PropertySpec.typeVariables"]},{"name":"val typeVariables: List<TypeVariableName>","description":"com.squareup.kotlinpoet.TypeAliasSpec.typeVariables","location":"kotlinpoet/com.squareup.kotlinpoet/-type-alias-spec/type-variables.html","searchKeys":["typeVariables","val typeVariables: List<TypeVariableName>","com.squareup.kotlinpoet.TypeAliasSpec.typeVariables"]},{"name":"val typeVariables: List<TypeVariableName>","description":"com.squareup.kotlinpoet.TypeSpec.typeVariables","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/type-variables.html","searchKeys":["typeVariables","val typeVariables: List<TypeVariableName>","com.squareup.kotlinpoet.TypeSpec.typeVariables"]},{"name":"val typeVariables: MutableList<TypeVariableName>","description":"com.squareup.kotlinpoet.FunSpec.Builder.typeVariables","location":"kotlinpoet/com.squareup.kotlinpoet/-fun-spec/-builder/type-variables.html","searchKeys":["typeVariables","val typeVariables: MutableList<TypeVariableName>","com.squareup.kotlinpoet.FunSpec.Builder.typeVariables"]},{"name":"val typeVariables: MutableList<TypeVariableName>","description":"com.squareup.kotlinpoet.PropertySpec.Builder.typeVariables","location":"kotlinpoet/com.squareup.kotlinpoet/-property-spec/-builder/type-variables.html","searchKeys":["typeVariables","val typeVariables: MutableList<TypeVariableName>","com.squareup.kotlinpoet.PropertySpec.Builder.typeVariables"]},{"name":"val typeVariables: MutableList<TypeVariableName>","description":"com.squareup.kotlinpoet.TypeSpec.Builder.typeVariables","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-builder/type-variables.html","searchKeys":["typeVariables","val typeVariables: MutableList<TypeVariableName>","com.squareup.kotlinpoet.TypeSpec.Builder.typeVariables"]},{"name":"val typeVariables: MutableSet<TypeVariableName>","description":"com.squareup.kotlinpoet.TypeAliasSpec.Builder.typeVariables","location":"kotlinpoet/com.squareup.kotlinpoet/-type-alias-spec/-builder/type-variables.html","searchKeys":["typeVariables","val typeVariables: MutableSet<TypeVariableName>","com.squareup.kotlinpoet.TypeAliasSpec.Builder.typeVariables"]},{"name":"val useSiteTarget: AnnotationSpec.UseSiteTarget?","description":"com.squareup.kotlinpoet.AnnotationSpec.useSiteTarget","location":"kotlinpoet/com.squareup.kotlinpoet/-annotation-spec/use-site-target.html","searchKeys":["useSiteTarget","val useSiteTarget: AnnotationSpec.UseSiteTarget?","com.squareup.kotlinpoet.AnnotationSpec.useSiteTarget"]},{"name":"val variance: KModifier?","description":"com.squareup.kotlinpoet.TypeVariableName.variance","location":"kotlinpoet/com.squareup.kotlinpoet/-type-variable-name/variance.html","searchKeys":["variance","val variance: KModifier?","com.squareup.kotlinpoet.TypeVariableName.variance"]},{"name":"var initializerIndex: Int","description":"com.squareup.kotlinpoet.TypeSpec.Builder.initializerIndex","location":"kotlinpoet/com.squareup.kotlinpoet/-type-spec/-builder/initializer-index.html","searchKeys":["initializerIndex","var initializerIndex: Int","com.squareup.kotlinpoet.TypeSpec.Builder.initializerIndex"]}]